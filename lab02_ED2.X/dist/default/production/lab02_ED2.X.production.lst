

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jul 24 01:41:27 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0006                     _PORTB	set	6
   368  0008                     _PORTDbits	set	8
   369  001F                     _ADCON0bits	set	31
   370  0043                     _RD3	set	67
   371  0047                     _RD7	set	71
   372  0046                     _RD6	set	70
   373  0045                     _RD5	set	69
   374  0044                     _RD4	set	68
   375  009F                     _ADCON1bits	set	159
   376  0088                     _TRISD	set	136
   377                           
   378                           	psect	strings
   379  0003                     __pstrings:
   380  0003                     stringtab:
   381  0003                     __stringtab:
   382  0003                     stringcode:	
   383                           ;	String table - string pointers are 1 byte each
   384                           
   385  0003                     stringdir:
   386  0003  3000               	movlw	high stringdir
   387  0004  008A               	movwf	10
   388  0005  0804               	movf	4,w
   389  0006  0A84               	incf	4,f
   390  0007  0782               	addwf	2,f
   391  0008                     __stringbase:
   392  0008  3400               	retlw	0
   393  0009                     __end_of__stringtab:
   394  0009                     STR_5:
   395  0009  3477               	retlw	119	;'w'
   396  000A  3477               	retlw	119	;'w'
   397  000B  3477               	retlw	119	;'w'
   398  000C  342E               	retlw	46	;'.'
   399  000D  3465               	retlw	101	;'e'
   400  000E  346C               	retlw	108	;'l'
   401  000F  3465               	retlw	101	;'e'
   402  0010  3463               	retlw	99	;'c'
   403  0011  3474               	retlw	116	;'t'
   404  0012  3472               	retlw	114	;'r'
   405  0013  346F               	retlw	111	;'o'
   406  0014  3453               	retlw	83	;'S'
   407  0015  346F               	retlw	111	;'o'
   408  0016  346D               	retlw	109	;'m'
   409  0017  3465               	retlw	101	;'e'
   410  0018  342E               	retlw	46	;'.'
   411  0019  3463               	retlw	99	;'c'
   412  001A  346F               	retlw	111	;'o'
   413  001B  346D               	retlw	109	;'m'
   414  001C  3400               	retlw	0
   415  001D                     STR_1:
   416  001D  344C               	retlw	76	;'L'
   417  001E  3443               	retlw	67	;'C'
   418  001F  3444               	retlw	68	;'D'
   419  0020  3420               	retlw	32	;' '
   420  0021  344C               	retlw	76	;'L'
   421  0022  3469               	retlw	105	;'i'
   422  0023  3462               	retlw	98	;'b'
   423  0024  3472               	retlw	114	;'r'
   424  0025  3461               	retlw	97	;'a'
   425  0026  3472               	retlw	114	;'r'
   426  0027  3479               	retlw	121	;'y'
   427  0028  3420               	retlw	32	;' '
   428  0029  3466               	retlw	102	;'f'
   429  002A  346F               	retlw	111	;'o'
   430  002B  3472               	retlw	114	;'r'
   431  002C  3400               	retlw	0
   432  002D                     STR_3:
   433  002D  3444               	retlw	68	;'D'
   434  002E  3465               	retlw	101	;'e'
   435  002F  3476               	retlw	118	;'v'
   436  0030  3465               	retlw	101	;'e'
   437  0031  346C               	retlw	108	;'l'
   438  0032  346F               	retlw	111	;'o'
   439  0033  3470               	retlw	112	;'p'
   440  0034  3465               	retlw	101	;'e'
   441  0035  3464               	retlw	100	;'d'
   442  0036  3420               	retlw	32	;' '
   443  0037  3442               	retlw	66	;'B'
   444  0038  3479               	retlw	121	;'y'
   445  0039  3400               	retlw	0
   446  003A                     STR_4:
   447  003A  3465               	retlw	101	;'e'
   448  003B  346C               	retlw	108	;'l'
   449  003C  3465               	retlw	101	;'e'
   450  003D  3463               	retlw	99	;'c'
   451  003E  3474               	retlw	116	;'t'
   452  003F  3472               	retlw	114	;'r'
   453  0040  346F               	retlw	111	;'o'
   454  0041  3453               	retlw	83	;'S'
   455  0042  346F               	retlw	111	;'o'
   456  0043  346D               	retlw	109	;'m'
   457  0044  3465               	retlw	101	;'e'
   458  0045  3400               	retlw	0
   459  0046                     STR_6:
   460  0046  3448               	retlw	72	;'H'
   461  0047  346F               	retlw	111	;'o'
   462  0048  346C               	retlw	108	;'l'
   463  0049  3461               	retlw	97	;'a'
   464  004A  3420               	retlw	32	;' '
   465  004B  344D               	retlw	77	;'M'
   466  004C  3475               	retlw	117	;'u'
   467  004D  346E               	retlw	110	;'n'
   468  004E  3464               	retlw	100	;'d'
   469  004F  346F               	retlw	111	;'o'
   470  0050  3400               	retlw	0
   471  0051                     STR_2:
   472  0051  344D               	retlw	77	;'M'
   473  0052  3450               	retlw	80	;'P'
   474  0053  344C               	retlw	76	;'L'
   475  0054  3441               	retlw	65	;'A'
   476  0055  3442               	retlw	66	;'B'
   477  0056  3420               	retlw	32	;' '
   478  0057  3458               	retlw	88	;'X'
   479  0058  3443               	retlw	67	;'C'
   480  0059  3438               	retlw	56	;'8'
   481  005A  3400               	retlw	0
   482                           
   483                           	psect	cinit
   484  07FC                     start_initialization:	
   485                           ; #config settings
   486                           
   487  07FC                     __initialization:
   488  07FC                     end_of_initialization:	
   489                           ;End of C runtime variable initialization code
   490                           
   491  07FC                     __end_of__initialization:
   492  07FC  0183               	clrf	3
   493  07FD  120A  118A  2EF5   	ljmp	_main	;jump to C main() function
   494                           
   495                           	psect	cstackCOMMON
   496  0070                     __pcstackCOMMON:
   497  0070                     ?_Lcd_Init:
   498  0070                     ?_Lcd_Clear:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ?_Lcd_Write_String:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_Lcd_Shift_Left:	
   505                           ; 1 bytes @ 0x0
   506                           
   507  0070                     ?_Lcd_Shift_Right:	
   508                           ; 1 bytes @ 0x0
   509                           
   510  0070                     ?_Lcd_Write_Char:	
   511                           ; 1 bytes @ 0x0
   512                           
   513  0070                     ?_main:	
   514                           ; 1 bytes @ 0x0
   515                           
   516  0070                     ?_Lcd_Port:	
   517                           ; 1 bytes @ 0x0
   518                           
   519  0070                     ??_Lcd_Port:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_Lcd_Cmd:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     Lcd_Port@a:	
   526                           ; 1 bytes @ 0x0
   527                           
   528                           
   529                           ; 1 bytes @ 0x0
   530  0070                     	ds	1
   531  0071                     ??_Lcd_Write_Char:
   532  0071                     ??_Lcd_Cmd:	
   533                           ; 1 bytes @ 0x1
   534                           
   535                           
   536                           ; 1 bytes @ 0x1
   537  0071                     	ds	1
   538  0072                     Lcd_Write_Char@y:
   539                           
   540                           ; 1 bytes @ 0x2
   541  0072                     	ds	1
   542  0073                     Lcd_Cmd@a:
   543  0073                     Lcd_Write_Char@temp:	
   544                           ; 1 bytes @ 0x3
   545                           
   546                           
   547                           ; 1 bytes @ 0x3
   548  0073                     	ds	1
   549  0074                     ??_Lcd_Init:
   550  0074                     ??_Lcd_Clear:	
   551                           ; 1 bytes @ 0x4
   552                           
   553  0074                     ?_Lcd_Set_Cursor:	
   554                           ; 1 bytes @ 0x4
   555                           
   556  0074                     ??_Lcd_Shift_Left:	
   557                           ; 1 bytes @ 0x4
   558                           
   559  0074                     ??_Lcd_Shift_Right:	
   560                           ; 1 bytes @ 0x4
   561                           
   562  0074                     Lcd_Set_Cursor@b:	
   563                           ; 1 bytes @ 0x4
   564                           
   565  0074                     Lcd_Write_Char@a:	
   566                           ; 1 bytes @ 0x4
   567                           
   568                           
   569                           ; 1 bytes @ 0x4
   570  0074                     	ds	1
   571  0075                     ??_Lcd_Set_Cursor:
   572  0075                     ??_Lcd_Write_String:	
   573                           ; 1 bytes @ 0x5
   574                           
   575  0075                     Lcd_Write_String@i:	
   576                           ; 1 bytes @ 0x5
   577                           
   578                           
   579                           ; 2 bytes @ 0x5
   580  0075                     	ds	2
   581  0077                     Lcd_Set_Cursor@a:
   582  0077                     Lcd_Write_String@a:	
   583                           ; 1 bytes @ 0x7
   584                           
   585                           
   586                           ; 1 bytes @ 0x7
   587  0077                     	ds	1
   588  0078                     Lcd_Set_Cursor@z:
   589                           
   590                           ; 1 bytes @ 0x8
   591  0078                     	ds	1
   592  0079                     Lcd_Set_Cursor@y:
   593                           
   594                           ; 1 bytes @ 0x9
   595  0079                     	ds	1
   596  007A                     Lcd_Set_Cursor@temp:
   597                           
   598                           ; 1 bytes @ 0xA
   599  007A                     	ds	1
   600  007B                     ??_main:
   601                           
   602                           ; 1 bytes @ 0xB
   603  007B                     	ds	3
   604                           
   605                           	psect	cstackBANK0
   606  0020                     __pcstackBANK0:
   607  0020                     main@a:
   608                           
   609                           ; 2 bytes @ 0x0
   610  0020                     	ds	2
   611                           
   612                           	psect	maintext
   613  06F5                     __pmaintext:	
   614 ;;
   615 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   616 ;;
   617 ;; *************** function _main *****************
   618 ;; Defined at:
   619 ;;		line 39 in file "main_lab2.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;  a               2    0[BANK0 ] unsigned int 
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : B00/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       2       0       0       0
   635 ;;      Temps:          3       0       0       0       0
   636 ;;      Totals:         3       2       0       0       0
   637 ;;Total ram usage:        5 bytes
   638 ;; Hardware stack levels required when called:    3
   639 ;; This function calls:
   640 ;;		_Lcd_Clear
   641 ;;		_Lcd_Init
   642 ;;		_Lcd_Set_Cursor
   643 ;;		_Lcd_Shift_Left
   644 ;;		_Lcd_Shift_Right
   645 ;;		_Lcd_Write_Char
   646 ;;		_Lcd_Write_String
   647 ;; This function is called by:
   648 ;;		Startup code after reset
   649 ;; This function uses a non-reentrant model
   650 ;;
   651                           
   652                           
   653                           ;psect for function _main
   654  06F5                     _main:
   655  06F5                     l938:	
   656                           ;incstack = 0
   657                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   658                           
   659                           
   660                           ;main_lab2.c: 40:   unsigned int a;;main_lab2.c: 41:   TRISD = 0x00;
   661  06F5  1683               	bsf	3,5	;RP0=1, select bank1
   662  06F6  1303               	bcf	3,6	;RP1=0, select bank1
   663  06F7  0188               	clrf	8	;volatile
   664  06F8                     l940:
   665                           
   666                           ;main_lab2.c: 42:   Lcd_Init();
   667  06F8  120A  118A  2698  120A  118A  	fcall	_Lcd_Init
   668  06FD                     l942:
   669                           
   670                           ;main_lab2.c: 44:   {;main_lab2.c: 45:     Lcd_Clear();
   671  06FD  120A  118A  257F  120A  118A  	fcall	_Lcd_Clear
   672  0702                     l944:
   673                           
   674                           ;main_lab2.c: 46:     Lcd_Set_Cursor(1,1);
   675  0702  01F4               	clrf	Lcd_Set_Cursor@b
   676  0703  0AF4               	incf	Lcd_Set_Cursor@b,f
   677  0704  3001               	movlw	1
   678  0705  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   679  070A                     l946:
   680                           
   681                           ;main_lab2.c: 47:     Lcd_Write_String("LCD Library for");
   682  070A  3015               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   683  070B  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   684  0710                     l948:
   685                           
   686                           ;main_lab2.c: 48:     Lcd_Set_Cursor(2,1);
   687  0710  01F4               	clrf	Lcd_Set_Cursor@b
   688  0711  0AF4               	incf	Lcd_Set_Cursor@b,f
   689  0712  3002               	movlw	2
   690  0713  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   691  0718                     l950:
   692                           
   693                           ;main_lab2.c: 49:     Lcd_Write_String("MPLAB XC8");
   694  0718  3049               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   695  0719  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   696  071E                     l952:
   697                           
   698                           ;main_lab2.c: 50:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   699  071E  3015               	movlw	21
   700  071F  00FD               	movwf	??_main+2
   701  0720  304B               	movlw	75
   702  0721  00FC               	movwf	??_main+1
   703  0722  30BE               	movlw	190
   704  0723  00FB               	movwf	??_main
   705  0724                     u257:
   706  0724  0BFB               	decfsz	??_main,f
   707  0725  2F24               	goto	u257
   708  0726  0BFC               	decfsz	??_main+1,f
   709  0727  2F24               	goto	u257
   710  0728  0BFD               	decfsz	??_main+2,f
   711  0729  2F24               	goto	u257
   712  072A  0000               	nop
   713  072B                     l954:
   714                           
   715                           ;main_lab2.c: 51:     Lcd_Clear();
   716  072B  120A  118A  257F  120A  118A  	fcall	_Lcd_Clear
   717  0730                     l956:
   718                           
   719                           ;main_lab2.c: 52:     Lcd_Set_Cursor(1,1);
   720  0730  01F4               	clrf	Lcd_Set_Cursor@b
   721  0731  0AF4               	incf	Lcd_Set_Cursor@b,f
   722  0732  3001               	movlw	1
   723  0733  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   724  0738                     l958:
   725                           
   726                           ;main_lab2.c: 53:     Lcd_Write_String("Developed By");
   727  0738  3025               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   728  0739  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   729  073E                     l960:
   730                           
   731                           ;main_lab2.c: 54:     Lcd_Set_Cursor(2,1);
   732  073E  01F4               	clrf	Lcd_Set_Cursor@b
   733  073F  0AF4               	incf	Lcd_Set_Cursor@b,f
   734  0740  3002               	movlw	2
   735  0741  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   736  0746                     l962:
   737                           
   738                           ;main_lab2.c: 55:     Lcd_Write_String("electroSome");
   739  0746  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   740  0747  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   741  074C                     l964:
   742                           
   743                           ;main_lab2.c: 56:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   744  074C  3015               	movlw	21
   745  074D  00FD               	movwf	??_main+2
   746  074E  304B               	movlw	75
   747  074F  00FC               	movwf	??_main+1
   748  0750  30BE               	movlw	190
   749  0751  00FB               	movwf	??_main
   750  0752                     u267:
   751  0752  0BFB               	decfsz	??_main,f
   752  0753  2F52               	goto	u267
   753  0754  0BFC               	decfsz	??_main+1,f
   754  0755  2F52               	goto	u267
   755  0756  0BFD               	decfsz	??_main+2,f
   756  0757  2F52               	goto	u267
   757  0758  0000               	nop
   758  0759                     l966:
   759                           
   760                           ;main_lab2.c: 57:     Lcd_Clear();
   761  0759  120A  118A  257F  120A  118A  	fcall	_Lcd_Clear
   762  075E                     l968:
   763                           
   764                           ;main_lab2.c: 58:     Lcd_Set_Cursor(1,1);
   765  075E  01F4               	clrf	Lcd_Set_Cursor@b
   766  075F  0AF4               	incf	Lcd_Set_Cursor@b,f
   767  0760  3001               	movlw	1
   768  0761  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   769  0766                     l970:
   770                           
   771                           ;main_lab2.c: 59:     Lcd_Write_String("www.electroSome.com");
   772  0766  3001               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   773  0767  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   774  076C                     l972:
   775                           
   776                           ;main_lab2.c: 61:     for(a=0;a<15;a++)
   777  076C  1283               	bcf	3,5	;RP0=0, select bank0
   778  076D  1303               	bcf	3,6	;RP1=0, select bank0
   779  076E  01A0               	clrf	main@a
   780  076F  01A1               	clrf	main@a+1
   781  0770                     l978:
   782                           
   783                           ;main_lab2.c: 62:     {;main_lab2.c: 63:         _delay((unsigned long)((300)*(8000000/4
      +                          000.0)));
   784  0770  3004               	movlw	4
   785  0771  00FD               	movwf	??_main+2
   786  0772  300C               	movlw	12
   787  0773  00FC               	movwf	??_main+1
   788  0774  3033               	movlw	51
   789  0775  00FB               	movwf	??_main
   790  0776                     u277:
   791  0776  0BFB               	decfsz	??_main,f
   792  0777  2F76               	goto	u277
   793  0778  0BFC               	decfsz	??_main+1,f
   794  0779  2F76               	goto	u277
   795  077A  0BFD               	decfsz	??_main+2,f
   796  077B  2F76               	goto	u277
   797  077C  2F7D               	nop2
   798  077D                     l980:
   799                           
   800                           ;main_lab2.c: 64:         Lcd_Shift_Left();
   801  077D  120A  118A  258C  120A  118A  	fcall	_Lcd_Shift_Left
   802  0782                     l982:
   803                           
   804                           ;main_lab2.c: 65:     }
   805  0782  3001               	movlw	1
   806  0783  1283               	bcf	3,5	;RP0=0, select bank0
   807  0784  1303               	bcf	3,6	;RP1=0, select bank0
   808  0785  07A0               	addwf	main@a,f
   809  0786  1803               	skipnc
   810  0787  0AA1               	incf	main@a+1,f
   811  0788  3000               	movlw	0
   812  0789  07A1               	addwf	main@a+1,f
   813  078A                     l984:
   814  078A  3000               	movlw	0
   815  078B  0221               	subwf	main@a+1,w
   816  078C  300F               	movlw	15
   817  078D  1903               	skipnz
   818  078E  0220               	subwf	main@a,w
   819  078F  1C03               	skipc
   820  0790  2F92               	goto	u231
   821  0791  2F93               	goto	u230
   822  0792                     u231:
   823  0792  2F70               	goto	l978
   824  0793                     u230:
   825  0793                     l986:
   826                           
   827                           ;main_lab2.c: 67:     for(a=0;a<15;a++)
   828  0793  01A0               	clrf	main@a
   829  0794  01A1               	clrf	main@a+1
   830  0795                     l992:
   831                           
   832                           ;main_lab2.c: 68:     {;main_lab2.c: 69:         _delay((unsigned long)((300)*(8000000/4
      +                          000.0)));
   833  0795  3004               	movlw	4
   834  0796  00FD               	movwf	??_main+2
   835  0797  300C               	movlw	12
   836  0798  00FC               	movwf	??_main+1
   837  0799  3033               	movlw	51
   838  079A  00FB               	movwf	??_main
   839  079B                     u287:
   840  079B  0BFB               	decfsz	??_main,f
   841  079C  2F9B               	goto	u287
   842  079D  0BFC               	decfsz	??_main+1,f
   843  079E  2F9B               	goto	u287
   844  079F  0BFD               	decfsz	??_main+2,f
   845  07A0  2F9B               	goto	u287
   846  07A1  2FA2               	nop2
   847  07A2                     l994:
   848                           
   849                           ;main_lab2.c: 70:         Lcd_Shift_Right();
   850  07A2  120A  118A  2599  120A  118A  	fcall	_Lcd_Shift_Right
   851  07A7                     l996:
   852                           
   853                           ;main_lab2.c: 71:     }
   854  07A7  3001               	movlw	1
   855  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   856  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   857  07AA  07A0               	addwf	main@a,f
   858  07AB  1803               	skipnc
   859  07AC  0AA1               	incf	main@a+1,f
   860  07AD  3000               	movlw	0
   861  07AE  07A1               	addwf	main@a+1,f
   862  07AF                     l998:
   863  07AF  3000               	movlw	0
   864  07B0  0221               	subwf	main@a+1,w
   865  07B1  300F               	movlw	15
   866  07B2  1903               	skipnz
   867  07B3  0220               	subwf	main@a,w
   868  07B4  1C03               	skipc
   869  07B5  2FB7               	goto	u241
   870  07B6  2FB8               	goto	u240
   871  07B7                     u241:
   872  07B7  2F95               	goto	l992
   873  07B8                     u240:
   874  07B8                     l1000:
   875                           
   876                           ;main_lab2.c: 73:     Lcd_Clear();
   877  07B8  120A  118A  257F  120A  118A  	fcall	_Lcd_Clear
   878                           
   879                           ;main_lab2.c: 74:     Lcd_Set_Cursor(2,1);
   880  07BD  01F4               	clrf	Lcd_Set_Cursor@b
   881  07BE  0AF4               	incf	Lcd_Set_Cursor@b,f
   882  07BF  3002               	movlw	2
   883  07C0  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   884                           
   885                           ;main_lab2.c: 75:     Lcd_Write_Char('H');
   886  07C5  3048               	movlw	72
   887  07C6  120A  118A  2607  120A  118A  	fcall	_Lcd_Write_Char
   888                           
   889                           ;main_lab2.c: 76:     Lcd_Write_Char('o');
   890  07CB  306F               	movlw	111
   891  07CC  120A  118A  2607  120A  118A  	fcall	_Lcd_Write_Char
   892                           
   893                           ;main_lab2.c: 77:     Lcd_Write_Char('l');
   894  07D1  306C               	movlw	108
   895  07D2  120A  118A  2607  120A  118A  	fcall	_Lcd_Write_Char
   896                           
   897                           ;main_lab2.c: 78:     Lcd_Write_Char('a');
   898  07D7  3061               	movlw	97
   899  07D8  120A  118A  2607  120A  118A  	fcall	_Lcd_Write_Char
   900                           
   901                           ;main_lab2.c: 79:     Lcd_Set_Cursor(1,1);
   902  07DD  01F4               	clrf	Lcd_Set_Cursor@b
   903  07DE  0AF4               	incf	Lcd_Set_Cursor@b,f
   904  07DF  3001               	movlw	1
   905  07E0  120A  118A  2646  120A  118A  	fcall	_Lcd_Set_Cursor
   906  07E5                     l1002:
   907                           
   908                           ;main_lab2.c: 80:     Lcd_Write_String("Hola Mundo");
   909  07E5  303E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   910  07E6  120A  118A  25E2  120A  118A  	fcall	_Lcd_Write_String
   911  07EB                     l1004:
   912                           
   913                           ;main_lab2.c: 81:     _delay((unsigned long)((2000)*(8000000/4000.0)));
   914  07EB  3015               	movlw	21
   915  07EC  00FD               	movwf	??_main+2
   916  07ED  304B               	movlw	75
   917  07EE  00FC               	movwf	??_main+1
   918  07EF  30BE               	movlw	190
   919  07F0  00FB               	movwf	??_main
   920  07F1                     u297:
   921  07F1  0BFB               	decfsz	??_main,f
   922  07F2  2FF1               	goto	u297
   923  07F3  0BFC               	decfsz	??_main+1,f
   924  07F4  2FF1               	goto	u297
   925  07F5  0BFD               	decfsz	??_main+2,f
   926  07F6  2FF1               	goto	u297
   927  07F7  0000               	nop
   928  07F8  2EFD               	goto	l942
   929  07F9  120A  118A  2800   	ljmp	start
   930  07FC                     __end_of_main:
   931                           
   932                           	psect	text1
   933  05E2                     __ptext1:	
   934 ;; *************** function _Lcd_Write_String *****************
   935 ;; Defined at:
   936 ;;		line 103 in file "LCD.c"
   937 ;; Parameters:    Size  Location     Type
   938 ;;  a               1    wreg     PTR unsigned char 
   939 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   940 ;;		 -> STR_2(10), STR_1(16), 
   941 ;; Auto vars:     Size  Location     Type
   942 ;;  a               1    7[COMMON] PTR unsigned char 
   943 ;;		 -> STR_6(11), STR_5(20), STR_4(12), STR_3(13), 
   944 ;;		 -> STR_2(10), STR_1(16), 
   945 ;;  i               2    5[COMMON] int 
   946 ;; Return value:  Size  Location     Type
   947 ;;                  1    wreg      void 
   948 ;; Registers used:
   949 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   950 ;; Tracked objects:
   951 ;;		On entry : 0/0
   952 ;;		On exit  : 0/0
   953 ;;		Unchanged: 0/0
   954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   955 ;;      Params:         0       0       0       0       0
   956 ;;      Locals:         3       0       0       0       0
   957 ;;      Temps:          0       0       0       0       0
   958 ;;      Totals:         3       0       0       0       0
   959 ;;Total ram usage:        3 bytes
   960 ;; Hardware stack levels used:    1
   961 ;; Hardware stack levels required when called:    2
   962 ;; This function calls:
   963 ;;		_Lcd_Write_Char
   964 ;; This function is called by:
   965 ;;		_main
   966 ;; This function uses a non-reentrant model
   967 ;;
   968                           
   969                           
   970                           ;psect for function _Lcd_Write_String
   971  05E2                     _Lcd_Write_String:
   972                           
   973                           ;incstack = 0
   974                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   975                           ;Lcd_Write_String@a stored from wreg
   976  05E2  00F7               	movwf	Lcd_Write_String@a
   977  05E3                     l926:
   978                           
   979                           ;LCD.c: 104:     int i;;LCD.c: 105:     for (i = 0; a[i] != '\0'; i++)
   980  05E3  01F5               	clrf	Lcd_Write_String@i
   981  05E4  01F6               	clrf	Lcd_Write_String@i+1
   982  05E5  2DF9               	goto	l932
   983  05E6                     l928:
   984                           
   985                           ;LCD.c: 106:         Lcd_Write_Char(a[i]);
   986  05E6  0875               	movf	Lcd_Write_String@i,w
   987  05E7  0777               	addwf	Lcd_Write_String@a,w
   988  05E8  0084               	movwf	4
   989  05E9  120A  118A  2003  120A  118A  	fcall	stringdir
   990  05EE  120A  118A  2607  120A  118A  	fcall	_Lcd_Write_Char
   991  05F3                     l930:
   992  05F3  3001               	movlw	1
   993  05F4  07F5               	addwf	Lcd_Write_String@i,f
   994  05F5  1803               	skipnc
   995  05F6  0AF6               	incf	Lcd_Write_String@i+1,f
   996  05F7  3000               	movlw	0
   997  05F8  07F6               	addwf	Lcd_Write_String@i+1,f
   998  05F9                     l932:
   999  05F9  0875               	movf	Lcd_Write_String@i,w
  1000  05FA  0777               	addwf	Lcd_Write_String@a,w
  1001  05FB  0084               	movwf	4
  1002  05FC  120A  118A  2003  120A  118A  	fcall	stringdir
  1003  0601  3A00               	xorlw	0
  1004  0602  1D03               	skipz
  1005  0603  2E05               	goto	u221
  1006  0604  2E06               	goto	u220
  1007  0605                     u221:
  1008  0605  2DE6               	goto	l928
  1009  0606                     u220:
  1010  0606                     l90:
  1011  0606  0008               	return
  1012  0607                     __end_of_Lcd_Write_String:
  1013                           
  1014                           	psect	text2
  1015  0607                     __ptext2:	
  1016 ;; *************** function _Lcd_Write_Char *****************
  1017 ;; Defined at:
  1018 ;;		line 84 in file "LCD.c"
  1019 ;; Parameters:    Size  Location     Type
  1020 ;;  a               1    wreg     unsigned char 
  1021 ;; Auto vars:     Size  Location     Type
  1022 ;;  a               1    4[COMMON] unsigned char 
  1023 ;;  temp            1    3[COMMON] unsigned char 
  1024 ;;  y               1    2[COMMON] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, pclath, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1034 ;;      Params:         0       0       0       0       0
  1035 ;;      Locals:         3       0       0       0       0
  1036 ;;      Temps:          1       0       0       0       0
  1037 ;;      Totals:         4       0       0       0       0
  1038 ;;Total ram usage:        4 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    1
  1041 ;; This function calls:
  1042 ;;		_Lcd_Port
  1043 ;; This function is called by:
  1044 ;;		_main
  1045 ;;		_Lcd_Write_String
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           
  1050                           ;psect for function _Lcd_Write_Char
  1051  0607                     _Lcd_Write_Char:
  1052                           
  1053                           ;incstack = 0
  1054                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1055                           ;Lcd_Write_Char@a stored from wreg
  1056  0607  00F4               	movwf	Lcd_Write_Char@a
  1057  0608                     l862:
  1058                           
  1059                           ;LCD.c: 85:     char temp, y;;LCD.c: 86:     temp=a;
  1060  0608  0874               	movf	Lcd_Write_Char@a,w
  1061  0609  00F1               	movwf	??_Lcd_Write_Char
  1062  060A  0871               	movf	??_Lcd_Write_Char,w
  1063  060B  00F3               	movwf	Lcd_Write_Char@temp
  1064                           
  1065                           ;LCD.c: 87:     PORTB=temp;
  1066  060C  0873               	movf	Lcd_Write_Char@temp,w
  1067  060D  1283               	bcf	3,5	;RP0=0, select bank0
  1068  060E  1303               	bcf	3,6	;RP1=0, select bank0
  1069  060F  0086               	movwf	6	;volatile
  1070  0610                     l864:
  1071                           
  1072                           ;LCD.c: 90:     temp = a & 0x0F;
  1073  0610  0874               	movf	Lcd_Write_Char@a,w
  1074  0611  390F               	andlw	15
  1075  0612  00F1               	movwf	??_Lcd_Write_Char
  1076  0613  0871               	movf	??_Lcd_Write_Char,w
  1077  0614  00F3               	movwf	Lcd_Write_Char@temp
  1078  0615                     l866:
  1079                           
  1080                           ;LCD.c: 91:     y = a & 0xF0;
  1081  0615  0874               	movf	Lcd_Write_Char@a,w
  1082  0616  39F0               	andlw	240
  1083  0617  00F1               	movwf	??_Lcd_Write_Char
  1084  0618  0871               	movf	??_Lcd_Write_Char,w
  1085  0619  00F2               	movwf	Lcd_Write_Char@y
  1086  061A                     l868:
  1087                           
  1088                           ;LCD.c: 92:     PORTDbits.RD2 = 1;
  1089  061A  1508               	bsf	8,2	;volatile
  1090  061B                     l870:
  1091                           
  1092                           ;LCD.c: 93:     Lcd_Port(y >> 4);
  1093  061B  0872               	movf	Lcd_Write_Char@y,w
  1094  061C  00F1               	movwf	??_Lcd_Write_Char
  1095  061D  3004               	movlw	4
  1096  061E                     u175:
  1097  061E  1003               	clrc
  1098  061F  0CF1               	rrf	??_Lcd_Write_Char,f
  1099  0620  3EFF               	addlw	-1
  1100  0621  1D03               	skipz
  1101  0622  2E1E               	goto	u175
  1102  0623  0871               	movf	??_Lcd_Write_Char,w
  1103  0624  120A  118A  25C0  120A  118A  	fcall	_Lcd_Port
  1104  0629                     l872:
  1105                           
  1106                           ;LCD.c: 94:     RD3 = 1;
  1107  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1108  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1109  062B  1588               	bsf	8,3	;volatile
  1110  062C                     l874:
  1111                           
  1112                           ;LCD.c: 95:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1113  062C  301A               	movlw	26
  1114  062D  00F1               	movwf	??_Lcd_Write_Char
  1115  062E                     u307:
  1116  062E  0BF1               	decfsz	??_Lcd_Write_Char,f
  1117  062F  2E2E               	goto	u307
  1118  0630  0000               	nop
  1119  0631                     l876:
  1120                           
  1121                           ;LCD.c: 96:     RD3 = 0;
  1122  0631  1283               	bcf	3,5	;RP0=0, select bank0
  1123  0632  1303               	bcf	3,6	;RP1=0, select bank0
  1124  0633  1188               	bcf	8,3	;volatile
  1125                           
  1126                           ;LCD.c: 97:     Lcd_Port(temp);
  1127  0634  0873               	movf	Lcd_Write_Char@temp,w
  1128  0635  120A  118A  25C0  120A  118A  	fcall	_Lcd_Port
  1129  063A                     l878:
  1130                           
  1131                           ;LCD.c: 98:     RD3 = 1;
  1132  063A  1283               	bcf	3,5	;RP0=0, select bank0
  1133  063B  1303               	bcf	3,6	;RP1=0, select bank0
  1134  063C  1588               	bsf	8,3	;volatile
  1135  063D                     l880:
  1136                           
  1137                           ;LCD.c: 99:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  1138  063D  301A               	movlw	26
  1139  063E  00F1               	movwf	??_Lcd_Write_Char
  1140  063F                     u317:
  1141  063F  0BF1               	decfsz	??_Lcd_Write_Char,f
  1142  0640  2E3F               	goto	u317
  1143  0641  0000               	nop
  1144  0642                     l882:
  1145                           
  1146                           ;LCD.c: 100:     RD3 = 0;
  1147  0642  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0643  1303               	bcf	3,6	;RP1=0, select bank0
  1149  0644  1188               	bcf	8,3	;volatile
  1150  0645                     l84:
  1151  0645  0008               	return
  1152  0646                     __end_of_Lcd_Write_Char:
  1153                           
  1154                           	psect	text3
  1155  0599                     __ptext3:	
  1156 ;; *************** function _Lcd_Shift_Right *****************
  1157 ;; Defined at:
  1158 ;;		line 109 in file "LCD.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 0/0
  1169 ;;		On exit  : 0/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          0       0       0       0       0
  1175 ;;      Totals:         0       0       0       0       0
  1176 ;;Total ram usage:        0 bytes
  1177 ;; Hardware stack levels used:    1
  1178 ;; Hardware stack levels required when called:    2
  1179 ;; This function calls:
  1180 ;;		_Lcd_Cmd
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _Lcd_Shift_Right
  1188  0599                     _Lcd_Shift_Right:
  1189  0599                     l936:	
  1190                           ;incstack = 0
  1191                           ; Regs used in _Lcd_Shift_Right: [wreg+status,2+status,0+pclath+cstack]
  1192                           
  1193                           
  1194                           ;LCD.c: 110:     Lcd_Cmd(0x01);
  1195  0599  3001               	movlw	1
  1196  059A  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1197                           
  1198                           ;LCD.c: 111:     Lcd_Cmd(0x0C);
  1199  059F  300C               	movlw	12
  1200  05A0  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1201  05A5                     l93:
  1202  05A5  0008               	return
  1203  05A6                     __end_of_Lcd_Shift_Right:
  1204                           
  1205                           	psect	text4
  1206  058C                     __ptext4:	
  1207 ;; *************** function _Lcd_Shift_Left *****************
  1208 ;; Defined at:
  1209 ;;		line 114 in file "LCD.c"
  1210 ;; Parameters:    Size  Location     Type
  1211 ;;		None
  1212 ;; Auto vars:     Size  Location     Type
  1213 ;;		None
  1214 ;; Return value:  Size  Location     Type
  1215 ;;                  1    wreg      void 
  1216 ;; Registers used:
  1217 ;;		wreg, status,2, status,0, pclath, cstack
  1218 ;; Tracked objects:
  1219 ;;		On entry : 0/0
  1220 ;;		On exit  : 0/0
  1221 ;;		Unchanged: 0/0
  1222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1223 ;;      Params:         0       0       0       0       0
  1224 ;;      Locals:         0       0       0       0       0
  1225 ;;      Temps:          0       0       0       0       0
  1226 ;;      Totals:         0       0       0       0       0
  1227 ;;Total ram usage:        0 bytes
  1228 ;; Hardware stack levels used:    1
  1229 ;; Hardware stack levels required when called:    2
  1230 ;; This function calls:
  1231 ;;		_Lcd_Cmd
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237                           
  1238                           ;psect for function _Lcd_Shift_Left
  1239  058C                     _Lcd_Shift_Left:
  1240  058C                     l934:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _Lcd_Shift_Left: [wreg+status,2+status,0+pclath+cstack]
  1243                           
  1244                           
  1245                           ;LCD.c: 115:     Lcd_Cmd(0x01);
  1246  058C  3001               	movlw	1
  1247  058D  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1248                           
  1249                           ;LCD.c: 116:     Lcd_Cmd(0x08);
  1250  0592  3008               	movlw	8
  1251  0593  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1252  0598                     l96:
  1253  0598  0008               	return
  1254  0599                     __end_of_Lcd_Shift_Left:
  1255                           
  1256                           	psect	text5
  1257  0646                     __ptext5:	
  1258 ;; *************** function _Lcd_Set_Cursor *****************
  1259 ;; Defined at:
  1260 ;;		line 48 in file "LCD.c"
  1261 ;; Parameters:    Size  Location     Type
  1262 ;;  a               1    wreg     unsigned char 
  1263 ;;  b               1    4[COMMON] unsigned char 
  1264 ;; Auto vars:     Size  Location     Type
  1265 ;;  a               1    7[COMMON] unsigned char 
  1266 ;;  temp            1   10[COMMON] unsigned char 
  1267 ;;  y               1    9[COMMON] unsigned char 
  1268 ;;  z               1    8[COMMON] unsigned char 
  1269 ;; Return value:  Size  Location     Type
  1270 ;;                  1    wreg      void 
  1271 ;; Registers used:
  1272 ;;		wreg, status,2, status,0, pclath, cstack
  1273 ;; Tracked objects:
  1274 ;;		On entry : 0/0
  1275 ;;		On exit  : 0/0
  1276 ;;		Unchanged: 0/0
  1277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1278 ;;      Params:         1       0       0       0       0
  1279 ;;      Locals:         4       0       0       0       0
  1280 ;;      Temps:          2       0       0       0       0
  1281 ;;      Totals:         7       0       0       0       0
  1282 ;;Total ram usage:        7 bytes
  1283 ;; Hardware stack levels used:    1
  1284 ;; Hardware stack levels required when called:    2
  1285 ;; This function calls:
  1286 ;;		_Lcd_Cmd
  1287 ;; This function is called by:
  1288 ;;		_main
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _Lcd_Set_Cursor
  1294  0646                     _Lcd_Set_Cursor:
  1295                           
  1296                           ;incstack = 0
  1297                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1298                           ;Lcd_Set_Cursor@a stored from wreg
  1299  0646  00F7               	movwf	Lcd_Set_Cursor@a
  1300  0647                     l906:
  1301                           
  1302                           ;LCD.c: 49:     char temp, z, y;;LCD.c: 50:     if (a == 1) {
  1303  0647  0377               	decf	Lcd_Set_Cursor@a,w
  1304  0648  1D03               	btfss	3,2
  1305  0649  2E4B               	goto	u181
  1306  064A  2E4C               	goto	u180
  1307  064B                     u181:
  1308  064B  2E6F               	goto	l916
  1309  064C                     u180:
  1310  064C                     l908:
  1311                           
  1312                           ;LCD.c: 51:         temp = 0x80 + b - 1;
  1313  064C  0874               	movf	Lcd_Set_Cursor@b,w
  1314  064D  3E7F               	addlw	127
  1315  064E  00F5               	movwf	??_Lcd_Set_Cursor
  1316  064F  0875               	movf	??_Lcd_Set_Cursor,w
  1317  0650  00FA               	movwf	Lcd_Set_Cursor@temp
  1318                           
  1319                           ;LCD.c: 52:         z = temp >> 4;
  1320  0651  087A               	movf	Lcd_Set_Cursor@temp,w
  1321  0652  00F5               	movwf	??_Lcd_Set_Cursor
  1322  0653  3004               	movlw	4
  1323  0654                     u195:
  1324  0654  1003               	clrc
  1325  0655  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1326  0656  3EFF               	addlw	-1
  1327  0657  1D03               	skipz
  1328  0658  2E54               	goto	u195
  1329  0659  0875               	movf	??_Lcd_Set_Cursor,w
  1330  065A  00F6               	movwf	??_Lcd_Set_Cursor+1
  1331  065B  0876               	movf	??_Lcd_Set_Cursor+1,w
  1332  065C  00F8               	movwf	Lcd_Set_Cursor@z
  1333  065D                     l910:
  1334                           
  1335                           ;LCD.c: 53:         y = temp & 0x0F;
  1336  065D  087A               	movf	Lcd_Set_Cursor@temp,w
  1337  065E  390F               	andlw	15
  1338  065F  00F5               	movwf	??_Lcd_Set_Cursor
  1339  0660  0875               	movf	??_Lcd_Set_Cursor,w
  1340  0661  00F9               	movwf	Lcd_Set_Cursor@y
  1341  0662                     l912:
  1342                           
  1343                           ;LCD.c: 54:         Lcd_Cmd(z);
  1344  0662  0878               	movf	Lcd_Set_Cursor@z,w
  1345  0663  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1346  0668                     l914:
  1347                           
  1348                           ;LCD.c: 55:         Lcd_Cmd(y);
  1349  0668  0879               	movf	Lcd_Set_Cursor@y,w
  1350  0669  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1351                           
  1352                           ;LCD.c: 56:     } else if (a == 2) {
  1353  066E  2E97               	goto	l78
  1354  066F                     l916:
  1355  066F  3002               	movlw	2
  1356  0670  0677               	xorwf	Lcd_Set_Cursor@a,w
  1357  0671  1D03               	btfss	3,2
  1358  0672  2E74               	goto	u201
  1359  0673  2E75               	goto	u200
  1360  0674                     u201:
  1361  0674  2E97               	goto	l78
  1362  0675                     u200:
  1363  0675                     l918:
  1364                           
  1365                           ;LCD.c: 57:         temp = 0xC0 + b - 1;
  1366  0675  0874               	movf	Lcd_Set_Cursor@b,w
  1367  0676  3EBF               	addlw	191
  1368  0677  00F5               	movwf	??_Lcd_Set_Cursor
  1369  0678  0875               	movf	??_Lcd_Set_Cursor,w
  1370  0679  00FA               	movwf	Lcd_Set_Cursor@temp
  1371                           
  1372                           ;LCD.c: 58:         z = temp >> 4;
  1373  067A  087A               	movf	Lcd_Set_Cursor@temp,w
  1374  067B  00F5               	movwf	??_Lcd_Set_Cursor
  1375  067C  3004               	movlw	4
  1376  067D                     u215:
  1377  067D  1003               	clrc
  1378  067E  0CF5               	rrf	??_Lcd_Set_Cursor,f
  1379  067F  3EFF               	addlw	-1
  1380  0680  1D03               	skipz
  1381  0681  2E7D               	goto	u215
  1382  0682  0875               	movf	??_Lcd_Set_Cursor,w
  1383  0683  00F6               	movwf	??_Lcd_Set_Cursor+1
  1384  0684  0876               	movf	??_Lcd_Set_Cursor+1,w
  1385  0685  00F8               	movwf	Lcd_Set_Cursor@z
  1386  0686                     l920:
  1387                           
  1388                           ;LCD.c: 59:         y = temp & 0x0F;
  1389  0686  087A               	movf	Lcd_Set_Cursor@temp,w
  1390  0687  390F               	andlw	15
  1391  0688  00F5               	movwf	??_Lcd_Set_Cursor
  1392  0689  0875               	movf	??_Lcd_Set_Cursor,w
  1393  068A  00F9               	movwf	Lcd_Set_Cursor@y
  1394  068B                     l922:
  1395                           
  1396                           ;LCD.c: 60:         Lcd_Cmd(z);
  1397  068B  0878               	movf	Lcd_Set_Cursor@z,w
  1398  068C  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1399  0691                     l924:
  1400                           
  1401                           ;LCD.c: 61:         Lcd_Cmd(y);
  1402  0691  0879               	movf	Lcd_Set_Cursor@y,w
  1403  0692  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1404  0697                     l78:
  1405  0697  0008               	return
  1406  0698                     __end_of_Lcd_Set_Cursor:
  1407                           
  1408                           	psect	text6
  1409  0698                     __ptext6:	
  1410 ;; *************** function _Lcd_Init *****************
  1411 ;; Defined at:
  1412 ;;		line 65 in file "LCD.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          2       0       0       0       0
  1429 ;;      Totals:         2       0       0       0       0
  1430 ;;Total ram usage:        2 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    2
  1433 ;; This function calls:
  1434 ;;		_Lcd_Cmd
  1435 ;;		_Lcd_Port
  1436 ;; This function is called by:
  1437 ;;		_main
  1438 ;; This function uses a non-reentrant model
  1439 ;;
  1440                           
  1441                           
  1442                           ;psect for function _Lcd_Init
  1443  0698                     _Lcd_Init:
  1444  0698                     l894:	
  1445                           ;incstack = 0
  1446                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1447                           
  1448                           
  1449                           ;LCD.c: 67:     Lcd_Port(0x00);
  1450  0698  3000               	movlw	0
  1451  0699  120A  118A  25C0  120A  118A  	fcall	_Lcd_Port
  1452  069E                     l896:
  1453                           
  1454                           ;LCD.c: 68:     _delay((unsigned long)((20)*(8000000/4000.0)));
  1455  069E  3034               	movlw	52
  1456  069F  00F5               	movwf	??_Lcd_Init+1
  1457  06A0  30F1               	movlw	241
  1458  06A1  00F4               	movwf	??_Lcd_Init
  1459  06A2                     u327:
  1460  06A2  0BF4               	decfsz	??_Lcd_Init,f
  1461  06A3  2EA2               	goto	u327
  1462  06A4  0BF5               	decfsz	??_Lcd_Init+1,f
  1463  06A5  2EA2               	goto	u327
  1464  06A6  2EA7               	nop2
  1465  06A7                     l898:
  1466                           
  1467                           ;LCD.c: 69:     Lcd_Cmd(0x03);
  1468  06A7  3003               	movlw	3
  1469  06A8  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1470                           
  1471                           ;LCD.c: 70:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1472  06AD  300D               	movlw	13
  1473  06AE  00F5               	movwf	??_Lcd_Init+1
  1474  06AF  30FB               	movlw	251
  1475  06B0  00F4               	movwf	??_Lcd_Init
  1476  06B1                     u337:
  1477  06B1  0BF4               	decfsz	??_Lcd_Init,f
  1478  06B2  2EB1               	goto	u337
  1479  06B3  0BF5               	decfsz	??_Lcd_Init+1,f
  1480  06B4  2EB1               	goto	u337
  1481  06B5  2EB6               	nop2
  1482  06B6                     l900:
  1483                           
  1484                           ;LCD.c: 71:     Lcd_Cmd(0x03);
  1485  06B6  3003               	movlw	3
  1486  06B7  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1487  06BC                     l902:
  1488                           
  1489                           ;LCD.c: 72:     _delay((unsigned long)((11)*(8000000/4000.0)));
  1490  06BC  301D               	movlw	29
  1491  06BD  00F5               	movwf	??_Lcd_Init+1
  1492  06BE  3091               	movlw	145
  1493  06BF  00F4               	movwf	??_Lcd_Init
  1494  06C0                     u347:
  1495  06C0  0BF4               	decfsz	??_Lcd_Init,f
  1496  06C1  2EC0               	goto	u347
  1497  06C2  0BF5               	decfsz	??_Lcd_Init+1,f
  1498  06C3  2EC0               	goto	u347
  1499                           
  1500                           ;LCD.c: 73:     Lcd_Cmd(0x03);
  1501  06C4  3003               	movlw	3
  1502  06C5  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1503                           
  1504                           ;LCD.c: 75:     Lcd_Cmd(0x02);
  1505  06CA  3002               	movlw	2
  1506  06CB  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1507                           
  1508                           ;LCD.c: 76:     Lcd_Cmd(0x02);
  1509  06D0  3002               	movlw	2
  1510  06D1  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1511                           
  1512                           ;LCD.c: 77:     Lcd_Cmd(0x08);
  1513  06D6  3008               	movlw	8
  1514  06D7  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1515                           
  1516                           ;LCD.c: 78:     Lcd_Cmd(0x00);
  1517  06DC  3000               	movlw	0
  1518  06DD  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1519                           
  1520                           ;LCD.c: 79:     Lcd_Cmd(0x0C);
  1521  06E2  300C               	movlw	12
  1522  06E3  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1523                           
  1524                           ;LCD.c: 80:     Lcd_Cmd(0x00);
  1525  06E8  3000               	movlw	0
  1526  06E9  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1527                           
  1528                           ;LCD.c: 81:     Lcd_Cmd(0x06);
  1529  06EE  3006               	movlw	6
  1530  06EF  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1531  06F4                     l81:
  1532  06F4  0008               	return
  1533  06F5                     __end_of_Lcd_Init:
  1534                           
  1535                           	psect	text7
  1536  057F                     __ptext7:	
  1537 ;; *************** function _Lcd_Clear *****************
  1538 ;; Defined at:
  1539 ;;		line 43 in file "LCD.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;		None
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;		None
  1544 ;; Return value:  Size  Location     Type
  1545 ;;                  1    wreg      void 
  1546 ;; Registers used:
  1547 ;;		wreg, status,2, status,0, pclath, cstack
  1548 ;; Tracked objects:
  1549 ;;		On entry : 0/0
  1550 ;;		On exit  : 0/0
  1551 ;;		Unchanged: 0/0
  1552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1553 ;;      Params:         0       0       0       0       0
  1554 ;;      Locals:         0       0       0       0       0
  1555 ;;      Temps:          0       0       0       0       0
  1556 ;;      Totals:         0       0       0       0       0
  1557 ;;Total ram usage:        0 bytes
  1558 ;; Hardware stack levels used:    1
  1559 ;; Hardware stack levels required when called:    2
  1560 ;; This function calls:
  1561 ;;		_Lcd_Cmd
  1562 ;; This function is called by:
  1563 ;;		_main
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _Lcd_Clear
  1569  057F                     _Lcd_Clear:
  1570  057F                     l904:	
  1571                           ;incstack = 0
  1572                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1573                           
  1574                           
  1575                           ;LCD.c: 44:     Lcd_Cmd(0);
  1576  057F  3000               	movlw	0
  1577  0580  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1578                           
  1579                           ;LCD.c: 45:     Lcd_Cmd(1);
  1580  0585  3001               	movlw	1
  1581  0586  120A  118A  25A6  120A  118A  	fcall	_Lcd_Cmd
  1582  058B                     l72:
  1583  058B  0008               	return
  1584  058C                     __end_of_Lcd_Clear:
  1585                           
  1586                           	psect	text8
  1587  05A6                     __ptext8:	
  1588 ;; *************** function _Lcd_Cmd *****************
  1589 ;; Defined at:
  1590 ;;		line 35 in file "LCD.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;  a               1    wreg     unsigned char 
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  a               1    3[COMMON] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         0       0       0       0       0
  1605 ;;      Locals:         1       0       0       0       0
  1606 ;;      Temps:          2       0       0       0       0
  1607 ;;      Totals:         3       0       0       0       0
  1608 ;;Total ram usage:        3 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    1
  1611 ;; This function calls:
  1612 ;;		_Lcd_Port
  1613 ;; This function is called by:
  1614 ;;		_Lcd_Clear
  1615 ;;		_Lcd_Set_Cursor
  1616 ;;		_Lcd_Init
  1617 ;;		_Lcd_Shift_Right
  1618 ;;		_Lcd_Shift_Left
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           
  1622                           
  1623                           ;psect for function _Lcd_Cmd
  1624  05A6                     _Lcd_Cmd:
  1625                           
  1626                           ;incstack = 0
  1627                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1628                           ;Lcd_Cmd@a stored from wreg
  1629  05A6  00F3               	movwf	Lcd_Cmd@a
  1630  05A7                     l884:
  1631                           
  1632                           ;LCD.c: 36:     PORTDbits.RD2 = 0;
  1633  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  1634  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  1635  05A9  1108               	bcf	8,2	;volatile
  1636  05AA                     l886:
  1637                           
  1638                           ;LCD.c: 37:     Lcd_Port(a);
  1639  05AA  0873               	movf	Lcd_Cmd@a,w
  1640  05AB  120A  118A  25C0  120A  118A  	fcall	_Lcd_Port
  1641  05B0                     l888:
  1642                           
  1643                           ;LCD.c: 38:     RD3 = 1;
  1644  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  1645  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  1646  05B2  1588               	bsf	8,3	;volatile
  1647  05B3                     l890:
  1648                           
  1649                           ;LCD.c: 39:     _delay((unsigned long)((4)*(8000000/4000.0)));
  1650  05B3  300B               	movlw	11
  1651  05B4  00F2               	movwf	??_Lcd_Cmd+1
  1652  05B5  3062               	movlw	98
  1653  05B6  00F1               	movwf	??_Lcd_Cmd
  1654  05B7                     u357:
  1655  05B7  0BF1               	decfsz	??_Lcd_Cmd,f
  1656  05B8  2DB7               	goto	u357
  1657  05B9  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1658  05BA  2DB7               	goto	u357
  1659  05BB  0000               	nop
  1660  05BC                     l892:
  1661                           
  1662                           ;LCD.c: 40:     RD3 = 0;
  1663  05BC  1283               	bcf	3,5	;RP0=0, select bank0
  1664  05BD  1303               	bcf	3,6	;RP1=0, select bank0
  1665  05BE  1188               	bcf	8,3	;volatile
  1666  05BF                     l69:
  1667  05BF  0008               	return
  1668  05C0                     __end_of_Lcd_Cmd:
  1669                           
  1670                           	psect	text9
  1671  05C0                     __ptext9:	
  1672 ;; *************** function _Lcd_Port *****************
  1673 ;; Defined at:
  1674 ;;		line 13 in file "LCD.c"
  1675 ;; Parameters:    Size  Location     Type
  1676 ;;  a               1    wreg     unsigned char 
  1677 ;; Auto vars:     Size  Location     Type
  1678 ;;  a               1    0[COMMON] unsigned char 
  1679 ;; Return value:  Size  Location     Type
  1680 ;;                  1    wreg      void 
  1681 ;; Registers used:
  1682 ;;		wreg
  1683 ;; Tracked objects:
  1684 ;;		On entry : 0/0
  1685 ;;		On exit  : 0/0
  1686 ;;		Unchanged: 0/0
  1687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1688 ;;      Params:         0       0       0       0       0
  1689 ;;      Locals:         1       0       0       0       0
  1690 ;;      Temps:          0       0       0       0       0
  1691 ;;      Totals:         1       0       0       0       0
  1692 ;;Total ram usage:        1 bytes
  1693 ;; Hardware stack levels used:    1
  1694 ;; This function calls:
  1695 ;;		Nothing
  1696 ;; This function is called by:
  1697 ;;		_Lcd_Cmd
  1698 ;;		_Lcd_Init
  1699 ;;		_Lcd_Write_Char
  1700 ;; This function uses a non-reentrant model
  1701 ;;
  1702                           
  1703                           
  1704                           ;psect for function _Lcd_Port
  1705  05C0                     _Lcd_Port:
  1706                           
  1707                           ;incstack = 0
  1708                           ; Regs used in _Lcd_Port: [wreg]
  1709                           ;Lcd_Port@a stored from wreg
  1710  05C0  00F0               	movwf	Lcd_Port@a
  1711  05C1                     l852:
  1712                           
  1713                           ;LCD.c: 14:     if (a & 1)
  1714  05C1  1C70               	btfss	Lcd_Port@a,0
  1715  05C2  2DC4               	goto	u131
  1716  05C3  2DC5               	goto	u130
  1717  05C4                     u131:
  1718  05C4  2DC9               	goto	l58
  1719  05C5                     u130:
  1720  05C5                     l854:
  1721                           
  1722                           ;LCD.c: 15:         RD4 = 1;
  1723  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  1724  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  1725  05C7  1608               	bsf	8,4	;volatile
  1726  05C8  2DCC               	goto	l59
  1727  05C9                     l58:	
  1728                           ;LCD.c: 16:     else
  1729                           
  1730                           
  1731                           ;LCD.c: 17:         RD4 = 0;
  1732  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1733  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1734  05CB  1208               	bcf	8,4	;volatile
  1735  05CC                     l59:
  1736                           
  1737                           ;LCD.c: 19:     if (a & 2)
  1738  05CC  1CF0               	btfss	Lcd_Port@a,1
  1739  05CD  2DCF               	goto	u141
  1740  05CE  2DD0               	goto	u140
  1741  05CF                     u141:
  1742  05CF  2DD2               	goto	l60
  1743  05D0                     u140:
  1744  05D0                     l856:
  1745                           
  1746                           ;LCD.c: 20:         RD5 = 1;
  1747  05D0  1688               	bsf	8,5	;volatile
  1748  05D1  2DD3               	goto	l61
  1749  05D2                     l60:	
  1750                           ;LCD.c: 21:     else
  1751                           
  1752                           
  1753                           ;LCD.c: 22:         RD5 = 0;
  1754  05D2  1288               	bcf	8,5	;volatile
  1755  05D3                     l61:
  1756                           
  1757                           ;LCD.c: 24:     if (a & 4)
  1758  05D3  1D70               	btfss	Lcd_Port@a,2
  1759  05D4  2DD6               	goto	u151
  1760  05D5  2DD7               	goto	u150
  1761  05D6                     u151:
  1762  05D6  2DD9               	goto	l62
  1763  05D7                     u150:
  1764  05D7                     l858:
  1765                           
  1766                           ;LCD.c: 25:         RD6 = 1;
  1767  05D7  1708               	bsf	8,6	;volatile
  1768  05D8  2DDA               	goto	l63
  1769  05D9                     l62:	
  1770                           ;LCD.c: 26:     else
  1771                           
  1772                           
  1773                           ;LCD.c: 27:         RD6 = 0;
  1774  05D9  1308               	bcf	8,6	;volatile
  1775  05DA                     l63:
  1776                           
  1777                           ;LCD.c: 29:     if (a & 8)
  1778  05DA  1DF0               	btfss	Lcd_Port@a,3
  1779  05DB  2DDD               	goto	u161
  1780  05DC  2DDE               	goto	u160
  1781  05DD                     u161:
  1782  05DD  2DE0               	goto	l64
  1783  05DE                     u160:
  1784  05DE                     l860:
  1785                           
  1786                           ;LCD.c: 30:         RD7 = 1;
  1787  05DE  1788               	bsf	8,7	;volatile
  1788  05DF  2DE1               	goto	l66
  1789  05E0                     l64:	
  1790                           ;LCD.c: 31:     else
  1791                           
  1792                           
  1793                           ;LCD.c: 32:         RD7 = 0;
  1794  05E0  1388               	bcf	8,7	;volatile
  1795  05E1                     l66:
  1796  05E1  0008               	return
  1797  05E2                     __end_of_Lcd_Port:
  1798  007E                     btemp	set	126	;btemp
  1799  007E                     wtemp0	set	126
  1800                           
  1801                           	psect	config
  1802                           
  1803                           ;Config register CONFIG1 @ 0x2007
  1804                           ;	Oscillator Selection bits
  1805                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1806                           ;	Watchdog Timer Enable bit
  1807                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1808                           ;	Power-up Timer Enable bit
  1809                           ;	PWRTE = OFF, PWRT disabled
  1810                           ;	RE3/MCLR pin function select bit
  1811                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1812                           ;	Code Protection bit
  1813                           ;	CP = OFF, Program memory code protection is disabled
  1814                           ;	Data Code Protection bit
  1815                           ;	CPD = OFF, Data memory code protection is disabled
  1816                           ;	Brown Out Reset Selection bits
  1817                           ;	BOREN = OFF, BOR disabled
  1818                           ;	Internal External Switchover bit
  1819                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1820                           ;	Fail-Safe Clock Monitor Enabled bit
  1821                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1822                           ;	Low Voltage Programming Enable bit
  1823                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1824                           ;	In-Circuit Debugger Mode bit
  1825                           ;	DEBUG = 0x1, unprogrammed default
  1826  2007                     	org	8199
  1827  2007  20D6               	dw	8406
  1828                           
  1829                           ;Config register CONFIG2 @ 0x2008
  1830                           ;	Brown-out Reset Selection bit
  1831                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1832                           ;	Flash Program Memory Self Write Enable bits
  1833                           ;	WRT = OFF, Write protection off
  1834  2008                     	org	8200
  1835  2008  3FFF               	dw	16383

Data Sizes:
    Strings     82
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 20
		 -> STR_6(CODE[11]), STR_5(CODE[20]), STR_4(CODE[12]), STR_3(CODE[13]), 
		 -> STR_2(CODE[10]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Shift_Right->_Lcd_Cmd
    _Lcd_Shift_Left->_Lcd_Cmd
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    2266
                                             11 COMMON     3     3      0
                                              0 BANK0      2     2      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Shift_Left
                    _Lcd_Shift_Right
                     _Lcd_Write_Char
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     511
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     223
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Right                                      0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Shift_Left                                       0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       7     6      1     912
                                              4 COMMON     7     6      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Left
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Shift_Right
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jul 24 01:41:27 2021

                        pc 0002                         l60 05D2                         l61 05D3  
                       l62 05D9                         l63 05DA                         l64 05E0  
                       l72 058B                         l81 06F4                         l66 05E1  
                       l58 05C9                         l90 0606                         l59 05CC  
                       l84 0645                         l69 05BF                         l93 05A5  
                       l78 0697                         l96 0598                         fsr 0004  
                      l900 06B6                        l902 06BC                        l910 065D  
                      l904 057F                        l920 0686                        l912 0662  
                      l922 068B                        l914 0668                        l906 0647  
                      l930 05F3                        l860 05DE                        l852 05C1  
                      l924 0691                        l908 064C                        l916 066F  
                      l932 05F9                        l940 06F8                        l854 05C5  
                      l918 0675                        l934 058C                        l870 061B  
                      l862 0608                        l926 05E3                        l950 0718  
                      l942 06FD                        l856 05D0                        l936 0599  
                      l880 063D                        l872 0629                        l864 0610  
                      l928 05E6                        l960 073E                        l952 071E  
                      l944 0702                        l858 05D7                        l890 05B3  
                      l882 0642                        l874 062C                        l866 0615  
                      l970 0766                        l962 0746                        l954 072B  
                      l946 070A                        l938 06F5                        l892 05BC  
                      l884 05A7                        l876 0631                        l868 061A  
                      l980 077D                        l972 076C                        l964 074C  
                      l956 0730                        l948 0710                        l886 05AA  
                      l894 0698                        l878 063A                        l982 0782  
                      l966 0759                        l958 0738                        l888 05B0  
                      l896 069E                        l992 0795                        l984 078A  
                      l968 075E                        l898 06A7                        l994 07A2  
                      l986 0793                        l978 0770                        l996 07A7  
                      l998 07AF                        _RD3 0043                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      u200 0675                        u201 0674                        u130 05C5  
                      u131 05C4                        u140 05D0                        u220 0606  
                      u141 05CF                        u221 0605                        u150 05D7  
                      u230 0793                        u151 05D6                        u215 067D  
                      u231 0792                        u160 05DE                        u240 07B8  
                      u161 05DD                        u241 07B7                        u307 062E  
                      u180 064C                        u181 064B                        u317 063F  
                      u327 06A2                        u175 061E                        u337 06B1  
                      u257 0724                        u347 06C0                        u195 0654  
                      u267 0752                        u357 05B7                        u277 0776  
                      u287 079B                        u297 07F1                        fsr0 0004  
                     l1000 07B8                       l1002 07E5                       l1004 07EB  
                     STR_1 001D                       STR_2 0051                       STR_3 002D  
                     STR_4 003A                       STR_5 0009                       STR_6 0046  
        ?_Lcd_Write_String 0070                       _main 06F5                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 05C0  
                    ?_main 0070                      _PORTB 0006    __size_of_Lcd_Set_Cursor 0052  
                    _TRISD 0088    __size_of_Lcd_Shift_Left 000D                      main@a 0020  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 06F5           __end_of_Lcd_Port 05E2            __initialization 07FC  
             __end_of_main 07FC                     ??_main 007B         __size_of_Lcd_Clear 000D  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 003F   __size_of_Lcd_Shift_Right 000D  
          Lcd_Set_Cursor@a 0077            Lcd_Set_Cursor@b 0074            Lcd_Set_Cursor@y 0079  
          Lcd_Set_Cursor@z 0078    __end_of__initialization 07FC          __end_of_Lcd_Clear 058C  
           __pcstackCOMMON 0070             _Lcd_Set_Cursor 0646             _Lcd_Shift_Left 058C  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                 __pmaintext 06F5  
__size_of_Lcd_Write_String 0025     __end_of_Lcd_Set_Cursor 0698     __end_of_Lcd_Shift_Left 0599  
        ??_Lcd_Shift_Right 0074                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0607                    _Lcd_Cmd 05A6  
          ?_Lcd_Set_Cursor 0074                    __ptext1 05E2                    __ptext2 0607  
                  __ptext3 0599                    __ptext4 058C                    __ptext5 0646  
                  __ptext6 0698                    __ptext7 057F                    __ptext8 05A6  
                  __ptext9 05C0            ?_Lcd_Shift_Left 0070     __end_of_Lcd_Write_Char 0646  
     end_of_initialization 07FC                  Lcd_Port@a 0070                  _PORTDbits 0008  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
                _Lcd_Clear 057F           _Lcd_Write_String 05E2        start_initialization 07FC  
        __size_of_Lcd_Init 005D          __size_of_Lcd_Port 0022                 ?_Lcd_Clear 0070  
          _Lcd_Shift_Right 0599            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0072  
                ___latbits 0002              __pcstackBANK0 0020                   ?_Lcd_Cmd 0070  
         ??_Lcd_Set_Cursor 0075           ??_Lcd_Shift_Left 0074                  __pstrings 0003  
  __end_of_Lcd_Shift_Right 05A6                   Lcd_Cmd@a 0073                ??_Lcd_Clear 0074  
               _ADCON0bits 001F                __stringbase 0008                 _ADCON1bits 009F  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 0698                   _Lcd_Port 05C0  
 __end_of_Lcd_Write_String 0607           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
            __size_of_main 0107           ?_Lcd_Shift_Right 0070         Lcd_Write_Char@temp 0073  
                stringcode 0003         Lcd_Set_Cursor@temp 007A                   stringdir 0003  
                 stringtab 0003  
