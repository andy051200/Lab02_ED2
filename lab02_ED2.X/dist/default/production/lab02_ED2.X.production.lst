

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jul 25 23:31:29 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0007                     _PORTCbits	set	7
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  0007                     _PORTC	set	7
   374  0006                     _PORTB	set	6
   375  0009                     _PORTE	set	9
   376  0008                     _PORTD	set	8
   377  0039                     _RC1	set	57
   378  0038                     _RC0	set	56
   379  009F                     _ADCON1bits	set	159
   380  008C                     _PIE1bits	set	140
   381  008F                     _OSCCONbits	set	143
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0087                     _TRISCbits	set	135
   385  0086                     _TRISB	set	134
   386  0188                     _ANSELbits	set	392
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	strings
   391  0100                     __pstrings:
   392  0100                     stringtab:
   393  0100                     __stringtab:
   394  0100                     stringcode:	
   395                           ;	String table - string pointers are 1 byte each
   396                           
   397  0100                     stringdir:
   398  0100  3001               	movlw	high stringdir
   399  0101  008A               	movwf	10
   400  0102  0804               	movf	4,w
   401  0103  0A84               	incf	4,f
   402  0104  0782               	addwf	2,f
   403  0105                     __stringbase:
   404  0105  3400               	retlw	0
   405  0106                     __end_of__stringtab:
   406  0106                     STR_2:
   407  0106  3479               	retlw	121	;'y'
   408  0107  3461               	retlw	97	;'a'
   409  0108  3420               	retlw	32	;' '
   410  0109  3476               	retlw	118	;'v'
   411  010A  3461               	retlw	97	;'a'
   412  010B  346C               	retlw	108	;'l'
   413  010C  3469               	retlw	105	;'i'
   414  010D  346D               	retlw	109	;'m'
   415  010E  346F               	retlw	111	;'o'
   416  010F  3473               	retlw	115	;'s'
   417  0110  3420               	retlw	32	;' '
   418  0111  3467               	retlw	103	;'g'
   419  0112  3461               	retlw	97	;'a'
   420  0113  3476               	retlw	118	;'v'
   421  0114  3465               	retlw	101	;'e'
   422  0115  3472               	retlw	114	;'r'
   423  0116  3400               	retlw	0
   424  0117                     STR_1:
   425  0117  3420               	retlw	32	;' '
   426  0118  3473               	retlw	115	;'s'
   427  0119  3465               	retlw	101	;'e'
   428  011A  346E               	retlw	110	;'n'
   429  011B  3431               	retlw	49	;'1'
   430  011C  3420               	retlw	32	;' '
   431  011D  3473               	retlw	115	;'s'
   432  011E  3465               	retlw	101	;'e'
   433  011F  346E               	retlw	110	;'n'
   434  0120  3432               	retlw	50	;'2'
   435  0121  3420               	retlw	32	;' '
   436  0122  3473               	retlw	115	;'s'
   437  0123  3465               	retlw	101	;'e'
   438  0124  346E               	retlw	110	;'n'
   439  0125  3433               	retlw	51	;'3'
   440  0126  3400               	retlw	0
   441                           
   442                           	psect	cinit
   443  000F                     start_initialization:	
   444                           ; #config settings
   445                           
   446  000F                     __initialization:
   447                           
   448                           ; Clear objects allocated to COMMON
   449  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   450  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   451  0011                     end_of_initialization:	
   452                           ;End of C runtime variable initialization code
   453                           
   454  0011                     __end_of__initialization:
   455  0011  0183               	clrf	3
   456  0012  120A  118A  2856   	ljmp	_main	;jump to C main() function
   457                           
   458                           	psect	bssCOMMON
   459  007A                     __pbssCOMMON:
   460  007A                     _conversion2:
   461  007A                     	ds	1
   462  007B                     _conversion1:
   463  007B                     	ds	1
   464                           
   465                           	psect	cstackCOMMON
   466  0070                     __pcstackCOMMON:
   467  0070                     ?_setup:
   468  0070                     ?_lcd_init:	
   469                           ; 1 bytes @ 0x0
   470                           
   471  0070                     ?_cmd:	
   472                           ; 1 bytes @ 0x0
   473                           
   474  0070                     ?_show:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_toggle_adc:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_adc_config:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_isr:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_isr:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_main:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_dat:	
   493                           ; 1 bytes @ 0x0
   494                           
   495                           
   496                           ; 1 bytes @ 0x0
   497  0070                     	ds	2
   498  0072                     ??_cmd:
   499  0072                     ??_toggle_adc:	
   500                           ; 1 bytes @ 0x2
   501                           
   502  0072                     ??_adc_config:	
   503                           ; 1 bytes @ 0x2
   504                           
   505  0072                     ??_dat:	
   506                           ; 1 bytes @ 0x2
   507                           
   508                           
   509                           ; 1 bytes @ 0x2
   510  0072                     	ds	1
   511  0073                     ??_setup:
   512                           
   513                           ; 1 bytes @ 0x3
   514  0073                     	ds	1
   515  0074                     cmd@a:
   516  0074                     dat@b:	
   517                           ; 1 bytes @ 0x4
   518                           
   519                           
   520                           ; 1 bytes @ 0x4
   521  0074                     	ds	1
   522  0075                     ??_lcd_init:
   523  0075                     ?_lcd_linea:	
   524                           ; 1 bytes @ 0x5
   525                           
   526  0075                     ??_show:	
   527                           ; 1 bytes @ 0x5
   528                           
   529  0075                     lcd_linea@b:	
   530                           ; 1 bytes @ 0x5
   531                           
   532                           
   533                           ; 1 bytes @ 0x5
   534  0075                     	ds	1
   535  0076                     ??_lcd_linea:
   536  0076                     show@s:	
   537                           ; 1 bytes @ 0x6
   538                           
   539                           
   540                           ; 1 bytes @ 0x6
   541  0076                     	ds	1
   542  0077                     lcd_linea@a:
   543                           
   544                           ; 1 bytes @ 0x7
   545  0077                     	ds	1
   546  0078                     lcd_linea@temp:
   547                           
   548                           ; 1 bytes @ 0x8
   549  0078                     	ds	1
   550  0079                     lcd_linea@z:
   551                           
   552                           ; 1 bytes @ 0x9
   553  0079                     	ds	1
   554  007A                     ??_main:
   555                           
   556                           	psect	maintext
   557  0056                     __pmaintext:	
   558                           ; 1 bytes @ 0xA
   559 ;;
   560 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   561 ;;
   562 ;; *************** function _main *****************
   563 ;; Defined at:
   564 ;;		line 71 in file "main_lab2.c"
   565 ;; Parameters:    Size  Location     Type
   566 ;;		None
   567 ;; Auto vars:     Size  Location     Type
   568 ;;		None
   569 ;; Return value:  Size  Location     Type
   570 ;;                  1    wreg      void 
   571 ;; Registers used:
   572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   573 ;; Tracked objects:
   574 ;;		On entry : B00/0
   575 ;;		On exit  : 0/0
   576 ;;		Unchanged: 0/0
   577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   578 ;;      Params:         0       0       0       0       0
   579 ;;      Locals:         0       0       0       0       0
   580 ;;      Temps:          0       0       0       0       0
   581 ;;      Totals:         0       0       0       0       0
   582 ;;Total ram usage:        0 bytes
   583 ;; Hardware stack levels required when called:    3
   584 ;; This function calls:
   585 ;;		_cmd
   586 ;;		_lcd_init
   587 ;;		_lcd_linea
   588 ;;		_setup
   589 ;;		_show
   590 ;;		_toggle_adc
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _main
   598  0056                     _main:
   599  0056                     l892:	
   600                           ;incstack = 0
   601                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   602                           
   603                           
   604                           ;main_lab2.c: 73:     setup();
   605  0056  120A  118A  20BD  120A  118A  	fcall	_setup
   606                           
   607                           ;main_lab2.c: 74:     lcd_init();
   608  005B  120A  118A  2146  120A  118A  	fcall	_lcd_init
   609                           
   610                           ;main_lab2.c: 75:  cmd(0x90);
   611  0060  3090               	movlw	144
   612  0061  120A  118A  218A  120A  118A  	fcall	_cmd
   613  0066                     l64:	
   614                           ;main_lab2.c: 78:     while(1)
   615                           
   616                           
   617                           ;main_lab2.c: 79:     {;main_lab2.c: 81:         lcd_linea(1,1);
   618  0066  01F5               	clrf	lcd_linea@b
   619  0067  0AF5               	incf	lcd_linea@b,f
   620  0068  3001               	movlw	1
   621  0069  120A  118A  2091  120A  118A  	fcall	_lcd_linea
   622  006E                     l894:
   623                           
   624                           ;main_lab2.c: 82:         show(" sen1 sen2 sen3");
   625  006E  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   626  006F  120A  118A  2127  120A  118A  	fcall	_show
   627  0074                     l896:
   628                           
   629                           ;main_lab2.c: 83:         lcd_linea(2,1);
   630  0074  01F5               	clrf	lcd_linea@b
   631  0075  0AF5               	incf	lcd_linea@b,f
   632  0076  3002               	movlw	2
   633  0077  120A  118A  2091  120A  118A  	fcall	_lcd_linea
   634                           
   635                           ;main_lab2.c: 84:         show("ya valimos gaver");
   636  007C  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   637  007D  120A  118A  2127  120A  118A  	fcall	_show
   638                           
   639                           ;main_lab2.c: 87:         toggle_adc();
   640  0082  120A  118A  2015  120A  118A  	fcall	_toggle_adc
   641  0087                     l898:
   642                           
   643                           ;main_lab2.c: 88:         PORTD=conversion1;
   644  0087  087B               	movf	_conversion1,w
   645  0088  1283               	bcf	3,5	;RP0=0, select bank0
   646  0089  1303               	bcf	3,6	;RP1=0, select bank0
   647  008A  0088               	movwf	8	;volatile
   648  008B                     l900:
   649                           
   650                           ;main_lab2.c: 89:         PORTE=conversion2;
   651  008B  087A               	movf	_conversion2,w
   652  008C  0089               	movwf	9	;volatile
   653  008D  2866               	goto	l64
   654  008E  120A  118A  280C   	ljmp	start
   655  0091                     __end_of_main:
   656                           
   657                           	psect	text1
   658  0015                     __ptext1:	
   659 ;; *************** function _toggle_adc *****************
   660 ;; Defined at:
   661 ;;		line 150 in file "main_lab2.c"
   662 ;; Parameters:    Size  Location     Type
   663 ;;		None
   664 ;; Auto vars:     Size  Location     Type
   665 ;;		None
   666 ;; Return value:  Size  Location     Type
   667 ;;                  1    wreg      void 
   668 ;; Registers used:
   669 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   670 ;; Tracked objects:
   671 ;;		On entry : 0/0
   672 ;;		On exit  : 0/0
   673 ;;		Unchanged: 0/0
   674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   675 ;;      Params:         0       0       0       0       0
   676 ;;      Locals:         0       0       0       0       0
   677 ;;      Temps:          3       0       0       0       0
   678 ;;      Totals:         3       0       0       0       0
   679 ;;Total ram usage:        3 bytes
   680 ;; Hardware stack levels used:    1
   681 ;; Hardware stack levels required when called:    1
   682 ;; This function calls:
   683 ;;		Nothing
   684 ;; This function is called by:
   685 ;;		_main
   686 ;; This function uses a non-reentrant model
   687 ;;
   688                           
   689                           
   690                           ;psect for function _toggle_adc
   691  0015                     _toggle_adc:
   692  0015                     l808:	
   693                           ;incstack = 0
   694                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   695                           
   696                           
   697                           ;main_lab2.c: 152:     if (ADCON0bits.GO==0)
   698  0015  1283               	bcf	3,5	;RP0=0, select bank0
   699  0016  1303               	bcf	3,6	;RP1=0, select bank0
   700  0017  189F               	btfsc	31,1	;volatile
   701  0018  281A               	goto	u41
   702  0019  281B               	goto	u40
   703  001A                     u41:
   704  001A  2855               	goto	l78
   705  001B                     u40:
   706  001B  283A               	goto	l822
   707  001C                     l812:
   708                           
   709                           ;main_lab2.c: 157:                 conversion1=ADRESH;
   710  001C  081E               	movf	30,w	;volatile
   711  001D  00F2               	movwf	??_toggle_adc
   712  001E  0872               	movf	??_toggle_adc,w
   713  001F  00FB               	movwf	_conversion1
   714                           
   715                           ;main_lab2.c: 158:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   716  0020  3042               	movlw	66
   717  0021  00F2               	movwf	??_toggle_adc
   718  0022                     u87:
   719  0022  0BF2               	decfsz	??_toggle_adc,f
   720  0023  2822               	goto	u87
   721  0024  0000               	nop
   722  0025                     l814:
   723                           
   724                           ;main_lab2.c: 159:                 ADCON0bits.CHS=1;
   725  0025  1283               	bcf	3,5	;RP0=0, select bank0
   726  0026  1303               	bcf	3,6	;RP1=0, select bank0
   727  0027  081F               	movf	31,w	;volatile
   728  0028  39C3               	andlw	-61
   729  0029  3804               	iorlw	4
   730  002A  009F               	movwf	31	;volatile
   731                           
   732                           ;main_lab2.c: 160:                 break;
   733  002B  284D               	goto	l824
   734  002C                     l816:
   735                           
   736                           ;main_lab2.c: 163:                 conversion2=ADRESH;
   737  002C  081E               	movf	30,w	;volatile
   738  002D  00F2               	movwf	??_toggle_adc
   739  002E  0872               	movf	??_toggle_adc,w
   740  002F  00FA               	movwf	_conversion2
   741                           
   742                           ;main_lab2.c: 164:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   743  0030  3042               	movlw	66
   744  0031  00F2               	movwf	??_toggle_adc
   745  0032                     u97:
   746  0032  0BF2               	decfsz	??_toggle_adc,f
   747  0033  2832               	goto	u97
   748  0034  0000               	nop
   749  0035                     l818:
   750                           
   751                           ;main_lab2.c: 165:                 ADCON0bits.CHS=0;
   752  0035  30C3               	movlw	-61
   753  0036  1283               	bcf	3,5	;RP0=0, select bank0
   754  0037  1303               	bcf	3,6	;RP1=0, select bank0
   755  0038  059F               	andwf	31,f	;volatile
   756                           
   757                           ;main_lab2.c: 166:                 break;
   758  0039  284D               	goto	l824
   759  003A                     l822:
   760  003A  0C1F               	rrf	31,w	;volatile
   761  003B  00F2               	movwf	??_toggle_adc
   762  003C  0C72               	rrf	??_toggle_adc,w
   763  003D  390F               	andlw	15
   764  003E  00F3               	movwf	??_toggle_adc+1
   765  003F  01F4               	clrf	??_toggle_adc+2
   766                           
   767                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   768                           ; Switch size 1, requested type "simple"
   769                           ; Number of cases is 1, Range of values is 0 to 0
   770                           ; switch strategies available:
   771                           ; Name         Instructions Cycles
   772                           ; simple_byte            4     3 (average)
   773                           ; direct_byte           11     8 (fixed)
   774                           ; jumptable            260     6 (fixed)
   775                           ;	Chosen strategy is simple_byte
   776  0040  0874               	movf	??_toggle_adc+2,w
   777  0041  3A00               	xorlw	0	; case 0
   778  0042  1903               	skipnz
   779  0043  2845               	goto	l922
   780  0044  284D               	goto	l824
   781  0045                     l922:
   782                           
   783                           ; Switch size 1, requested type "simple"
   784                           ; Number of cases is 2, Range of values is 0 to 1
   785                           ; switch strategies available:
   786                           ; Name         Instructions Cycles
   787                           ; simple_byte            7     4 (average)
   788                           ; direct_byte           14     8 (fixed)
   789                           ; jumptable            260     6 (fixed)
   790                           ;	Chosen strategy is simple_byte
   791  0045  0873               	movf	??_toggle_adc+1,w
   792  0046  3A00               	xorlw	0	; case 0
   793  0047  1903               	skipnz
   794  0048  281C               	goto	l812
   795  0049  3A01               	xorlw	1	; case 1
   796  004A  1903               	skipnz
   797  004B  282C               	goto	l816
   798  004C  284D               	goto	l824
   799  004D                     l824:
   800                           
   801                           ;main_lab2.c: 168:             _delay((unsigned long)((100)*(8000000/4000000.0)));
   802  004D  3042               	movlw	66
   803  004E  00F2               	movwf	??_toggle_adc
   804  004F                     u107:
   805  004F  0BF2               	decfsz	??_toggle_adc,f
   806  0050  284F               	goto	u107
   807  0051  0000               	nop
   808  0052                     l826:
   809                           
   810                           ;main_lab2.c: 169:             ADCON0bits.GO=1;
   811  0052  1283               	bcf	3,5	;RP0=0, select bank0
   812  0053  1303               	bcf	3,6	;RP1=0, select bank0
   813  0054  149F               	bsf	31,1	;volatile
   814  0055                     l78:
   815  0055  0008               	return
   816  0056                     __end_of_toggle_adc:
   817                           
   818                           	psect	text2
   819  0127                     __ptext2:	
   820 ;; *************** function _show *****************
   821 ;; Defined at:
   822 ;;		line 59 in file "LCD.c"
   823 ;; Parameters:    Size  Location     Type
   824 ;;  s               1    wreg     PTR unsigned char 
   825 ;;		 -> STR_2(17), STR_1(16), 
   826 ;; Auto vars:     Size  Location     Type
   827 ;;  s               1    6[COMMON] PTR unsigned char 
   828 ;;		 -> STR_2(17), STR_1(16), 
   829 ;; Return value:  Size  Location     Type
   830 ;;                  1    wreg      void 
   831 ;; Registers used:
   832 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   833 ;; Tracked objects:
   834 ;;		On entry : 0/0
   835 ;;		On exit  : 0/0
   836 ;;		Unchanged: 0/0
   837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   838 ;;      Params:         0       0       0       0       0
   839 ;;      Locals:         1       0       0       0       0
   840 ;;      Temps:          1       0       0       0       0
   841 ;;      Totals:         2       0       0       0       0
   842 ;;Total ram usage:        2 bytes
   843 ;; Hardware stack levels used:    1
   844 ;; Hardware stack levels required when called:    2
   845 ;; This function calls:
   846 ;;		_dat
   847 ;; This function is called by:
   848 ;;		_main
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           
   853                           ;psect for function _show
   854  0127                     _show:
   855                           
   856                           ;incstack = 0
   857                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   858                           ;show@s stored from wreg
   859  0127  00F6               	movwf	show@s
   860  0128                     l884:
   861                           
   862                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
   863  0128  2939               	goto	l890
   864  0129                     l886:
   865                           
   866                           ;LCD.c: 62:   dat(*s++);
   867  0129  0876               	movf	show@s,w
   868  012A  0084               	movwf	4
   869  012B  120A  118A  2100  120A  118A  	fcall	stringdir
   870  0130  120A  118A  2175  120A  118A  	fcall	_dat
   871  0135                     l888:
   872  0135  3001               	movlw	1
   873  0136  00F5               	movwf	??_show
   874  0137  0875               	movf	??_show,w
   875  0138  07F6               	addwf	show@s,f
   876  0139                     l890:
   877                           
   878                           ;LCD.c: 61:  while(*s) {
   879  0139  0876               	movf	show@s,w
   880  013A  0084               	movwf	4
   881  013B  120A  118A  2100  120A  118A  	fcall	stringdir
   882  0140  3A00               	xorlw	0
   883  0141  1D03               	skipz
   884  0142  2944               	goto	u71
   885  0143  2945               	goto	u70
   886  0144                     u71:
   887  0144  2929               	goto	l886
   888  0145                     u70:
   889  0145                     l114:
   890  0145  0008               	return
   891  0146                     __end_of_show:
   892                           
   893                           	psect	text3
   894  0175                     __ptext3:	
   895 ;; *************** function _dat *****************
   896 ;; Defined at:
   897 ;;		line 48 in file "LCD.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;  b               1    wreg     unsigned char 
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  b               1    4[COMMON] unsigned char 
   902 ;; Return value:  Size  Location     Type
   903 ;;                  1    wreg      void 
   904 ;; Registers used:
   905 ;;		wreg
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   911 ;;      Params:         0       0       0       0       0
   912 ;;      Locals:         1       0       0       0       0
   913 ;;      Temps:          2       0       0       0       0
   914 ;;      Totals:         3       0       0       0       0
   915 ;;Total ram usage:        3 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; Hardware stack levels required when called:    1
   918 ;; This function calls:
   919 ;;		Nothing
   920 ;; This function is called by:
   921 ;;		_show
   922 ;; This function uses a non-reentrant model
   923 ;;
   924                           
   925                           
   926                           ;psect for function _dat
   927  0175                     _dat:
   928                           
   929                           ;incstack = 0
   930                           ; Regs used in _dat: [wreg]
   931                           ;dat@b stored from wreg
   932  0175  00F4               	movwf	dat@b
   933  0176                     l738:
   934                           
   935                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
   936  0176  0874               	movf	dat@b,w
   937  0177  1283               	bcf	3,5	;RP0=0, select bank0
   938  0178  1303               	bcf	3,6	;RP1=0, select bank0
   939  0179  0086               	movwf	6	;volatile
   940  017A                     l740:
   941                           
   942                           ;LCD.c: 51:  RC0=1;
   943  017A  1407               	bsf	7,0	;volatile
   944  017B                     l742:
   945                           
   946                           ;LCD.c: 52:  RC1=0;
   947  017B  1087               	bcf	7,1	;volatile
   948  017C                     l744:
   949                           
   950                           ;LCD.c: 53:  PORTCbits.RC2=1;
   951  017C  1507               	bsf	7,2	;volatile
   952                           
   953                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
   954  017D  3003               	movlw	3
   955  017E  00F3               	movwf	??_dat+1
   956  017F  3097               	movlw	151
   957  0180  00F2               	movwf	??_dat
   958  0181                     u117:
   959  0181  0BF2               	decfsz	??_dat,f
   960  0182  2981               	goto	u117
   961  0183  0BF3               	decfsz	??_dat+1,f
   962  0184  2981               	goto	u117
   963  0185  2986               	nop2
   964  0186                     l746:
   965                           
   966                           ;LCD.c: 55:  PORTCbits.RC2=0;
   967  0186  1283               	bcf	3,5	;RP0=0, select bank0
   968  0187  1303               	bcf	3,6	;RP1=0, select bank0
   969  0188  1107               	bcf	7,2	;volatile
   970  0189                     l108:
   971  0189  0008               	return
   972  018A                     __end_of_dat:
   973                           
   974                           	psect	text4
   975  00BD                     __ptext4:	
   976 ;; *************** function _setup *****************
   977 ;; Defined at:
   978 ;;		line 95 in file "main_lab2.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;		None
   981 ;; Auto vars:     Size  Location     Type
   982 ;;		None
   983 ;; Return value:  Size  Location     Type
   984 ;;                  1    wreg      void 
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, pclath, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0
   995 ;;      Totals:         0       0       0       0       0
   996 ;;Total ram usage:        0 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    2
   999 ;; This function calls:
  1000 ;;		_adc_config
  1001 ;; This function is called by:
  1002 ;;		_main
  1003 ;; This function uses a non-reentrant model
  1004 ;;
  1005                           
  1006                           
  1007                           ;psect for function _setup
  1008  00BD                     _setup:
  1009  00BD                     l748:	
  1010                           ;incstack = 0
  1011                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1012                           
  1013                           
  1014                           ;main_lab2.c: 98:     ANSEL=0;
  1015  00BD  1683               	bsf	3,5	;RP0=1, select bank3
  1016  00BE  1703               	bsf	3,6	;RP1=1, select bank3
  1017  00BF  0188               	clrf	8	;volatile
  1018                           
  1019                           ;main_lab2.c: 99:     ANSELH=0;
  1020  00C0  0189               	clrf	9	;volatile
  1021  00C1                     l750:
  1022                           
  1023                           ;main_lab2.c: 100:     ANSELbits.ANS0=1;
  1024  00C1  1408               	bsf	8,0	;volatile
  1025  00C2                     l752:
  1026                           
  1027                           ;main_lab2.c: 101:     ANSELbits.ANS1=1;
  1028  00C2  1488               	bsf	8,1	;volatile
  1029                           
  1030                           ;main_lab2.c: 104:     TRISB=0;
  1031  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1032  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1033  00C5  0186               	clrf	6	;volatile
  1034  00C6                     l754:
  1035                           
  1036                           ;main_lab2.c: 105:     TRISCbits.TRISC0=0;
  1037  00C6  1007               	bcf	7,0	;volatile
  1038  00C7                     l756:
  1039                           
  1040                           ;main_lab2.c: 106:     TRISCbits.TRISC1=0;
  1041  00C7  1087               	bcf	7,1	;volatile
  1042  00C8                     l758:
  1043                           
  1044                           ;main_lab2.c: 107:     TRISCbits.TRISC2=0;
  1045  00C8  1107               	bcf	7,2	;volatile
  1046                           
  1047                           ;main_lab2.c: 108:     TRISD=0;
  1048  00C9  0188               	clrf	8	;volatile
  1049                           
  1050                           ;main_lab2.c: 109:     TRISE=0;
  1051  00CA  0189               	clrf	9	;volatile
  1052                           
  1053                           ;main_lab2.c: 111:     PORTB=0;
  1054  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1055  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1056  00CD  0186               	clrf	6	;volatile
  1057                           
  1058                           ;main_lab2.c: 112:     PORTC=0;
  1059  00CE  0187               	clrf	7	;volatile
  1060                           
  1061                           ;main_lab2.c: 113:     PORTD=0;
  1062  00CF  0188               	clrf	8	;volatile
  1063                           
  1064                           ;main_lab2.c: 114:     PORTE=0;
  1065  00D0  0189               	clrf	9	;volatile
  1066  00D1                     l760:
  1067                           
  1068                           ;main_lab2.c: 117:     OSCCONbits.IRCF = 0b111;
  1069  00D1  3070               	movlw	112
  1070  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  1071  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  1072  00D4  048F               	iorwf	15,f	;volatile
  1073  00D5                     l762:
  1074                           
  1075                           ;main_lab2.c: 118:     OSCCONbits.SCS = 1;
  1076  00D5  140F               	bsf	15,0	;volatile
  1077  00D6                     l764:
  1078                           
  1079                           ;main_lab2.c: 130:     adc_config();
  1080  00D6  120A  118A  215F  120A  118A  	fcall	_adc_config
  1081  00DB                     l766:
  1082                           
  1083                           ;main_lab2.c: 133:     INTCONbits.GIE=1;
  1084  00DB  178B               	bsf	11,7	;volatile
  1085  00DC                     l768:
  1086                           
  1087                           ;main_lab2.c: 134:     INTCONbits.T0IE=0;
  1088  00DC  128B               	bcf	11,5	;volatile
  1089  00DD                     l770:
  1090                           
  1091                           ;main_lab2.c: 135:     INTCONbits.T0IF=0;
  1092  00DD  110B               	bcf	11,2	;volatile
  1093  00DE                     l772:
  1094                           
  1095                           ;main_lab2.c: 136:     INTCONbits.RBIE=0;
  1096  00DE  118B               	bcf	11,3	;volatile
  1097  00DF                     l774:
  1098                           
  1099                           ;main_lab2.c: 137:     INTCONbits.RBIF=0;
  1100  00DF  100B               	bcf	11,0	;volatile
  1101  00E0                     l776:
  1102                           
  1103                           ;main_lab2.c: 139:     PIE1bits.ADIE = 0 ;
  1104  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1105  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1106  00E2  130C               	bcf	12,6	;volatile
  1107  00E3                     l778:
  1108                           
  1109                           ;main_lab2.c: 140:     PIR1bits.ADIF = 0;
  1110  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1111  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1112  00E5  130C               	bcf	12,6	;volatile
  1113  00E6                     l70:
  1114  00E6  0008               	return
  1115  00E7                     __end_of_setup:
  1116                           
  1117                           	psect	text5
  1118  015F                     __ptext5:	
  1119 ;; *************** function _adc_config *****************
  1120 ;; Defined at:
  1121 ;;		line 20 in file "adc_config.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;		None
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;		None
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       0       0       0       0
  1136 ;;      Locals:         0       0       0       0       0
  1137 ;;      Temps:          1       0       0       0       0
  1138 ;;      Totals:         1       0       0       0       0
  1139 ;;Total ram usage:        1 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		_setup
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _adc_config
  1151  015F                     _adc_config:
  1152  015F                     l728:	
  1153                           ;incstack = 0
  1154                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1155                           
  1156                           
  1157                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1158  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1159  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1160  0161  139F               	bcf	31,7	;volatile
  1161                           
  1162                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1163  0162  121F               	bcf	31,4	;volatile
  1164                           
  1165                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1166  0163  129F               	bcf	31,5	;volatile
  1167  0164                     l730:
  1168                           
  1169                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1170  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0166  081F               	movf	31,w	;volatile
  1173  0167  393F               	andlw	-193
  1174  0168  3840               	iorlw	64
  1175  0169  009F               	movwf	31	;volatile
  1176                           
  1177                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1178  016A  30C3               	movlw	-61
  1179  016B  059F               	andwf	31,f	;volatile
  1180  016C                     l732:
  1181                           
  1182                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1183  016C  3010               	movlw	16
  1184  016D  00F2               	movwf	??_adc_config
  1185  016E                     u127:
  1186  016E  0BF2               	decfsz	??_adc_config,f
  1187  016F  296E               	goto	u127
  1188  0170  0000               	nop
  1189  0171                     l734:
  1190                           
  1191                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1192  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1193  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1194  0173  141F               	bsf	31,0	;volatile
  1195  0174                     l87:
  1196  0174  0008               	return
  1197  0175                     __end_of_adc_config:
  1198                           
  1199                           	psect	text6
  1200  0091                     __ptext6:	
  1201 ;; *************** function _lcd_linea *****************
  1202 ;; Defined at:
  1203 ;;		line 67 in file "LCD.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;  a               1    wreg     unsigned char 
  1206 ;;  b               1    5[COMMON] unsigned char 
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  a               1    7[COMMON] unsigned char 
  1209 ;;  z               1    9[COMMON] unsigned char 
  1210 ;;  temp            1    8[COMMON] unsigned char 
  1211 ;; Return value:  Size  Location     Type
  1212 ;;                  1    wreg      void 
  1213 ;; Registers used:
  1214 ;;		wreg, status,2, status,0, pclath, cstack
  1215 ;; Tracked objects:
  1216 ;;		On entry : 0/0
  1217 ;;		On exit  : 0/0
  1218 ;;		Unchanged: 0/0
  1219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1220 ;;      Params:         1       0       0       0       0
  1221 ;;      Locals:         3       0       0       0       0
  1222 ;;      Temps:          1       0       0       0       0
  1223 ;;      Totals:         5       0       0       0       0
  1224 ;;Total ram usage:        5 bytes
  1225 ;; Hardware stack levels used:    1
  1226 ;; Hardware stack levels required when called:    2
  1227 ;; This function calls:
  1228 ;;		_cmd
  1229 ;; This function is called by:
  1230 ;;		_main
  1231 ;; This function uses a non-reentrant model
  1232 ;;
  1233                           
  1234                           
  1235                           ;psect for function _lcd_linea
  1236  0091                     _lcd_linea:
  1237                           
  1238                           ;incstack = 0
  1239                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1240                           ;lcd_linea@a stored from wreg
  1241  0091  00F7               	movwf	lcd_linea@a
  1242  0092                     l868:
  1243                           
  1244                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1245  0092  0377               	decf	lcd_linea@a,w
  1246  0093  1D03               	btfss	3,2
  1247  0094  2896               	goto	u51
  1248  0095  2897               	goto	u50
  1249  0096                     u51:
  1250  0096  28A7               	goto	l876
  1251  0097                     u50:
  1252  0097                     l870:
  1253                           
  1254                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1255  0097  0875               	movf	lcd_linea@b,w
  1256  0098  3E7F               	addlw	127
  1257  0099  00F6               	movwf	??_lcd_linea
  1258  009A  0876               	movf	??_lcd_linea,w
  1259  009B  00F8               	movwf	lcd_linea@temp
  1260  009C                     l872:
  1261                           
  1262                           ;LCD.c: 71:         z = temp;
  1263  009C  0878               	movf	lcd_linea@temp,w
  1264  009D  00F6               	movwf	??_lcd_linea
  1265  009E  0876               	movf	??_lcd_linea,w
  1266  009F  00F9               	movwf	lcd_linea@z
  1267  00A0                     l874:
  1268                           
  1269                           ;LCD.c: 72:         cmd(z);
  1270  00A0  0879               	movf	lcd_linea@z,w
  1271  00A1  120A  118A  218A  120A  118A  	fcall	_cmd
  1272                           
  1273                           ;LCD.c: 74:     } else if (a == 2) {
  1274  00A6  28BC               	goto	l120
  1275  00A7                     l876:
  1276  00A7  3002               	movlw	2
  1277  00A8  0677               	xorwf	lcd_linea@a,w
  1278  00A9  1D03               	btfss	3,2
  1279  00AA  28AC               	goto	u61
  1280  00AB  28AD               	goto	u60
  1281  00AC                     u61:
  1282  00AC  28BC               	goto	l120
  1283  00AD                     u60:
  1284  00AD                     l878:
  1285                           
  1286                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1287  00AD  0875               	movf	lcd_linea@b,w
  1288  00AE  3EBF               	addlw	191
  1289  00AF  00F6               	movwf	??_lcd_linea
  1290  00B0  0876               	movf	??_lcd_linea,w
  1291  00B1  00F8               	movwf	lcd_linea@temp
  1292  00B2                     l880:
  1293                           
  1294                           ;LCD.c: 76:         z = temp;
  1295  00B2  0878               	movf	lcd_linea@temp,w
  1296  00B3  00F6               	movwf	??_lcd_linea
  1297  00B4  0876               	movf	??_lcd_linea,w
  1298  00B5  00F9               	movwf	lcd_linea@z
  1299  00B6                     l882:
  1300                           
  1301                           ;LCD.c: 77:         cmd(z);
  1302  00B6  0879               	movf	lcd_linea@z,w
  1303  00B7  120A  118A  218A  120A  118A  	fcall	_cmd
  1304  00BC                     l120:
  1305  00BC  0008               	return
  1306  00BD                     __end_of_lcd_linea:
  1307                           
  1308                           	psect	text7
  1309  0146                     __ptext7:	
  1310 ;; *************** function _lcd_init *****************
  1311 ;; Defined at:
  1312 ;;		line 28 in file "LCD.c"
  1313 ;; Parameters:    Size  Location     Type
  1314 ;;		None
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;		None
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, status,2, status,0, pclath, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1326 ;;      Params:         0       0       0       0       0
  1327 ;;      Locals:         0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0
  1329 ;;      Totals:         0       0       0       0       0
  1330 ;;Total ram usage:        0 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    2
  1333 ;; This function calls:
  1334 ;;		_cmd
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           
  1341                           ;psect for function _lcd_init
  1342  0146                     _lcd_init:
  1343  0146                     l782:	
  1344                           ;incstack = 0
  1345                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1346                           
  1347                           
  1348                           ;LCD.c: 30:  cmd(0x38);
  1349  0146  3038               	movlw	56
  1350  0147  120A  118A  218A  120A  118A  	fcall	_cmd
  1351                           
  1352                           ;LCD.c: 31:  cmd(0x0c);
  1353  014C  300C               	movlw	12
  1354  014D  120A  118A  218A  120A  118A  	fcall	_cmd
  1355                           
  1356                           ;LCD.c: 32:  cmd(0x06);
  1357  0152  3006               	movlw	6
  1358  0153  120A  118A  218A  120A  118A  	fcall	_cmd
  1359                           
  1360                           ;LCD.c: 33:  cmd(0x80);
  1361  0158  3080               	movlw	128
  1362  0159  120A  118A  218A  120A  118A  	fcall	_cmd
  1363  015E                     l102:
  1364  015E  0008               	return
  1365  015F                     __end_of_lcd_init:
  1366                           
  1367                           	psect	text8
  1368  018A                     __ptext8:	
  1369 ;; *************** function _cmd *****************
  1370 ;; Defined at:
  1371 ;;		line 37 in file "LCD.c"
  1372 ;; Parameters:    Size  Location     Type
  1373 ;;  a               1    wreg     unsigned char 
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  a               1    4[COMMON] unsigned char 
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         0       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          2       0       0       0       0
  1388 ;;      Totals:         3       0       0       0       0
  1389 ;;Total ram usage:        3 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;;		_lcd_init
  1397 ;;		_lcd_linea
  1398 ;;		_lcd_mov_derecha
  1399 ;;		_lcd_mov_izquierda
  1400 ;; This function uses a non-reentrant model
  1401 ;;
  1402                           
  1403                           
  1404                           ;psect for function _cmd
  1405  018A                     _cmd:
  1406                           
  1407                           ;incstack = 0
  1408                           ; Regs used in _cmd: [wreg]
  1409                           ;cmd@a stored from wreg
  1410  018A  00F4               	movwf	cmd@a
  1411  018B                     l718:
  1412                           
  1413                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1414  018B  0874               	movf	cmd@a,w
  1415  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1416  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1417  018E  0086               	movwf	6	;volatile
  1418  018F                     l720:
  1419                           
  1420                           ;LCD.c: 40:  RC0=0;
  1421  018F  1007               	bcf	7,0	;volatile
  1422  0190                     l722:
  1423                           
  1424                           ;LCD.c: 41:  RC1=0;
  1425  0190  1087               	bcf	7,1	;volatile
  1426  0191                     l724:
  1427                           
  1428                           ;LCD.c: 42:  PORTCbits.RC2=1;
  1429  0191  1507               	bsf	7,2	;volatile
  1430                           
  1431                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1432  0192  3003               	movlw	3
  1433  0193  00F3               	movwf	??_cmd+1
  1434  0194  3097               	movlw	151
  1435  0195  00F2               	movwf	??_cmd
  1436  0196                     u137:
  1437  0196  0BF2               	decfsz	??_cmd,f
  1438  0197  2996               	goto	u137
  1439  0198  0BF3               	decfsz	??_cmd+1,f
  1440  0199  2996               	goto	u137
  1441  019A  299B               	nop2
  1442  019B                     l726:
  1443                           
  1444                           ;LCD.c: 44:  PORTCbits.RC2=0;
  1445  019B  1283               	bcf	3,5	;RP0=0, select bank0
  1446  019C  1303               	bcf	3,6	;RP1=0, select bank0
  1447  019D  1107               	bcf	7,2	;volatile
  1448  019E                     l105:
  1449  019E  0008               	return
  1450  019F                     __end_of_cmd:
  1451                           
  1452                           	psect	text9
  1453  019F                     __ptext9:	
  1454 ;; *************** function _isr *****************
  1455 ;; Defined at:
  1456 ;;		line 61 in file "main_lab2.c"
  1457 ;; Parameters:    Size  Location     Type
  1458 ;;		None
  1459 ;; Auto vars:     Size  Location     Type
  1460 ;;		None
  1461 ;; Return value:  Size  Location     Type
  1462 ;;                  1    wreg      void 
  1463 ;; Registers used:
  1464 ;;		None
  1465 ;; Tracked objects:
  1466 ;;		On entry : 0/0
  1467 ;;		On exit  : 0/0
  1468 ;;		Unchanged: 0/0
  1469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1470 ;;      Params:         0       0       0       0       0
  1471 ;;      Locals:         0       0       0       0       0
  1472 ;;      Temps:          2       0       0       0       0
  1473 ;;      Totals:         2       0       0       0       0
  1474 ;;Total ram usage:        2 bytes
  1475 ;; Hardware stack levels used:    1
  1476 ;; This function calls:
  1477 ;;		Nothing
  1478 ;; This function is called by:
  1479 ;;		Interrupt level 1
  1480 ;; This function uses a non-reentrant model
  1481 ;;
  1482                           
  1483                           
  1484                           ;psect for function _isr
  1485  019F                     _isr:
  1486  019F                     i1l59:
  1487  019F  0871               	movf	??_isr+1,w
  1488  01A0  008A               	movwf	10
  1489  01A1  0E70               	swapf	??_isr,w
  1490  01A2  0083               	movwf	3
  1491  01A3  0EFE               	swapf	btemp,f
  1492  01A4  0E7E               	swapf	btemp,w
  1493  01A5  0009               	retfie
  1494  01A6                     __end_of_isr:
  1495  007E                     btemp	set	126	;btemp
  1496  007E                     wtemp0	set	126
  1497                           
  1498                           	psect	intentry
  1499  0004                     __pintentry:	
  1500                           ;incstack = 0
  1501                           ; Regs used in _isr: []
  1502                           
  1503  0004                     interrupt_function:
  1504  007E                     saved_w	set	btemp
  1505  0004  00FE               	movwf	btemp
  1506  0005  0E03               	swapf	3,w
  1507  0006  00F0               	movwf	??_isr
  1508  0007  080A               	movf	10,w
  1509  0008  00F1               	movwf	??_isr+1
  1510  0009  120A  118A  299F   	ljmp	_isr
  1511                           
  1512                           	psect	config
  1513                           
  1514                           ;Config register CONFIG1 @ 0x2007
  1515                           ;	Oscillator Selection bits
  1516                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1517                           ;	Watchdog Timer Enable bit
  1518                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1519                           ;	Power-up Timer Enable bit
  1520                           ;	PWRTE = OFF, PWRT disabled
  1521                           ;	RE3/MCLR pin function select bit
  1522                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1523                           ;	Code Protection bit
  1524                           ;	CP = OFF, Program memory code protection is disabled
  1525                           ;	Data Code Protection bit
  1526                           ;	CPD = OFF, Data memory code protection is disabled
  1527                           ;	Brown Out Reset Selection bits
  1528                           ;	BOREN = OFF, BOR disabled
  1529                           ;	Internal External Switchover bit
  1530                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1531                           ;	Fail-Safe Clock Monitor Enabled bit
  1532                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1533                           ;	Low Voltage Programming Enable bit
  1534                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1535                           ;	In-Circuit Debugger Mode bit
  1536                           ;	DEBUG = 0x1, unprogrammed default
  1537  2007                     	org	8199
  1538  2007  20D4               	dw	8404
  1539                           
  1540                           ;Config register CONFIG2 @ 0x2008
  1541                           ;	Brown-out Reset Selection bit
  1542                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1543                           ;	Flash Program Memory Self Write Enable bits
  1544                           ;	WRT = OFF, Write protection off
  1545  2008                     	org	8200
  1546  2008  3FFF               	dw	16383

Data Sizes:
    Strings     33
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 17
		 -> STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _show->_dat
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     503
                                _cmd
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     126
                                              5 COMMON     2     2      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
   _show
     _dat
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jul 25 23:31:29 2021

                      pc 0002                       l70 00E6                       l64 0066  
                     l78 0055                       l87 0174                       u40 001B  
                     u41 001A                       u50 0097                       u51 0096  
                     u60 00AD                       u61 00AC                       u70 0145  
                     u71 0144                       u87 0022                       u97 0032  
                     fsr 0004                      l102 015E                      l120 00BC  
                    l105 019E                      l114 0145                      l108 0189  
                    l720 018F                      l722 0190                      l730 0164  
                    l724 0191                      l732 016C                      l740 017A  
                    l812 001C                      l900 008B                      l726 019B  
                    l718 018B                      l734 0171                      l750 00C1  
                    l742 017B                      l814 0025                      l822 003A  
                    l728 015F                      l760 00D1                      l752 00C2  
                    l744 017C                      l816 002C                      l824 004D  
                    l808 0015                      l770 00DD                      l762 00D5  
                    l754 00C6                      l746 0186                      l738 0176  
                    l826 0052                      l922 0045                      l818 0035  
                    l772 00DE                      l764 00D6                      l756 00C7  
                    l748 00BD                      l782 0146                      l870 0097  
                    l774 00DF                      l766 00DB                      l758 00C8  
                    l880 00B2                      l872 009C                      l776 00E0  
                    l768 00DC                      l882 00B6                      l874 00A0  
                    l778 00E3                      l890 0139                      l876 00A7  
                    l868 0092                      l884 0128                      l892 0056  
                    l878 00AD                      l886 0129                      l894 006E  
                    l888 0135                      l896 0074                      l898 0087  
                    _RC0 0038                      _RC1 0039                      u107 004F  
                    u117 0181                      u127 016E                      u137 0196  
                    _dat 0175                      _cmd 018A                      _isr 019F  
                    fsr0 0004                     ?_dat 0070                     ?_cmd 0070  
                   ?_isr 0070                     STR_1 0117                     STR_2 0106  
                   i1l59 019F                     dat@b 0074                     cmd@a 0074  
                   _main 0056                     _show 0127                     btemp 007E  
                   start 000C                    ??_dat 0072                    ??_cmd 0072  
                  ??_isr 0070                    ?_main 0070                    ?_show 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _setup 00BD  
                  pclath 000A                    show@s 0076            lcd_linea@temp 0078  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0091             __end_of_show 0146                   ??_main 007A  
                 ??_show 0075                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_lcd_init 015F                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070               _adc_config 015F  
          __end_of_setup 00E7       __size_of_lcd_linea 002C                  ??_setup 0073  
             __pmaintext 0056               __pintentry 0004                ?_lcd_init 0070  
             __stringtab 0100        __end_of_lcd_linea 00BD              ?_adc_config 0070  
              _ANSELbits 0188                  __ptext1 0015                  __ptext2 0127  
                __ptext3 0175                  __ptext4 00BD                  __ptext5 015F  
                __ptext6 0091                  __ptext7 0146                  __ptext8 018A  
                __ptext9 019F             __size_of_dat 0015             __size_of_cmd 0015  
           __size_of_isr 0007               ??_lcd_init 0075     end_of_initialization 0011  
              _PORTCbits 0007               _toggle_adc 0015                _TRISCbits 0087  
    __size_of_adc_config 0016               lcd_linea@a 0077               lcd_linea@b 0075  
             lcd_linea@z 0079      start_initialization 000F              __end_of_dat 018A  
            __end_of_cmd 019F              __end_of_isr 01A6              ?_toggle_adc 0070  
            __pbssCOMMON 007A                ___latbits 0002        __size_of_lcd_init 0019  
           ??_adc_config 0072                _lcd_linea 0091                __pstrings 0100  
         __size_of_setup 002A       __end_of_adc_config 0175        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C      __size_of_toggle_adc 0041  
             ?_lcd_linea 0075               _ADCON0bits 001F              __stringbase 0105  
             _ADCON1bits 009F              _conversion1 007B              _conversion2 007A  
     __end_of__stringtab 0106                 _lcd_init 0146            __size_of_main 003B  
          __size_of_show 001F              ??_lcd_linea 0076               _INTCONbits 000B  
           ??_toggle_adc 0072                 intlevel1 0000                stringcode 0100  
             _OSCCONbits 008F       __end_of_toggle_adc 0056                 stringdir 0100  
               stringtab 0100  
