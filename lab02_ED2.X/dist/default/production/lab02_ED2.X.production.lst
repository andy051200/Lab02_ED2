

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Jul 25 23:19:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0007                     _PORTCbits	set	7
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  0007                     _PORTC	set	7
   374  0006                     _PORTB	set	6
   375  0009                     _PORTE	set	9
   376  0008                     _PORTD	set	8
   377  0039                     _RC1	set	57
   378  0038                     _RC0	set	56
   379  009F                     _ADCON1bits	set	159
   380  008C                     _PIE1bits	set	140
   381  008F                     _OSCCONbits	set	143
   382  0089                     _TRISE	set	137
   383  0088                     _TRISD	set	136
   384  0087                     _TRISCbits	set	135
   385  0086                     _TRISB	set	134
   386  0188                     _ANSELbits	set	392
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	strings
   391  0100                     __pstrings:
   392  0100                     stringtab:
   393  0100                     __stringtab:
   394  0100                     stringcode:	
   395                           ;	String table - string pointers are 1 byte each
   396                           
   397  0100                     stringdir:
   398  0100  3001               	movlw	high stringdir
   399  0101  008A               	movwf	10
   400  0102  0804               	movf	4,w
   401  0103  0A84               	incf	4,f
   402  0104  0782               	addwf	2,f
   403  0105                     __stringbase:
   404  0105  3400               	retlw	0
   405  0106                     __end_of__stringtab:
   406  0106                     STR_1:
   407  0106  3420               	retlw	32	;' '
   408  0107  3473               	retlw	115	;'s'
   409  0108  3465               	retlw	101	;'e'
   410  0109  346E               	retlw	110	;'n'
   411  010A  3431               	retlw	49	;'1'
   412  010B  3420               	retlw	32	;' '
   413  010C  3473               	retlw	115	;'s'
   414  010D  3465               	retlw	101	;'e'
   415  010E  346E               	retlw	110	;'n'
   416  010F  3432               	retlw	50	;'2'
   417  0110  3420               	retlw	32	;' '
   418  0111  3473               	retlw	115	;'s'
   419  0112  3465               	retlw	101	;'e'
   420  0113  346E               	retlw	110	;'n'
   421  0114  3433               	retlw	51	;'3'
   422  0115  3400               	retlw	0
   423  0116                     STR_2:
   424  0116  3470               	retlw	112	;'p'
   425  0117  3472               	retlw	114	;'r'
   426  0118  346F               	retlw	111	;'o'
   427  0119  3462               	retlw	98	;'b'
   428  011A  3465               	retlw	101	;'e'
   429  011B  346D               	retlw	109	;'m'
   430  011C  346F               	retlw	111	;'o'
   431  011D  3473               	retlw	115	;'s'
   432  011E  3400               	retlw	0
   433                           
   434                           	psect	cinit
   435  000F                     start_initialization:	
   436                           ; #config settings
   437                           
   438  000F                     __initialization:
   439                           
   440                           ; Clear objects allocated to COMMON
   441  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   442  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   443  0011                     end_of_initialization:	
   444                           ;End of C runtime variable initialization code
   445                           
   446  0011                     __end_of__initialization:
   447  0011  0183               	clrf	3
   448  0012  120A  118A  2856   	ljmp	_main	;jump to C main() function
   449                           
   450                           	psect	bssCOMMON
   451  007A                     __pbssCOMMON:
   452  007A                     _conversion2:
   453  007A                     	ds	1
   454  007B                     _conversion1:
   455  007B                     	ds	1
   456                           
   457                           	psect	cstackCOMMON
   458  0070                     __pcstackCOMMON:
   459  0070                     ?_setup:
   460  0070                     ?_lcd_init:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_cmd:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_show:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ?_toggle_adc:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_adc_config:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_isr:	
   476                           ; 1 bytes @ 0x0
   477                           
   478  0070                     ??_isr:	
   479                           ; 1 bytes @ 0x0
   480                           
   481  0070                     ?_main:	
   482                           ; 1 bytes @ 0x0
   483                           
   484  0070                     ?_dat:	
   485                           ; 1 bytes @ 0x0
   486                           
   487                           
   488                           ; 1 bytes @ 0x0
   489  0070                     	ds	2
   490  0072                     ??_cmd:
   491  0072                     ??_toggle_adc:	
   492                           ; 1 bytes @ 0x2
   493                           
   494  0072                     ??_adc_config:	
   495                           ; 1 bytes @ 0x2
   496                           
   497  0072                     ??_dat:	
   498                           ; 1 bytes @ 0x2
   499                           
   500                           
   501                           ; 1 bytes @ 0x2
   502  0072                     	ds	1
   503  0073                     ??_setup:
   504                           
   505                           ; 1 bytes @ 0x3
   506  0073                     	ds	1
   507  0074                     cmd@a:
   508  0074                     dat@b:	
   509                           ; 1 bytes @ 0x4
   510                           
   511                           
   512                           ; 1 bytes @ 0x4
   513  0074                     	ds	1
   514  0075                     ??_lcd_init:
   515  0075                     ?_lcd_linea:	
   516                           ; 1 bytes @ 0x5
   517                           
   518  0075                     ??_show:	
   519                           ; 1 bytes @ 0x5
   520                           
   521  0075                     lcd_linea@b:	
   522                           ; 1 bytes @ 0x5
   523                           
   524                           
   525                           ; 1 bytes @ 0x5
   526  0075                     	ds	1
   527  0076                     ??_lcd_linea:
   528  0076                     show@s:	
   529                           ; 1 bytes @ 0x6
   530                           
   531                           
   532                           ; 1 bytes @ 0x6
   533  0076                     	ds	1
   534  0077                     lcd_linea@a:
   535                           
   536                           ; 1 bytes @ 0x7
   537  0077                     	ds	1
   538  0078                     lcd_linea@temp:
   539                           
   540                           ; 1 bytes @ 0x8
   541  0078                     	ds	1
   542  0079                     lcd_linea@z:
   543                           
   544                           ; 1 bytes @ 0x9
   545  0079                     	ds	1
   546  007A                     ??_main:
   547                           
   548                           	psect	maintext
   549  0056                     __pmaintext:	
   550                           ; 1 bytes @ 0xA
   551 ;;
   552 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   553 ;;
   554 ;; *************** function _main *****************
   555 ;; Defined at:
   556 ;;		line 71 in file "main_lab2.c"
   557 ;; Parameters:    Size  Location     Type
   558 ;;		None
   559 ;; Auto vars:     Size  Location     Type
   560 ;;		None
   561 ;; Return value:  Size  Location     Type
   562 ;;                  1    wreg      void 
   563 ;; Registers used:
   564 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   565 ;; Tracked objects:
   566 ;;		On entry : B00/0
   567 ;;		On exit  : 0/0
   568 ;;		Unchanged: 0/0
   569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   570 ;;      Params:         0       0       0       0       0
   571 ;;      Locals:         0       0       0       0       0
   572 ;;      Temps:          0       0       0       0       0
   573 ;;      Totals:         0       0       0       0       0
   574 ;;Total ram usage:        0 bytes
   575 ;; Hardware stack levels required when called:    3
   576 ;; This function calls:
   577 ;;		_cmd
   578 ;;		_lcd_init
   579 ;;		_lcd_linea
   580 ;;		_setup
   581 ;;		_show
   582 ;;		_toggle_adc
   583 ;; This function is called by:
   584 ;;		Startup code after reset
   585 ;; This function uses a non-reentrant model
   586 ;;
   587                           
   588                           
   589                           ;psect for function _main
   590  0056                     _main:
   591  0056                     l892:	
   592                           ;incstack = 0
   593                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   594                           
   595                           
   596                           ;main_lab2.c: 73:     setup();
   597  0056  120A  118A  20BD  120A  118A  	fcall	_setup
   598                           
   599                           ;main_lab2.c: 74:     lcd_init();
   600  005B  120A  118A  213E  120A  118A  	fcall	_lcd_init
   601                           
   602                           ;main_lab2.c: 75:  cmd(0x90);
   603  0060  3090               	movlw	144
   604  0061  120A  118A  2182  120A  118A  	fcall	_cmd
   605  0066                     l64:	
   606                           ;main_lab2.c: 78:     while(1)
   607                           
   608                           
   609                           ;main_lab2.c: 79:     {;main_lab2.c: 81:         lcd_linea(1,1);
   610  0066  01F5               	clrf	lcd_linea@b
   611  0067  0AF5               	incf	lcd_linea@b,f
   612  0068  3001               	movlw	1
   613  0069  120A  118A  2091  120A  118A  	fcall	_lcd_linea
   614  006E                     l894:
   615                           
   616                           ;main_lab2.c: 82:         show(" sen1 sen2 sen3");
   617  006E  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   618  006F  120A  118A  211F  120A  118A  	fcall	_show
   619  0074                     l896:
   620                           
   621                           ;main_lab2.c: 83:         lcd_linea(2,1);
   622  0074  01F5               	clrf	lcd_linea@b
   623  0075  0AF5               	incf	lcd_linea@b,f
   624  0076  3002               	movlw	2
   625  0077  120A  118A  2091  120A  118A  	fcall	_lcd_linea
   626                           
   627                           ;main_lab2.c: 84:         show("probemos");
   628  007C  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   629  007D  120A  118A  211F  120A  118A  	fcall	_show
   630                           
   631                           ;main_lab2.c: 87:         toggle_adc();
   632  0082  120A  118A  2015  120A  118A  	fcall	_toggle_adc
   633  0087                     l898:
   634                           
   635                           ;main_lab2.c: 88:         PORTD=conversion1;
   636  0087  087B               	movf	_conversion1,w
   637  0088  1283               	bcf	3,5	;RP0=0, select bank0
   638  0089  1303               	bcf	3,6	;RP1=0, select bank0
   639  008A  0088               	movwf	8	;volatile
   640  008B                     l900:
   641                           
   642                           ;main_lab2.c: 89:         PORTE=conversion2;
   643  008B  087A               	movf	_conversion2,w
   644  008C  0089               	movwf	9	;volatile
   645  008D  2866               	goto	l64
   646  008E  120A  118A  280C   	ljmp	start
   647  0091                     __end_of_main:
   648                           
   649                           	psect	text1
   650  0015                     __ptext1:	
   651 ;; *************** function _toggle_adc *****************
   652 ;; Defined at:
   653 ;;		line 150 in file "main_lab2.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;		None
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;                  1    wreg      void 
   660 ;; Registers used:
   661 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         0       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          3       0       0       0       0
   670 ;;      Totals:         3       0       0       0       0
   671 ;;Total ram usage:        3 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; Hardware stack levels required when called:    1
   674 ;; This function calls:
   675 ;;		Nothing
   676 ;; This function is called by:
   677 ;;		_main
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           
   681                           
   682                           ;psect for function _toggle_adc
   683  0015                     _toggle_adc:
   684  0015                     l808:	
   685                           ;incstack = 0
   686                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   687                           
   688                           
   689                           ;main_lab2.c: 152:     if (ADCON0bits.GO==0)
   690  0015  1283               	bcf	3,5	;RP0=0, select bank0
   691  0016  1303               	bcf	3,6	;RP1=0, select bank0
   692  0017  189F               	btfsc	31,1	;volatile
   693  0018  281A               	goto	u41
   694  0019  281B               	goto	u40
   695  001A                     u41:
   696  001A  2855               	goto	l78
   697  001B                     u40:
   698  001B  283A               	goto	l822
   699  001C                     l812:
   700                           
   701                           ;main_lab2.c: 157:                 conversion1=ADRESH;
   702  001C  081E               	movf	30,w	;volatile
   703  001D  00F2               	movwf	??_toggle_adc
   704  001E  0872               	movf	??_toggle_adc,w
   705  001F  00FB               	movwf	_conversion1
   706                           
   707                           ;main_lab2.c: 158:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   708  0020  3042               	movlw	66
   709  0021  00F2               	movwf	??_toggle_adc
   710  0022                     u87:
   711  0022  0BF2               	decfsz	??_toggle_adc,f
   712  0023  2822               	goto	u87
   713  0024  0000               	nop
   714  0025                     l814:
   715                           
   716                           ;main_lab2.c: 159:                 ADCON0bits.CHS=1;
   717  0025  1283               	bcf	3,5	;RP0=0, select bank0
   718  0026  1303               	bcf	3,6	;RP1=0, select bank0
   719  0027  081F               	movf	31,w	;volatile
   720  0028  39C3               	andlw	-61
   721  0029  3804               	iorlw	4
   722  002A  009F               	movwf	31	;volatile
   723                           
   724                           ;main_lab2.c: 160:                 break;
   725  002B  284D               	goto	l824
   726  002C                     l816:
   727                           
   728                           ;main_lab2.c: 163:                 conversion2=ADRESH;
   729  002C  081E               	movf	30,w	;volatile
   730  002D  00F2               	movwf	??_toggle_adc
   731  002E  0872               	movf	??_toggle_adc,w
   732  002F  00FA               	movwf	_conversion2
   733                           
   734                           ;main_lab2.c: 164:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   735  0030  3042               	movlw	66
   736  0031  00F2               	movwf	??_toggle_adc
   737  0032                     u97:
   738  0032  0BF2               	decfsz	??_toggle_adc,f
   739  0033  2832               	goto	u97
   740  0034  0000               	nop
   741  0035                     l818:
   742                           
   743                           ;main_lab2.c: 165:                 ADCON0bits.CHS=0;
   744  0035  30C3               	movlw	-61
   745  0036  1283               	bcf	3,5	;RP0=0, select bank0
   746  0037  1303               	bcf	3,6	;RP1=0, select bank0
   747  0038  059F               	andwf	31,f	;volatile
   748                           
   749                           ;main_lab2.c: 166:                 break;
   750  0039  284D               	goto	l824
   751  003A                     l822:
   752  003A  0C1F               	rrf	31,w	;volatile
   753  003B  00F2               	movwf	??_toggle_adc
   754  003C  0C72               	rrf	??_toggle_adc,w
   755  003D  390F               	andlw	15
   756  003E  00F3               	movwf	??_toggle_adc+1
   757  003F  01F4               	clrf	??_toggle_adc+2
   758                           
   759                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   760                           ; Switch size 1, requested type "simple"
   761                           ; Number of cases is 1, Range of values is 0 to 0
   762                           ; switch strategies available:
   763                           ; Name         Instructions Cycles
   764                           ; simple_byte            4     3 (average)
   765                           ; direct_byte           11     8 (fixed)
   766                           ; jumptable            260     6 (fixed)
   767                           ;	Chosen strategy is simple_byte
   768  0040  0874               	movf	??_toggle_adc+2,w
   769  0041  3A00               	xorlw	0	; case 0
   770  0042  1903               	skipnz
   771  0043  2845               	goto	l922
   772  0044  284D               	goto	l824
   773  0045                     l922:
   774                           
   775                           ; Switch size 1, requested type "simple"
   776                           ; Number of cases is 2, Range of values is 0 to 1
   777                           ; switch strategies available:
   778                           ; Name         Instructions Cycles
   779                           ; simple_byte            7     4 (average)
   780                           ; direct_byte           14     8 (fixed)
   781                           ; jumptable            260     6 (fixed)
   782                           ;	Chosen strategy is simple_byte
   783  0045  0873               	movf	??_toggle_adc+1,w
   784  0046  3A00               	xorlw	0	; case 0
   785  0047  1903               	skipnz
   786  0048  281C               	goto	l812
   787  0049  3A01               	xorlw	1	; case 1
   788  004A  1903               	skipnz
   789  004B  282C               	goto	l816
   790  004C  284D               	goto	l824
   791  004D                     l824:
   792                           
   793                           ;main_lab2.c: 168:             _delay((unsigned long)((100)*(8000000/4000000.0)));
   794  004D  3042               	movlw	66
   795  004E  00F2               	movwf	??_toggle_adc
   796  004F                     u107:
   797  004F  0BF2               	decfsz	??_toggle_adc,f
   798  0050  284F               	goto	u107
   799  0051  0000               	nop
   800  0052                     l826:
   801                           
   802                           ;main_lab2.c: 169:             ADCON0bits.GO=1;
   803  0052  1283               	bcf	3,5	;RP0=0, select bank0
   804  0053  1303               	bcf	3,6	;RP1=0, select bank0
   805  0054  149F               	bsf	31,1	;volatile
   806  0055                     l78:
   807  0055  0008               	return
   808  0056                     __end_of_toggle_adc:
   809                           
   810                           	psect	text2
   811  011F                     __ptext2:	
   812 ;; *************** function _show *****************
   813 ;; Defined at:
   814 ;;		line 59 in file "LCD.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;  s               1    wreg     PTR unsigned char 
   817 ;;		 -> STR_2(9), STR_1(16), 
   818 ;; Auto vars:     Size  Location     Type
   819 ;;  s               1    6[COMMON] PTR unsigned char 
   820 ;;		 -> STR_2(9), STR_1(16), 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         0       0       0       0       0
   831 ;;      Locals:         1       0       0       0       0
   832 ;;      Temps:          1       0       0       0       0
   833 ;;      Totals:         2       0       0       0       0
   834 ;;Total ram usage:        2 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    2
   837 ;; This function calls:
   838 ;;		_dat
   839 ;; This function is called by:
   840 ;;		_main
   841 ;; This function uses a non-reentrant model
   842 ;;
   843                           
   844                           
   845                           ;psect for function _show
   846  011F                     _show:
   847                           
   848                           ;incstack = 0
   849                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   850                           ;show@s stored from wreg
   851  011F  00F6               	movwf	show@s
   852  0120                     l884:
   853                           
   854                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
   855  0120  2931               	goto	l890
   856  0121                     l886:
   857                           
   858                           ;LCD.c: 62:   dat(*s++);
   859  0121  0876               	movf	show@s,w
   860  0122  0084               	movwf	4
   861  0123  120A  118A  2100  120A  118A  	fcall	stringdir
   862  0128  120A  118A  216D  120A  118A  	fcall	_dat
   863  012D                     l888:
   864  012D  3001               	movlw	1
   865  012E  00F5               	movwf	??_show
   866  012F  0875               	movf	??_show,w
   867  0130  07F6               	addwf	show@s,f
   868  0131                     l890:
   869                           
   870                           ;LCD.c: 61:  while(*s) {
   871  0131  0876               	movf	show@s,w
   872  0132  0084               	movwf	4
   873  0133  120A  118A  2100  120A  118A  	fcall	stringdir
   874  0138  3A00               	xorlw	0
   875  0139  1D03               	skipz
   876  013A  293C               	goto	u71
   877  013B  293D               	goto	u70
   878  013C                     u71:
   879  013C  2921               	goto	l886
   880  013D                     u70:
   881  013D                     l114:
   882  013D  0008               	return
   883  013E                     __end_of_show:
   884                           
   885                           	psect	text3
   886  016D                     __ptext3:	
   887 ;; *************** function _dat *****************
   888 ;; Defined at:
   889 ;;		line 48 in file "LCD.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;  b               1    wreg     unsigned char 
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  b               1    4[COMMON] unsigned char 
   894 ;; Return value:  Size  Location     Type
   895 ;;                  1    wreg      void 
   896 ;; Registers used:
   897 ;;		wreg
   898 ;; Tracked objects:
   899 ;;		On entry : 0/0
   900 ;;		On exit  : 0/0
   901 ;;		Unchanged: 0/0
   902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   903 ;;      Params:         0       0       0       0       0
   904 ;;      Locals:         1       0       0       0       0
   905 ;;      Temps:          2       0       0       0       0
   906 ;;      Totals:         3       0       0       0       0
   907 ;;Total ram usage:        3 bytes
   908 ;; Hardware stack levels used:    1
   909 ;; Hardware stack levels required when called:    1
   910 ;; This function calls:
   911 ;;		Nothing
   912 ;; This function is called by:
   913 ;;		_show
   914 ;; This function uses a non-reentrant model
   915 ;;
   916                           
   917                           
   918                           ;psect for function _dat
   919  016D                     _dat:
   920                           
   921                           ;incstack = 0
   922                           ; Regs used in _dat: [wreg]
   923                           ;dat@b stored from wreg
   924  016D  00F4               	movwf	dat@b
   925  016E                     l738:
   926                           
   927                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
   928  016E  0874               	movf	dat@b,w
   929  016F  1283               	bcf	3,5	;RP0=0, select bank0
   930  0170  1303               	bcf	3,6	;RP1=0, select bank0
   931  0171  0086               	movwf	6	;volatile
   932  0172                     l740:
   933                           
   934                           ;LCD.c: 51:  RC0=1;
   935  0172  1407               	bsf	7,0	;volatile
   936  0173                     l742:
   937                           
   938                           ;LCD.c: 52:  RC1=0;
   939  0173  1087               	bcf	7,1	;volatile
   940  0174                     l744:
   941                           
   942                           ;LCD.c: 53:  PORTCbits.RC2=1;
   943  0174  1507               	bsf	7,2	;volatile
   944                           
   945                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
   946  0175  3003               	movlw	3
   947  0176  00F3               	movwf	??_dat+1
   948  0177  3097               	movlw	151
   949  0178  00F2               	movwf	??_dat
   950  0179                     u117:
   951  0179  0BF2               	decfsz	??_dat,f
   952  017A  2979               	goto	u117
   953  017B  0BF3               	decfsz	??_dat+1,f
   954  017C  2979               	goto	u117
   955  017D  297E               	nop2
   956  017E                     l746:
   957                           
   958                           ;LCD.c: 55:  PORTCbits.RC2=0;
   959  017E  1283               	bcf	3,5	;RP0=0, select bank0
   960  017F  1303               	bcf	3,6	;RP1=0, select bank0
   961  0180  1107               	bcf	7,2	;volatile
   962  0181                     l108:
   963  0181  0008               	return
   964  0182                     __end_of_dat:
   965                           
   966                           	psect	text4
   967  00BD                     __ptext4:	
   968 ;; *************** function _setup *****************
   969 ;; Defined at:
   970 ;;		line 95 in file "main_lab2.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0
   986 ;;      Temps:          0       0       0       0       0
   987 ;;      Totals:         0       0       0       0       0
   988 ;;Total ram usage:        0 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    2
   991 ;; This function calls:
   992 ;;		_adc_config
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _setup
  1000  00BD                     _setup:
  1001  00BD                     l748:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1004                           
  1005                           
  1006                           ;main_lab2.c: 98:     ANSEL=0;
  1007  00BD  1683               	bsf	3,5	;RP0=1, select bank3
  1008  00BE  1703               	bsf	3,6	;RP1=1, select bank3
  1009  00BF  0188               	clrf	8	;volatile
  1010                           
  1011                           ;main_lab2.c: 99:     ANSELH=0;
  1012  00C0  0189               	clrf	9	;volatile
  1013  00C1                     l750:
  1014                           
  1015                           ;main_lab2.c: 100:     ANSELbits.ANS0=1;
  1016  00C1  1408               	bsf	8,0	;volatile
  1017  00C2                     l752:
  1018                           
  1019                           ;main_lab2.c: 101:     ANSELbits.ANS1=1;
  1020  00C2  1488               	bsf	8,1	;volatile
  1021                           
  1022                           ;main_lab2.c: 104:     TRISB=0;
  1023  00C3  1683               	bsf	3,5	;RP0=1, select bank1
  1024  00C4  1303               	bcf	3,6	;RP1=0, select bank1
  1025  00C5  0186               	clrf	6	;volatile
  1026  00C6                     l754:
  1027                           
  1028                           ;main_lab2.c: 105:     TRISCbits.TRISC0=0;
  1029  00C6  1007               	bcf	7,0	;volatile
  1030  00C7                     l756:
  1031                           
  1032                           ;main_lab2.c: 106:     TRISCbits.TRISC1=0;
  1033  00C7  1087               	bcf	7,1	;volatile
  1034  00C8                     l758:
  1035                           
  1036                           ;main_lab2.c: 107:     TRISCbits.TRISC2=0;
  1037  00C8  1107               	bcf	7,2	;volatile
  1038                           
  1039                           ;main_lab2.c: 108:     TRISD=0;
  1040  00C9  0188               	clrf	8	;volatile
  1041                           
  1042                           ;main_lab2.c: 109:     TRISE=0;
  1043  00CA  0189               	clrf	9	;volatile
  1044                           
  1045                           ;main_lab2.c: 111:     PORTB=0;
  1046  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00CD  0186               	clrf	6	;volatile
  1049                           
  1050                           ;main_lab2.c: 112:     PORTC=0;
  1051  00CE  0187               	clrf	7	;volatile
  1052                           
  1053                           ;main_lab2.c: 113:     PORTD=0;
  1054  00CF  0188               	clrf	8	;volatile
  1055                           
  1056                           ;main_lab2.c: 114:     PORTE=0;
  1057  00D0  0189               	clrf	9	;volatile
  1058  00D1                     l760:
  1059                           
  1060                           ;main_lab2.c: 117:     OSCCONbits.IRCF = 0b111;
  1061  00D1  3070               	movlw	112
  1062  00D2  1683               	bsf	3,5	;RP0=1, select bank1
  1063  00D3  1303               	bcf	3,6	;RP1=0, select bank1
  1064  00D4  048F               	iorwf	15,f	;volatile
  1065  00D5                     l762:
  1066                           
  1067                           ;main_lab2.c: 118:     OSCCONbits.SCS = 1;
  1068  00D5  140F               	bsf	15,0	;volatile
  1069  00D6                     l764:
  1070                           
  1071                           ;main_lab2.c: 130:     adc_config();
  1072  00D6  120A  118A  2157  120A  118A  	fcall	_adc_config
  1073  00DB                     l766:
  1074                           
  1075                           ;main_lab2.c: 133:     INTCONbits.GIE=1;
  1076  00DB  178B               	bsf	11,7	;volatile
  1077  00DC                     l768:
  1078                           
  1079                           ;main_lab2.c: 134:     INTCONbits.T0IE=0;
  1080  00DC  128B               	bcf	11,5	;volatile
  1081  00DD                     l770:
  1082                           
  1083                           ;main_lab2.c: 135:     INTCONbits.T0IF=0;
  1084  00DD  110B               	bcf	11,2	;volatile
  1085  00DE                     l772:
  1086                           
  1087                           ;main_lab2.c: 136:     INTCONbits.RBIE=0;
  1088  00DE  118B               	bcf	11,3	;volatile
  1089  00DF                     l774:
  1090                           
  1091                           ;main_lab2.c: 137:     INTCONbits.RBIF=0;
  1092  00DF  100B               	bcf	11,0	;volatile
  1093  00E0                     l776:
  1094                           
  1095                           ;main_lab2.c: 139:     PIE1bits.ADIE = 0 ;
  1096  00E0  1683               	bsf	3,5	;RP0=1, select bank1
  1097  00E1  1303               	bcf	3,6	;RP1=0, select bank1
  1098  00E2  130C               	bcf	12,6	;volatile
  1099  00E3                     l778:
  1100                           
  1101                           ;main_lab2.c: 140:     PIR1bits.ADIF = 0;
  1102  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1103  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1104  00E5  130C               	bcf	12,6	;volatile
  1105  00E6                     l70:
  1106  00E6  0008               	return
  1107  00E7                     __end_of_setup:
  1108                           
  1109                           	psect	text5
  1110  0157                     __ptext5:	
  1111 ;; *************** function _adc_config *****************
  1112 ;; Defined at:
  1113 ;;		line 20 in file "adc_config.c"
  1114 ;; Parameters:    Size  Location     Type
  1115 ;;		None
  1116 ;; Auto vars:     Size  Location     Type
  1117 ;;		None
  1118 ;; Return value:  Size  Location     Type
  1119 ;;                  1    wreg      void 
  1120 ;; Registers used:
  1121 ;;		wreg, status,2, status,0
  1122 ;; Tracked objects:
  1123 ;;		On entry : 0/0
  1124 ;;		On exit  : 0/0
  1125 ;;		Unchanged: 0/0
  1126 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1127 ;;      Params:         0       0       0       0       0
  1128 ;;      Locals:         0       0       0       0       0
  1129 ;;      Temps:          1       0       0       0       0
  1130 ;;      Totals:         1       0       0       0       0
  1131 ;;Total ram usage:        1 bytes
  1132 ;; Hardware stack levels used:    1
  1133 ;; Hardware stack levels required when called:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		_setup
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _adc_config
  1143  0157                     _adc_config:
  1144  0157                     l728:	
  1145                           ;incstack = 0
  1146                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1147                           
  1148                           
  1149                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1150  0157  1683               	bsf	3,5	;RP0=1, select bank1
  1151  0158  1303               	bcf	3,6	;RP1=0, select bank1
  1152  0159  139F               	bcf	31,7	;volatile
  1153                           
  1154                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1155  015A  121F               	bcf	31,4	;volatile
  1156                           
  1157                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1158  015B  129F               	bcf	31,5	;volatile
  1159  015C                     l730:
  1160                           
  1161                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1162  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1163  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1164  015E  081F               	movf	31,w	;volatile
  1165  015F  393F               	andlw	-193
  1166  0160  3840               	iorlw	64
  1167  0161  009F               	movwf	31	;volatile
  1168                           
  1169                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1170  0162  30C3               	movlw	-61
  1171  0163  059F               	andwf	31,f	;volatile
  1172  0164                     l732:
  1173                           
  1174                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(4000000/4000000.0)));
  1175  0164  3010               	movlw	16
  1176  0165  00F2               	movwf	??_adc_config
  1177  0166                     u127:
  1178  0166  0BF2               	decfsz	??_adc_config,f
  1179  0167  2966               	goto	u127
  1180  0168  0000               	nop
  1181  0169                     l734:
  1182                           
  1183                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1184  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1185  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1186  016B  141F               	bsf	31,0	;volatile
  1187  016C                     l87:
  1188  016C  0008               	return
  1189  016D                     __end_of_adc_config:
  1190                           
  1191                           	psect	text6
  1192  0091                     __ptext6:	
  1193 ;; *************** function _lcd_linea *****************
  1194 ;; Defined at:
  1195 ;;		line 67 in file "LCD.c"
  1196 ;; Parameters:    Size  Location     Type
  1197 ;;  a               1    wreg     unsigned char 
  1198 ;;  b               1    5[COMMON] unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  a               1    7[COMMON] unsigned char 
  1201 ;;  z               1    9[COMMON] unsigned char 
  1202 ;;  temp            1    8[COMMON] unsigned char 
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         1       0       0       0       0
  1213 ;;      Locals:         3       0       0       0       0
  1214 ;;      Temps:          1       0       0       0       0
  1215 ;;      Totals:         5       0       0       0       0
  1216 ;;Total ram usage:        5 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		_cmd
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _lcd_linea
  1228  0091                     _lcd_linea:
  1229                           
  1230                           ;incstack = 0
  1231                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1232                           ;lcd_linea@a stored from wreg
  1233  0091  00F7               	movwf	lcd_linea@a
  1234  0092                     l868:
  1235                           
  1236                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1237  0092  0377               	decf	lcd_linea@a,w
  1238  0093  1D03               	btfss	3,2
  1239  0094  2896               	goto	u51
  1240  0095  2897               	goto	u50
  1241  0096                     u51:
  1242  0096  28A7               	goto	l876
  1243  0097                     u50:
  1244  0097                     l870:
  1245                           
  1246                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1247  0097  0875               	movf	lcd_linea@b,w
  1248  0098  3E7F               	addlw	127
  1249  0099  00F6               	movwf	??_lcd_linea
  1250  009A  0876               	movf	??_lcd_linea,w
  1251  009B  00F8               	movwf	lcd_linea@temp
  1252  009C                     l872:
  1253                           
  1254                           ;LCD.c: 71:         z = temp;
  1255  009C  0878               	movf	lcd_linea@temp,w
  1256  009D  00F6               	movwf	??_lcd_linea
  1257  009E  0876               	movf	??_lcd_linea,w
  1258  009F  00F9               	movwf	lcd_linea@z
  1259  00A0                     l874:
  1260                           
  1261                           ;LCD.c: 72:         cmd(z);
  1262  00A0  0879               	movf	lcd_linea@z,w
  1263  00A1  120A  118A  2182  120A  118A  	fcall	_cmd
  1264                           
  1265                           ;LCD.c: 74:     } else if (a == 2) {
  1266  00A6  28BC               	goto	l120
  1267  00A7                     l876:
  1268  00A7  3002               	movlw	2
  1269  00A8  0677               	xorwf	lcd_linea@a,w
  1270  00A9  1D03               	btfss	3,2
  1271  00AA  28AC               	goto	u61
  1272  00AB  28AD               	goto	u60
  1273  00AC                     u61:
  1274  00AC  28BC               	goto	l120
  1275  00AD                     u60:
  1276  00AD                     l878:
  1277                           
  1278                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1279  00AD  0875               	movf	lcd_linea@b,w
  1280  00AE  3EBF               	addlw	191
  1281  00AF  00F6               	movwf	??_lcd_linea
  1282  00B0  0876               	movf	??_lcd_linea,w
  1283  00B1  00F8               	movwf	lcd_linea@temp
  1284  00B2                     l880:
  1285                           
  1286                           ;LCD.c: 76:         z = temp;
  1287  00B2  0878               	movf	lcd_linea@temp,w
  1288  00B3  00F6               	movwf	??_lcd_linea
  1289  00B4  0876               	movf	??_lcd_linea,w
  1290  00B5  00F9               	movwf	lcd_linea@z
  1291  00B6                     l882:
  1292                           
  1293                           ;LCD.c: 77:         cmd(z);
  1294  00B6  0879               	movf	lcd_linea@z,w
  1295  00B7  120A  118A  2182  120A  118A  	fcall	_cmd
  1296  00BC                     l120:
  1297  00BC  0008               	return
  1298  00BD                     __end_of_lcd_linea:
  1299                           
  1300                           	psect	text7
  1301  013E                     __ptext7:	
  1302 ;; *************** function _lcd_init *****************
  1303 ;; Defined at:
  1304 ;;		line 28 in file "LCD.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;		None
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;		None
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, status,2, status,0, pclath, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       0       0       0       0
  1319 ;;      Locals:         0       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0
  1321 ;;      Totals:         0       0       0       0       0
  1322 ;;Total ram usage:        0 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    2
  1325 ;; This function calls:
  1326 ;;		_cmd
  1327 ;; This function is called by:
  1328 ;;		_main
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _lcd_init
  1334  013E                     _lcd_init:
  1335  013E                     l782:	
  1336                           ;incstack = 0
  1337                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1338                           
  1339                           
  1340                           ;LCD.c: 30:  cmd(0x38);
  1341  013E  3038               	movlw	56
  1342  013F  120A  118A  2182  120A  118A  	fcall	_cmd
  1343                           
  1344                           ;LCD.c: 31:  cmd(0x0c);
  1345  0144  300C               	movlw	12
  1346  0145  120A  118A  2182  120A  118A  	fcall	_cmd
  1347                           
  1348                           ;LCD.c: 32:  cmd(0x06);
  1349  014A  3006               	movlw	6
  1350  014B  120A  118A  2182  120A  118A  	fcall	_cmd
  1351                           
  1352                           ;LCD.c: 33:  cmd(0x80);
  1353  0150  3080               	movlw	128
  1354  0151  120A  118A  2182  120A  118A  	fcall	_cmd
  1355  0156                     l102:
  1356  0156  0008               	return
  1357  0157                     __end_of_lcd_init:
  1358                           
  1359                           	psect	text8
  1360  0182                     __ptext8:	
  1361 ;; *************** function _cmd *****************
  1362 ;; Defined at:
  1363 ;;		line 37 in file "LCD.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  a               1    wreg     unsigned char 
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;  a               1    4[COMMON] unsigned char 
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         1       0       0       0       0
  1379 ;;      Temps:          2       0       0       0       0
  1380 ;;      Totals:         3       0       0       0       0
  1381 ;;Total ram usage:        3 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    1
  1384 ;; This function calls:
  1385 ;;		Nothing
  1386 ;; This function is called by:
  1387 ;;		_main
  1388 ;;		_lcd_init
  1389 ;;		_lcd_linea
  1390 ;;		_lcd_mov_derecha
  1391 ;;		_lcd_mov_izquierda
  1392 ;; This function uses a non-reentrant model
  1393 ;;
  1394                           
  1395                           
  1396                           ;psect for function _cmd
  1397  0182                     _cmd:
  1398                           
  1399                           ;incstack = 0
  1400                           ; Regs used in _cmd: [wreg]
  1401                           ;cmd@a stored from wreg
  1402  0182  00F4               	movwf	cmd@a
  1403  0183                     l718:
  1404                           
  1405                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1406  0183  0874               	movf	cmd@a,w
  1407  0184  1283               	bcf	3,5	;RP0=0, select bank0
  1408  0185  1303               	bcf	3,6	;RP1=0, select bank0
  1409  0186  0086               	movwf	6	;volatile
  1410  0187                     l720:
  1411                           
  1412                           ;LCD.c: 40:  RC0=0;
  1413  0187  1007               	bcf	7,0	;volatile
  1414  0188                     l722:
  1415                           
  1416                           ;LCD.c: 41:  RC1=0;
  1417  0188  1087               	bcf	7,1	;volatile
  1418  0189                     l724:
  1419                           
  1420                           ;LCD.c: 42:  PORTCbits.RC2=1;
  1421  0189  1507               	bsf	7,2	;volatile
  1422                           
  1423                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1424  018A  3003               	movlw	3
  1425  018B  00F3               	movwf	??_cmd+1
  1426  018C  3097               	movlw	151
  1427  018D  00F2               	movwf	??_cmd
  1428  018E                     u137:
  1429  018E  0BF2               	decfsz	??_cmd,f
  1430  018F  298E               	goto	u137
  1431  0190  0BF3               	decfsz	??_cmd+1,f
  1432  0191  298E               	goto	u137
  1433  0192  2993               	nop2
  1434  0193                     l726:
  1435                           
  1436                           ;LCD.c: 44:  PORTCbits.RC2=0;
  1437  0193  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0194  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0195  1107               	bcf	7,2	;volatile
  1440  0196                     l105:
  1441  0196  0008               	return
  1442  0197                     __end_of_cmd:
  1443                           
  1444                           	psect	text9
  1445  0197                     __ptext9:	
  1446 ;; *************** function _isr *****************
  1447 ;; Defined at:
  1448 ;;		line 61 in file "main_lab2.c"
  1449 ;; Parameters:    Size  Location     Type
  1450 ;;		None
  1451 ;; Auto vars:     Size  Location     Type
  1452 ;;		None
  1453 ;; Return value:  Size  Location     Type
  1454 ;;                  1    wreg      void 
  1455 ;; Registers used:
  1456 ;;		None
  1457 ;; Tracked objects:
  1458 ;;		On entry : 0/0
  1459 ;;		On exit  : 0/0
  1460 ;;		Unchanged: 0/0
  1461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1462 ;;      Params:         0       0       0       0       0
  1463 ;;      Locals:         0       0       0       0       0
  1464 ;;      Temps:          2       0       0       0       0
  1465 ;;      Totals:         2       0       0       0       0
  1466 ;;Total ram usage:        2 bytes
  1467 ;; Hardware stack levels used:    1
  1468 ;; This function calls:
  1469 ;;		Nothing
  1470 ;; This function is called by:
  1471 ;;		Interrupt level 1
  1472 ;; This function uses a non-reentrant model
  1473 ;;
  1474                           
  1475                           
  1476                           ;psect for function _isr
  1477  0197                     _isr:
  1478  0197                     i1l59:
  1479  0197  0871               	movf	??_isr+1,w
  1480  0198  008A               	movwf	10
  1481  0199  0E70               	swapf	??_isr,w
  1482  019A  0083               	movwf	3
  1483  019B  0EFE               	swapf	btemp,f
  1484  019C  0E7E               	swapf	btemp,w
  1485  019D  0009               	retfie
  1486  019E                     __end_of_isr:
  1487  007E                     btemp	set	126	;btemp
  1488  007E                     wtemp0	set	126
  1489                           
  1490                           	psect	intentry
  1491  0004                     __pintentry:	
  1492                           ;incstack = 0
  1493                           ; Regs used in _isr: []
  1494                           
  1495  0004                     interrupt_function:
  1496  007E                     saved_w	set	btemp
  1497  0004  00FE               	movwf	btemp
  1498  0005  0E03               	swapf	3,w
  1499  0006  00F0               	movwf	??_isr
  1500  0007  080A               	movf	10,w
  1501  0008  00F1               	movwf	??_isr+1
  1502  0009  120A  118A  2997   	ljmp	_isr
  1503                           
  1504                           	psect	config
  1505                           
  1506                           ;Config register CONFIG1 @ 0x2007
  1507                           ;	Oscillator Selection bits
  1508                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1509                           ;	Watchdog Timer Enable bit
  1510                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1511                           ;	Power-up Timer Enable bit
  1512                           ;	PWRTE = OFF, PWRT disabled
  1513                           ;	RE3/MCLR pin function select bit
  1514                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1515                           ;	Code Protection bit
  1516                           ;	CP = OFF, Program memory code protection is disabled
  1517                           ;	Data Code Protection bit
  1518                           ;	CPD = OFF, Data memory code protection is disabled
  1519                           ;	Brown Out Reset Selection bits
  1520                           ;	BOREN = OFF, BOR disabled
  1521                           ;	Internal External Switchover bit
  1522                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1523                           ;	Fail-Safe Clock Monitor Enabled bit
  1524                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1525                           ;	Low Voltage Programming Enable bit
  1526                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1527                           ;	In-Circuit Debugger Mode bit
  1528                           ;	DEBUG = 0x1, unprogrammed default
  1529  2007                     	org	8199
  1530  2007  20D4               	dw	8404
  1531                           
  1532                           ;Config register CONFIG2 @ 0x2008
  1533                           ;	Brown-out Reset Selection bit
  1534                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1535                           ;	Flash Program Memory Self Write Enable bits
  1536                           ;	WRT = OFF, Write protection off
  1537  2008                     	org	8200
  1538  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _show->_dat
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     503
                                _cmd
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     126
                                              5 COMMON     2     2      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
   _show
     _dat
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Jul 25 23:19:07 2021

                      pc 0002                       l70 00E6                       l64 0066  
                     l78 0055                       l87 016C                       u40 001B  
                     u41 001A                       u50 0097                       u51 0096  
                     u60 00AD                       u61 00AC                       u70 013D  
                     u71 013C                       u87 0022                       u97 0032  
                     fsr 0004                      l102 0156                      l120 00BC  
                    l105 0196                      l114 013D                      l108 0181  
                    l720 0187                      l722 0188                      l730 015C  
                    l724 0189                      l732 0164                      l740 0172  
                    l812 001C                      l900 008B                      l726 0193  
                    l718 0183                      l734 0169                      l750 00C1  
                    l742 0173                      l814 0025                      l822 003A  
                    l728 0157                      l760 00D1                      l752 00C2  
                    l744 0174                      l816 002C                      l824 004D  
                    l808 0015                      l770 00DD                      l762 00D5  
                    l754 00C6                      l746 017E                      l738 016E  
                    l826 0052                      l922 0045                      l818 0035  
                    l772 00DE                      l764 00D6                      l756 00C7  
                    l748 00BD                      l782 013E                      l870 0097  
                    l774 00DF                      l766 00DB                      l758 00C8  
                    l880 00B2                      l872 009C                      l776 00E0  
                    l768 00DC                      l882 00B6                      l874 00A0  
                    l778 00E3                      l890 0131                      l876 00A7  
                    l868 0092                      l884 0120                      l892 0056  
                    l878 00AD                      l886 0121                      l894 006E  
                    l888 012D                      l896 0074                      l898 0087  
                    _RC0 0038                      _RC1 0039                      u107 004F  
                    u117 0179                      u127 0166                      u137 018E  
                    _dat 016D                      _cmd 0182                      _isr 0197  
                    fsr0 0004                     ?_dat 0070                     ?_cmd 0070  
                   ?_isr 0070                     STR_1 0106                     STR_2 0116  
                   i1l59 0197                     dat@b 0074                     cmd@a 0074  
                   _main 0056                     _show 011F                     btemp 007E  
                   start 000C                    ??_dat 0072                    ??_cmd 0072  
                  ??_isr 0070                    ?_main 0070                    ?_show 0070  
                  _ANSEL 0188                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISD 0088                    _TRISE 0089                    _setup 00BD  
                  pclath 000A                    show@s 0076            lcd_linea@temp 0078  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 0091             __end_of_show 013E                   ??_main 007A  
                 ??_show 0075                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_lcd_init 0157                   saved_w 007E  
__end_of__initialization 0011           __pcstackCOMMON 0070               _adc_config 0157  
          __end_of_setup 00E7       __size_of_lcd_linea 002C                  ??_setup 0073  
             __pmaintext 0056               __pintentry 0004                ?_lcd_init 0070  
             __stringtab 0100        __end_of_lcd_linea 00BD              ?_adc_config 0070  
              _ANSELbits 0188                  __ptext1 0015                  __ptext2 011F  
                __ptext3 016D                  __ptext4 00BD                  __ptext5 0157  
                __ptext6 0091                  __ptext7 013E                  __ptext8 0182  
                __ptext9 0197             __size_of_dat 0015             __size_of_cmd 0015  
           __size_of_isr 0007               ??_lcd_init 0075     end_of_initialization 0011  
              _PORTCbits 0007               _toggle_adc 0015                _TRISCbits 0087  
    __size_of_adc_config 0016               lcd_linea@a 0077               lcd_linea@b 0075  
             lcd_linea@z 0079      start_initialization 000F              __end_of_dat 0182  
            __end_of_cmd 0197              __end_of_isr 019E              ?_toggle_adc 0070  
            __pbssCOMMON 007A                ___latbits 0002        __size_of_lcd_init 0019  
           ??_adc_config 0072                _lcd_linea 0091                __pstrings 0100  
         __size_of_setup 002A       __end_of_adc_config 016D        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C      __size_of_toggle_adc 0041  
             ?_lcd_linea 0075               _ADCON0bits 001F              __stringbase 0105  
             _ADCON1bits 009F              _conversion1 007B              _conversion2 007A  
     __end_of__stringtab 0106                 _lcd_init 013E            __size_of_main 003B  
          __size_of_show 001F              ??_lcd_linea 0076               _INTCONbits 000B  
           ??_toggle_adc 0072                 intlevel1 0000                stringcode 0100  
             _OSCCONbits 008F       __end_of_toggle_adc 0056                 stringdir 0100  
               stringtab 0100  
