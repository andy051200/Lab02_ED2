

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 23:02:45 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 2.20
    32                           ; Generated 12/02/2020 GMT
    33                           ; 
    34                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F887 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  008F                     	;# 
   110  0090                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0095                     	;# 
   118  0096                     	;# 
   119  0097                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009E                     	;# 
   127  009F                     	;# 
   128  0105                     	;# 
   129  0107                     	;# 
   130  0108                     	;# 
   131  0109                     	;# 
   132  010C                     	;# 
   133  010C                     	;# 
   134  010D                     	;# 
   135  010E                     	;# 
   136  010F                     	;# 
   137  0185                     	;# 
   138  0187                     	;# 
   139  0188                     	;# 
   140  0189                     	;# 
   141  018C                     	;# 
   142  018D                     	;# 
   143  0000                     	;# 
   144  0001                     	;# 
   145  0002                     	;# 
   146  0003                     	;# 
   147  0004                     	;# 
   148  0005                     	;# 
   149  0006                     	;# 
   150  0007                     	;# 
   151  0008                     	;# 
   152  0009                     	;# 
   153  000A                     	;# 
   154  000B                     	;# 
   155  000C                     	;# 
   156  000D                     	;# 
   157  000E                     	;# 
   158  000E                     	;# 
   159  000F                     	;# 
   160  0010                     	;# 
   161  0011                     	;# 
   162  0012                     	;# 
   163  0013                     	;# 
   164  0014                     	;# 
   165  0015                     	;# 
   166  0015                     	;# 
   167  0016                     	;# 
   168  0017                     	;# 
   169  0018                     	;# 
   170  0019                     	;# 
   171  001A                     	;# 
   172  001B                     	;# 
   173  001B                     	;# 
   174  001C                     	;# 
   175  001D                     	;# 
   176  001E                     	;# 
   177  001F                     	;# 
   178  0081                     	;# 
   179  0085                     	;# 
   180  0086                     	;# 
   181  0087                     	;# 
   182  0088                     	;# 
   183  0089                     	;# 
   184  008C                     	;# 
   185  008D                     	;# 
   186  008E                     	;# 
   187  008F                     	;# 
   188  0090                     	;# 
   189  0091                     	;# 
   190  0092                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0093                     	;# 
   194  0094                     	;# 
   195  0095                     	;# 
   196  0096                     	;# 
   197  0097                     	;# 
   198  0098                     	;# 
   199  0099                     	;# 
   200  009A                     	;# 
   201  009B                     	;# 
   202  009C                     	;# 
   203  009D                     	;# 
   204  009E                     	;# 
   205  009F                     	;# 
   206  0105                     	;# 
   207  0107                     	;# 
   208  0108                     	;# 
   209  0109                     	;# 
   210  010C                     	;# 
   211  010C                     	;# 
   212  010D                     	;# 
   213  010E                     	;# 
   214  010F                     	;# 
   215  0185                     	;# 
   216  0187                     	;# 
   217  0188                     	;# 
   218  0189                     	;# 
   219  018C                     	;# 
   220  018D                     	;# 
   221  0000                     	;# 
   222  0001                     	;# 
   223  0002                     	;# 
   224  0003                     	;# 
   225  0004                     	;# 
   226  0005                     	;# 
   227  0006                     	;# 
   228  0007                     	;# 
   229  0008                     	;# 
   230  0009                     	;# 
   231  000A                     	;# 
   232  000B                     	;# 
   233  000C                     	;# 
   234  000D                     	;# 
   235  000E                     	;# 
   236  000E                     	;# 
   237  000F                     	;# 
   238  0010                     	;# 
   239  0011                     	;# 
   240  0012                     	;# 
   241  0013                     	;# 
   242  0014                     	;# 
   243  0015                     	;# 
   244  0015                     	;# 
   245  0016                     	;# 
   246  0017                     	;# 
   247  0018                     	;# 
   248  0019                     	;# 
   249  001A                     	;# 
   250  001B                     	;# 
   251  001B                     	;# 
   252  001C                     	;# 
   253  001D                     	;# 
   254  001E                     	;# 
   255  001F                     	;# 
   256  0081                     	;# 
   257  0085                     	;# 
   258  0086                     	;# 
   259  0087                     	;# 
   260  0088                     	;# 
   261  0089                     	;# 
   262  008C                     	;# 
   263  008D                     	;# 
   264  008E                     	;# 
   265  008F                     	;# 
   266  0090                     	;# 
   267  0091                     	;# 
   268  0092                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0093                     	;# 
   272  0094                     	;# 
   273  0095                     	;# 
   274  0096                     	;# 
   275  0097                     	;# 
   276  0098                     	;# 
   277  0099                     	;# 
   278  009A                     	;# 
   279  009B                     	;# 
   280  009C                     	;# 
   281  009D                     	;# 
   282  009E                     	;# 
   283  009F                     	;# 
   284  0105                     	;# 
   285  0107                     	;# 
   286  0108                     	;# 
   287  0109                     	;# 
   288  010C                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  0185                     	;# 
   294  0187                     	;# 
   295  0188                     	;# 
   296  0189                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  008F                     	;# 
   344  0090                     	;# 
   345  0091                     	;# 
   346  0092                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0095                     	;# 
   352  0096                     	;# 
   353  0097                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009A                     	;# 
   357  009B                     	;# 
   358  009C                     	;# 
   359  009D                     	;# 
   360  009E                     	;# 
   361  009F                     	;# 
   362  0105                     	;# 
   363  0107                     	;# 
   364  0108                     	;# 
   365  0109                     	;# 
   366  010C                     	;# 
   367  010C                     	;# 
   368  010D                     	;# 
   369  010E                     	;# 
   370  010F                     	;# 
   371  0185                     	;# 
   372  0187                     	;# 
   373  0188                     	;# 
   374  0189                     	;# 
   375  018C                     	;# 
   376  018D                     	;# 
   377  0000                     	;# 
   378  0001                     	;# 
   379  0002                     	;# 
   380  0003                     	;# 
   381  0004                     	;# 
   382  0005                     	;# 
   383  0006                     	;# 
   384  0007                     	;# 
   385  0008                     	;# 
   386  0009                     	;# 
   387  000A                     	;# 
   388  000B                     	;# 
   389  000C                     	;# 
   390  000D                     	;# 
   391  000E                     	;# 
   392  000E                     	;# 
   393  000F                     	;# 
   394  0010                     	;# 
   395  0011                     	;# 
   396  0012                     	;# 
   397  0013                     	;# 
   398  0014                     	;# 
   399  0015                     	;# 
   400  0015                     	;# 
   401  0016                     	;# 
   402  0017                     	;# 
   403  0018                     	;# 
   404  0019                     	;# 
   405  001A                     	;# 
   406  001B                     	;# 
   407  001B                     	;# 
   408  001C                     	;# 
   409  001D                     	;# 
   410  001E                     	;# 
   411  001F                     	;# 
   412  0081                     	;# 
   413  0085                     	;# 
   414  0086                     	;# 
   415  0087                     	;# 
   416  0088                     	;# 
   417  0089                     	;# 
   418  008C                     	;# 
   419  008D                     	;# 
   420  008E                     	;# 
   421  008F                     	;# 
   422  0090                     	;# 
   423  0091                     	;# 
   424  0092                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0093                     	;# 
   428  0094                     	;# 
   429  0095                     	;# 
   430  0096                     	;# 
   431  0097                     	;# 
   432  0098                     	;# 
   433  0099                     	;# 
   434  009A                     	;# 
   435  009B                     	;# 
   436  009C                     	;# 
   437  009D                     	;# 
   438  009E                     	;# 
   439  009F                     	;# 
   440  0105                     	;# 
   441  0107                     	;# 
   442  0108                     	;# 
   443  0109                     	;# 
   444  010C                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  010F                     	;# 
   449  0185                     	;# 
   450  0187                     	;# 
   451  0188                     	;# 
   452  0189                     	;# 
   453  018C                     	;# 
   454  018D                     	;# 
   455  0018                     _RCSTAbits	set	24
   456  001E                     _ADRESH	set	30
   457  001F                     _ADCON0bits	set	31
   458  000B                     _INTCONbits	set	11
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  0006                     _PORTB	set	6
   462  001A                     _RCREG	set	26
   463  000C                     _PIR1bits	set	12
   464  0047                     _RD7	set	71
   465  0046                     _RD6	set	70
   466  0045                     _RD5	set	69
   467  009A                     _SPBRGH	set	154
   468  0099                     _SPBRG	set	153
   469  0098                     _TXSTAbits	set	152
   470  009F                     _ADCON1bits	set	159
   471  008C                     _PIE1bits	set	140
   472  008F                     _OSCCONbits	set	143
   473  0089                     _TRISE	set	137
   474  0088                     _TRISDbits	set	136
   475  0086                     _TRISB	set	134
   476  0187                     _BAUDCTLbits	set	391
   477  0188                     _ANSELbits	set	392
   478  0189                     _ANSELH	set	393
   479  0188                     _ANSEL	set	392
   480                           
   481                           	psect	strings
   482  0400                     __pstrings:
   483  0400                     stringtab:
   484  0400                     __stringtab:
   485                           
   486                           ;	String table - string pointers are 1 byte each
   487  0400  1BFF               	btfsc	btemp+1,7
   488  0401  2C0A               	ljmp	stringcode
   489  0402  1383               	bcf	3,7
   490  0403  187F               	btfsc	btemp+1,0
   491  0404  1783               	bsf	3,7
   492  0405  0800               	movf	0,w
   493  0406  0A84               	incf	4,f
   494  0407  1903               	skipnz
   495  0408  0AFF               	incf	btemp+1,f
   496  0409  0008               	return
   497  040A                     stringcode:
   498  040A                     stringdir:
   499  040A  3004               	movlw	high stringdir
   500  040B  008A               	movwf	10
   501  040C  0804               	movf	4,w
   502  040D  0A84               	incf	4,f
   503  040E  0782               	addwf	2,f
   504  040F                     __stringbase:
   505  040F  3400               	retlw	0
   506  0410                     __end_of__stringtab:
   507  0410                     STR_1:
   508  0410  3420               	retlw	32	;' '
   509  0411  3453               	retlw	83	;'S'
   510  0412  3465               	retlw	101	;'e'
   511  0413  346E               	retlw	110	;'n'
   512  0414  3431               	retlw	49	;'1'
   513  0415  3420               	retlw	32	;' '
   514  0416  3453               	retlw	83	;'S'
   515  0417  3465               	retlw	101	;'e'
   516  0418  346E               	retlw	110	;'n'
   517  0419  3432               	retlw	50	;'2'
   518  041A  3420               	retlw	32	;' '
   519  041B  3453               	retlw	83	;'S'
   520  041C  3465               	retlw	101	;'e'
   521  041D  346E               	retlw	110	;'n'
   522  041E  3433               	retlw	51	;'3'
   523  041F  3420               	retlw	32	;' '
   524  0420  3400               	retlw	0
   525                           
   526                           	psect	cinit
   527  000F                     start_initialization:	
   528                           ; #config settings
   529                           
   530  000F                     __initialization:
   531                           
   532                           ; Clear objects allocated to COMMON
   533  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   534  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   535                           
   536                           ; Clear objects allocated to BANK0
   537  0011  1283               	bcf	3,5	;RP0=0, select bank0
   538  0012  1303               	bcf	3,6	;RP1=0, select bank0
   539  0013  01B0               	clrf	__pbssBANK0& (0+127)
   540  0014  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   541  0015  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   542  0016  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   543  0017  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   544  0018  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   545  0019  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   546  001A  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   547  001B  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   548  001C  01B9               	clrf	(__pbssBANK0+9)& (0+127)
   549  001D  01BA               	clrf	(__pbssBANK0+10)& (0+127)
   550  001E  01BB               	clrf	(__pbssBANK0+11)& (0+127)
   551  001F  01BC               	clrf	(__pbssBANK0+12)& (0+127)
   552  0020  01BD               	clrf	(__pbssBANK0+13)& (0+127)
   553  0021                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556  0021                     __end_of__initialization:
   557  0021  0183               	clrf	3
   558  0022  120A  118A  2A8F   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssCOMMON
   561  007A                     __pbssCOMMON:
   562  007A                     _suma1:
   563  007A                     	ds	1
   564  007B                     _dato_recibido:
   565  007B                     	ds	1
   566                           
   567                           	psect	bssBANK0
   568  0030                     __pbssBANK0:
   569  0030                     _suma3:
   570  0030                     	ds	1
   571  0031                     _suma2:
   572  0031                     	ds	1
   573  0032                     _unidades3:
   574  0032                     	ds	1
   575  0033                     _decenas3:
   576  0033                     	ds	1
   577  0034                     _centenas3:
   578  0034                     	ds	1
   579  0035                     _unidades2:
   580  0035                     	ds	1
   581  0036                     _decenas2:
   582  0036                     	ds	1
   583  0037                     _centenas2:
   584  0037                     	ds	1
   585  0038                     _unidades1:
   586  0038                     	ds	1
   587  0039                     _decenas1:
   588  0039                     	ds	1
   589  003A                     _centenas1:
   590  003A                     	ds	1
   591  003B                     _cuenta_uart:
   592  003B                     	ds	1
   593  003C                     _conversion2:
   594  003C                     	ds	1
   595  003D                     _conversion1:
   596  003D                     	ds	1
   597                           
   598                           	psect	cstackCOMMON
   599  0070                     __pcstackCOMMON:
   600  0070                     ?_setup:
   601  0070                     ?_lcd_init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_cmd:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_toggle_adc:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_recepcion_uart:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_conversiones:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_lcd_ascii:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_adc_config:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_uart_config:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_isr:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ??_isr:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_main:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_datos_ascii:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_dat:	
   638                           ; 1 bytes @ 0x0
   639                           
   640                           
   641                           ; 1 bytes @ 0x0
   642  0070                     	ds	2
   643  0072                     ??_cmd:
   644  0072                     ??_toggle_adc:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ??_recepcion_uart:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ??_adc_config:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ??_uart_config:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ??_datos_ascii:	
   657                           ; 1 bytes @ 0x2
   658                           
   659  0072                     ??_dat:	
   660                           ; 1 bytes @ 0x2
   661                           
   662  0072                     ?___awdiv:	
   663                           ; 1 bytes @ 0x2
   664                           
   665  0072                     ___awdiv@divisor:	
   666                           ; 2 bytes @ 0x2
   667                           
   668                           
   669                           ; 2 bytes @ 0x2
   670  0072                     	ds	1
   671  0073                     ??_setup:
   672                           
   673                           ; 1 bytes @ 0x3
   674  0073                     	ds	1
   675  0074                     datos_ascii@numero:
   676  0074                     cmd@a:	
   677                           ; 1 bytes @ 0x4
   678                           
   679  0074                     dat@b:	
   680                           ; 1 bytes @ 0x4
   681                           
   682  0074                     ___awdiv@dividend:	
   683                           ; 1 bytes @ 0x4
   684                           
   685                           
   686                           ; 2 bytes @ 0x4
   687  0074                     	ds	1
   688  0075                     ??_lcd_init:
   689  0075                     ?_lcd_linea:	
   690                           ; 1 bytes @ 0x5
   691                           
   692  0075                     ??_lcd_ascii:	
   693                           ; 1 bytes @ 0x5
   694                           
   695  0075                     lcd_linea@b:	
   696                           ; 1 bytes @ 0x5
   697                           
   698                           
   699                           ; 1 bytes @ 0x5
   700  0075                     	ds	1
   701  0076                     ??_lcd_linea:
   702  0076                     ?_show:	
   703                           ; 1 bytes @ 0x6
   704                           
   705  0076                     ??___awdiv:	
   706                           ; 1 bytes @ 0x6
   707                           
   708  0076                     show@s:	
   709                           ; 1 bytes @ 0x6
   710                           
   711                           
   712                           ; 2 bytes @ 0x6
   713  0076                     	ds	1
   714  0077                     ??___awmod:
   715  0077                     lcd_linea@a:	
   716                           ; 1 bytes @ 0x7
   717                           
   718                           
   719                           ; 1 bytes @ 0x7
   720  0077                     	ds	1
   721  0078                     ??_show:
   722  0078                     lcd_linea@temp:	
   723                           ; 1 bytes @ 0x8
   724                           
   725  0078                     ___awmod@counter:	
   726                           ; 1 bytes @ 0x8
   727                           
   728                           
   729                           ; 1 bytes @ 0x8
   730  0078                     	ds	1
   731  0079                     lcd_linea@z:
   732  0079                     ___awmod@sign:	
   733                           ; 1 bytes @ 0x9
   734                           
   735                           
   736                           ; 1 bytes @ 0x9
   737  0079                     	ds	1
   738  007A                     ??_main:
   739                           
   740                           	psect	cstackBANK0
   741  0020                     __pcstackBANK0:	
   742                           ; 1 bytes @ 0xA
   743                           
   744  0020                     ___awdiv@counter:
   745  0020                     lcd_ascii@random:	
   746                           ; 1 bytes @ 0x0
   747                           
   748                           
   749                           ; 16 bytes @ 0x0
   750  0020                     	ds	1
   751  0021                     ___awdiv@sign:
   752                           
   753                           ; 1 bytes @ 0x1
   754  0021                     	ds	1
   755  0022                     ___awdiv@quotient:
   756                           
   757                           ; 2 bytes @ 0x2
   758  0022                     	ds	2
   759  0024                     ?___awmod:
   760  0024                     ___awmod@divisor:	
   761                           ; 2 bytes @ 0x4
   762                           
   763                           
   764                           ; 2 bytes @ 0x4
   765  0024                     	ds	2
   766  0026                     ___awmod@dividend:
   767                           
   768                           ; 2 bytes @ 0x6
   769  0026                     	ds	2
   770  0028                     ??_conversiones:
   771                           
   772                           ; 1 bytes @ 0x8
   773  0028                     	ds	8
   774                           
   775                           	psect	maintext
   776  028F                     __pmaintext:	
   777 ;;
   778 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   779 ;;
   780 ;; *************** function _main *****************
   781 ;; Defined at:
   782 ;;		line 96 in file "main_lab2.c"
   783 ;; Parameters:    Size  Location     Type
   784 ;;		None
   785 ;; Auto vars:     Size  Location     Type
   786 ;;		None
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : B00/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0       0       0       0       0
   798 ;;      Temps:          0       0       0       0       0
   799 ;;      Totals:         0       0       0       0       0
   800 ;;Total ram usage:        0 bytes
   801 ;; Hardware stack levels required when called:    3
   802 ;; This function calls:
   803 ;;		_cmd
   804 ;;		_conversiones
   805 ;;		_lcd_ascii
   806 ;;		_lcd_init
   807 ;;		_lcd_linea
   808 ;;		_recepcion_uart
   809 ;;		_setup
   810 ;;		_show
   811 ;;		_toggle_adc
   812 ;; This function is called by:
   813 ;;		Startup code after reset
   814 ;; This function uses a non-reentrant model
   815 ;;
   816                           
   817                           
   818                           ;psect for function _main
   819  028F                     _main:
   820  028F                     l1593:	
   821                           ;incstack = 0
   822                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   823                           
   824                           
   825                           ;main_lab2.c: 98:     setup();
   826  028F  120A  118A  2358  120A  118A  	fcall	_setup
   827                           
   828                           ;main_lab2.c: 99:     lcd_init();
   829  0294  120A  118A  2421  120A  118A  	fcall	_lcd_init
   830                           
   831                           ;main_lab2.c: 100:  cmd(0x90);
   832  0299  3090               	movlw	144
   833  029A  120A  118A  2479  120A  118A  	fcall	_cmd
   834  029F                     l1595:
   835                           
   836                           ;main_lab2.c: 104:     {;main_lab2.c: 106:         toggle_adc();
   837  029F  120A  118A  22D8  120A  118A  	fcall	_toggle_adc
   838  02A4                     l1597:
   839                           
   840                           ;main_lab2.c: 107:         recepcion_uart();
   841  02A4  120A  118A  23D7  120A  118A  	fcall	_recepcion_uart
   842                           
   843                           ;main_lab2.c: 108:         conversiones();
   844  02A9  120A  118A  2025  120A  118A  	fcall	_conversiones
   845                           
   846                           ;main_lab2.c: 113:         lcd_linea(1,1);
   847  02AE  01F5               	clrf	lcd_linea@b
   848  02AF  0AF5               	incf	lcd_linea@b,f
   849  02B0  3001               	movlw	1
   850  02B1  120A  118A  2385  120A  118A  	fcall	_lcd_linea
   851  02B6                     l1599:
   852                           
   853                           ;main_lab2.c: 114:         show(" Sen1 Sen2 Sen3 ");
   854  02B6  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   855  02B7  00F6               	movwf	show@s
   856  02B8  3080               	movlw	128
   857  02B9  00F7               	movwf	show@s+1
   858  02BA  120A  118A  23B1  120A  118A  	fcall	_show
   859  02BF                     l1601:
   860                           
   861                           ;main_lab2.c: 115:         lcd_linea(2,1);
   862  02BF  01F5               	clrf	lcd_linea@b
   863  02C0  0AF5               	incf	lcd_linea@b,f
   864  02C1  3002               	movlw	2
   865  02C2  120A  118A  2385  120A  118A  	fcall	_lcd_linea
   866                           
   867                           ;main_lab2.c: 116:         show(lcd_ascii());
   868  02C7  120A  118A  2148  120A  118A  	fcall	_lcd_ascii
   869  02CC  00F6               	movwf	show@s
   870  02CD  3000               	movlw	0
   871  02CE  00F7               	movwf	show@s+1
   872  02CF  120A  118A  23B1  120A  118A  	fcall	_show
   873  02D4  2A9F               	goto	l1595
   874  02D5  120A  118A  280C   	ljmp	start
   875  02D8                     __end_of_main:
   876                           
   877                           	psect	text1
   878  02D8                     __ptext1:	
   879 ;; *************** function _toggle_adc *****************
   880 ;; Defined at:
   881 ;;		line 177 in file "main_lab2.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          3       0       0       0       0
   898 ;;      Totals:         3       0       0       0       0
   899 ;;Total ram usage:        3 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _toggle_adc
   911  02D8                     _toggle_adc:
   912  02D8                     l1351:	
   913                           ;incstack = 0
   914                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   915                           
   916                           
   917                           ;main_lab2.c: 179:     if (ADCON0bits.GO==0)
   918  02D8  1283               	bcf	3,5	;RP0=0, select bank0
   919  02D9  1303               	bcf	3,6	;RP1=0, select bank0
   920  02DA  189F               	btfsc	31,1	;volatile
   921  02DB  2ADD               	goto	u441
   922  02DC  2ADE               	goto	u440
   923  02DD                     u441:
   924  02DD  2B18               	goto	l113
   925  02DE                     u440:
   926  02DE  2AFD               	goto	l1365
   927  02DF                     l1355:
   928                           
   929                           ;main_lab2.c: 184:                 conversion1=ADRESH;
   930  02DF  081E               	movf	30,w	;volatile
   931  02E0  00F2               	movwf	??_toggle_adc
   932  02E1  0872               	movf	??_toggle_adc,w
   933  02E2  00BD               	movwf	_conversion1
   934                           
   935                           ;main_lab2.c: 185:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   936  02E3  3042               	movlw	66
   937  02E4  00F2               	movwf	??_toggle_adc
   938  02E5                     u677:
   939  02E5  0BF2               	decfsz	??_toggle_adc,f
   940  02E6  2AE5               	goto	u677
   941  02E7  0000               	nop
   942  02E8                     l1357:
   943                           
   944                           ;main_lab2.c: 186:                 ADCON0bits.CHS=1;
   945  02E8  1283               	bcf	3,5	;RP0=0, select bank0
   946  02E9  1303               	bcf	3,6	;RP1=0, select bank0
   947  02EA  081F               	movf	31,w	;volatile
   948  02EB  39C3               	andlw	-61
   949  02EC  3804               	iorlw	4
   950  02ED  009F               	movwf	31	;volatile
   951                           
   952                           ;main_lab2.c: 187:                 break;
   953  02EE  2B10               	goto	l1367
   954  02EF                     l1359:
   955                           
   956                           ;main_lab2.c: 190:                 conversion2=ADRESH;
   957  02EF  081E               	movf	30,w	;volatile
   958  02F0  00F2               	movwf	??_toggle_adc
   959  02F1  0872               	movf	??_toggle_adc,w
   960  02F2  00BC               	movwf	_conversion2
   961                           
   962                           ;main_lab2.c: 191:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   963  02F3  3042               	movlw	66
   964  02F4  00F2               	movwf	??_toggle_adc
   965  02F5                     u687:
   966  02F5  0BF2               	decfsz	??_toggle_adc,f
   967  02F6  2AF5               	goto	u687
   968  02F7  0000               	nop
   969  02F8                     l1361:
   970                           
   971                           ;main_lab2.c: 192:                 ADCON0bits.CHS=0;
   972  02F8  30C3               	movlw	-61
   973  02F9  1283               	bcf	3,5	;RP0=0, select bank0
   974  02FA  1303               	bcf	3,6	;RP1=0, select bank0
   975  02FB  059F               	andwf	31,f	;volatile
   976                           
   977                           ;main_lab2.c: 193:                 break;
   978  02FC  2B10               	goto	l1367
   979  02FD                     l1365:
   980  02FD  0C1F               	rrf	31,w	;volatile
   981  02FE  00F2               	movwf	??_toggle_adc
   982  02FF  0C72               	rrf	??_toggle_adc,w
   983  0300  390F               	andlw	15
   984  0301  00F3               	movwf	??_toggle_adc+1
   985  0302  01F4               	clrf	??_toggle_adc+2
   986                           
   987                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   988                           ; Switch size 1, requested type "simple"
   989                           ; Number of cases is 1, Range of values is 0 to 0
   990                           ; switch strategies available:
   991                           ; Name         Instructions Cycles
   992                           ; simple_byte            4     3 (average)
   993                           ; direct_byte           11     8 (fixed)
   994                           ; jumptable            260     6 (fixed)
   995                           ;	Chosen strategy is simple_byte
   996  0303  0874               	movf	??_toggle_adc+2,w
   997  0304  3A00               	xorlw	0	; case 0
   998  0305  1903               	skipnz
   999  0306  2B08               	goto	l1663
  1000  0307  2B10               	goto	l1367
  1001  0308                     l1663:
  1002                           
  1003                           ; Switch size 1, requested type "simple"
  1004                           ; Number of cases is 2, Range of values is 0 to 1
  1005                           ; switch strategies available:
  1006                           ; Name         Instructions Cycles
  1007                           ; simple_byte            7     4 (average)
  1008                           ; direct_byte           14     8 (fixed)
  1009                           ; jumptable            260     6 (fixed)
  1010                           ;	Chosen strategy is simple_byte
  1011  0308  0873               	movf	??_toggle_adc+1,w
  1012  0309  3A00               	xorlw	0	; case 0
  1013  030A  1903               	skipnz
  1014  030B  2ADF               	goto	l1355
  1015  030C  3A01               	xorlw	1	; case 1
  1016  030D  1903               	skipnz
  1017  030E  2AEF               	goto	l1359
  1018  030F  2B10               	goto	l1367
  1019  0310                     l1367:
  1020                           
  1021                           ;main_lab2.c: 195:             _delay((unsigned long)((100)*(8000000/4000000.0)));
  1022  0310  3042               	movlw	66
  1023  0311  00F2               	movwf	??_toggle_adc
  1024  0312                     u697:
  1025  0312  0BF2               	decfsz	??_toggle_adc,f
  1026  0313  2B12               	goto	u697
  1027  0314  0000               	nop
  1028  0315                     l1369:
  1029                           
  1030                           ;main_lab2.c: 196:             ADCON0bits.GO=1;
  1031  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1033  0317  149F               	bsf	31,1	;volatile
  1034  0318                     l113:
  1035  0318  0008               	return
  1036  0319                     __end_of_toggle_adc:
  1037                           
  1038                           	psect	text2
  1039  03B1                     __ptext2:	
  1040 ;; *************** function _show *****************
  1041 ;; Defined at:
  1042 ;;		line 59 in file "LCD.c"
  1043 ;; Parameters:    Size  Location     Type
  1044 ;;  s               2    6[COMMON] PTR unsigned char 
  1045 ;;		 -> lcd_ascii@random(16), STR_1(17), 
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         2       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0
  1060 ;;      Totals:         2       0       0       0       0
  1061 ;;Total ram usage:        2 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		_dat
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           
  1072                           ;psect for function _show
  1073  03B1                     _show:
  1074  03B1                     l1411:	
  1075                           ;incstack = 0
  1076                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1077                           
  1078                           
  1079                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
  1080  03B1  2BC6               	goto	l1417
  1081  03B2                     l1413:
  1082                           
  1083                           ;LCD.c: 62:   dat(*s++);
  1084  03B2  0877               	movf	show@s+1,w
  1085  03B3  00FF               	movwf	btemp+1
  1086  03B4  0876               	movf	show@s,w
  1087  03B5  0084               	movwf	4
  1088  03B6  120A  118A  2400  120A  118A  	fcall	stringtab
  1089  03BB  120A  118A  243A  120A  118A  	fcall	_dat
  1090  03C0                     l1415:
  1091  03C0  3001               	movlw	1
  1092  03C1  07F6               	addwf	show@s,f
  1093  03C2  1803               	skipnc
  1094  03C3  0AF7               	incf	show@s+1,f
  1095  03C4  3000               	movlw	0
  1096  03C5  07F7               	addwf	show@s+1,f
  1097  03C6                     l1417:
  1098                           
  1099                           ;LCD.c: 61:  while(*s) {
  1100  03C6  0877               	movf	show@s+1,w
  1101  03C7  1283               	bcf	3,5	;RP0=0, select bank0
  1102  03C8  1303               	bcf	3,6	;RP1=0, select bank0
  1103  03C9  00FF               	movwf	btemp+1
  1104  03CA  0876               	movf	show@s,w
  1105  03CB  0084               	movwf	4
  1106  03CC  120A  118A  2400  120A  118A  	fcall	stringtab
  1107  03D1  3A00               	xorlw	0
  1108  03D2  1D03               	skipz
  1109  03D3  2BD5               	goto	u471
  1110  03D4  2BD6               	goto	u470
  1111  03D5                     u471:
  1112  03D5  2BB2               	goto	l1413
  1113  03D6                     u470:
  1114  03D6                     l178:
  1115  03D6  0008               	return
  1116  03D7                     __end_of_show:
  1117                           
  1118                           	psect	text3
  1119  043A                     __ptext3:	
  1120 ;; *************** function _dat *****************
  1121 ;; Defined at:
  1122 ;;		line 48 in file "LCD.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;  b               1    wreg     unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  b               1    4[COMMON] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         1       0       0       0       0
  1138 ;;      Temps:          2       0       0       0       0
  1139 ;;      Totals:         3       0       0       0       0
  1140 ;;Total ram usage:        3 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    1
  1143 ;; This function calls:
  1144 ;;		Nothing
  1145 ;; This function is called by:
  1146 ;;		_show
  1147 ;; This function uses a non-reentrant model
  1148 ;;
  1149                           
  1150                           
  1151                           ;psect for function _dat
  1152  043A                     _dat:
  1153                           
  1154                           ;incstack = 0
  1155                           ; Regs used in _dat: [wreg]
  1156                           ;dat@b stored from wreg
  1157  043A  00F4               	movwf	dat@b
  1158  043B                     l901:
  1159                           
  1160                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
  1161  043B  0874               	movf	dat@b,w
  1162  043C  1283               	bcf	3,5	;RP0=0, select bank0
  1163  043D  1303               	bcf	3,6	;RP1=0, select bank0
  1164  043E  0086               	movwf	6	;volatile
  1165  043F                     l903:
  1166                           
  1167                           ;LCD.c: 51:  RD5=1;
  1168  043F  1688               	bsf	8,5	;volatile
  1169  0440                     l905:
  1170                           
  1171                           ;LCD.c: 52:  RD6=0;
  1172  0440  1308               	bcf	8,6	;volatile
  1173  0441                     l907:
  1174                           
  1175                           ;LCD.c: 53:  RD7=1;
  1176  0441  1788               	bsf	8,7	;volatile
  1177                           
  1178                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1179  0442  3003               	movlw	3
  1180  0443  00F3               	movwf	??_dat+1
  1181  0444  3097               	movlw	151
  1182  0445  00F2               	movwf	??_dat
  1183  0446                     u707:
  1184  0446  0BF2               	decfsz	??_dat,f
  1185  0447  2C46               	goto	u707
  1186  0448  0BF3               	decfsz	??_dat+1,f
  1187  0449  2C46               	goto	u707
  1188  044A  2C4B               	nop2
  1189  044B                     l909:
  1190                           
  1191                           ;LCD.c: 55:  RD7=0;
  1192  044B  1283               	bcf	3,5	;RP0=0, select bank0
  1193  044C  1303               	bcf	3,6	;RP1=0, select bank0
  1194  044D  1388               	bcf	8,7	;volatile
  1195  044E                     l172:
  1196  044E  0008               	return
  1197  044F                     __end_of_dat:
  1198                           
  1199                           	psect	text4
  1200  0358                     __ptext4:	
  1201 ;; *************** function _setup *****************
  1202 ;; Defined at:
  1203 ;;		line 123 in file "main_lab2.c"
  1204 ;; Parameters:    Size  Location     Type
  1205 ;;		None
  1206 ;; Auto vars:     Size  Location     Type
  1207 ;;		None
  1208 ;; Return value:  Size  Location     Type
  1209 ;;                  1    wreg      void 
  1210 ;; Registers used:
  1211 ;;		wreg, status,2, status,0, pclath, cstack
  1212 ;; Tracked objects:
  1213 ;;		On entry : 0/0
  1214 ;;		On exit  : 0/0
  1215 ;;		Unchanged: 0/0
  1216 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1217 ;;      Params:         0       0       0       0       0
  1218 ;;      Locals:         0       0       0       0       0
  1219 ;;      Temps:          0       0       0       0       0
  1220 ;;      Totals:         0       0       0       0       0
  1221 ;;Total ram usage:        0 bytes
  1222 ;; Hardware stack levels used:    1
  1223 ;; Hardware stack levels required when called:    2
  1224 ;; This function calls:
  1225 ;;		_adc_config
  1226 ;;		_uart_config
  1227 ;; This function is called by:
  1228 ;;		_main
  1229 ;; This function uses a non-reentrant model
  1230 ;;
  1231                           
  1232                           
  1233                           ;psect for function _setup
  1234  0358                     _setup:
  1235  0358                     l993:	
  1236                           ;incstack = 0
  1237                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1238                           
  1239                           
  1240                           ;main_lab2.c: 126:     ANSEL=0;
  1241  0358  1683               	bsf	3,5	;RP0=1, select bank3
  1242  0359  1703               	bsf	3,6	;RP1=1, select bank3
  1243  035A  0188               	clrf	8	;volatile
  1244                           
  1245                           ;main_lab2.c: 127:     ANSELH=0;
  1246  035B  0189               	clrf	9	;volatile
  1247  035C                     l995:
  1248                           
  1249                           ;main_lab2.c: 128:     ANSELbits.ANS0=1;
  1250  035C  1408               	bsf	8,0	;volatile
  1251  035D                     l997:
  1252                           
  1253                           ;main_lab2.c: 129:     ANSELbits.ANS1=1;
  1254  035D  1488               	bsf	8,1	;volatile
  1255                           
  1256                           ;main_lab2.c: 132:     TRISB=0;
  1257  035E  1683               	bsf	3,5	;RP0=1, select bank1
  1258  035F  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0360  0186               	clrf	6	;volatile
  1260  0361                     l999:
  1261                           
  1262                           ;main_lab2.c: 138:     TRISDbits.TRISD5=0;
  1263  0361  1288               	bcf	8,5	;volatile
  1264  0362                     l1001:
  1265                           
  1266                           ;main_lab2.c: 139:     TRISDbits.TRISD6=0;
  1267  0362  1308               	bcf	8,6	;volatile
  1268  0363                     l1003:
  1269                           
  1270                           ;main_lab2.c: 140:     TRISDbits.TRISD7=0;
  1271  0363  1388               	bcf	8,7	;volatile
  1272                           
  1273                           ;main_lab2.c: 141:     TRISE=0;
  1274  0364  0189               	clrf	9	;volatile
  1275                           
  1276                           ;main_lab2.c: 143:     PORTB=0;
  1277  0365  1283               	bcf	3,5	;RP0=0, select bank0
  1278  0366  1303               	bcf	3,6	;RP1=0, select bank0
  1279  0367  0186               	clrf	6	;volatile
  1280                           
  1281                           ;main_lab2.c: 145:     PORTD=0;
  1282  0368  0188               	clrf	8	;volatile
  1283                           
  1284                           ;main_lab2.c: 146:     PORTE=0;
  1285  0369  0189               	clrf	9	;volatile
  1286  036A                     l1005:
  1287                           
  1288                           ;main_lab2.c: 149:     OSCCONbits.IRCF = 0b111;
  1289  036A  3070               	movlw	112
  1290  036B  1683               	bsf	3,5	;RP0=1, select bank1
  1291  036C  1303               	bcf	3,6	;RP1=0, select bank1
  1292  036D  048F               	iorwf	15,f	;volatile
  1293  036E                     l1007:
  1294                           
  1295                           ;main_lab2.c: 150:     OSCCONbits.SCS = 1;
  1296  036E  140F               	bsf	15,0	;volatile
  1297  036F                     l1009:
  1298                           
  1299                           ;main_lab2.c: 153:     adc_config();
  1300  036F  120A  118A  2464  120A  118A  	fcall	_adc_config
  1301  0374                     l1011:
  1302                           
  1303                           ;main_lab2.c: 155:     uart_config();
  1304  0374  120A  118A  244F  120A  118A  	fcall	_uart_config
  1305  0379                     l1013:
  1306                           
  1307                           ;main_lab2.c: 158:     INTCONbits.GIE=1;
  1308  0379  178B               	bsf	11,7	;volatile
  1309  037A                     l1015:
  1310                           
  1311                           ;main_lab2.c: 159:     INTCONbits.T0IE=0;
  1312  037A  128B               	bcf	11,5	;volatile
  1313  037B                     l1017:
  1314                           
  1315                           ;main_lab2.c: 160:     INTCONbits.T0IF=0;
  1316  037B  110B               	bcf	11,2	;volatile
  1317  037C                     l1019:
  1318                           
  1319                           ;main_lab2.c: 161:     INTCONbits.RBIE=0;
  1320  037C  118B               	bcf	11,3	;volatile
  1321  037D                     l1021:
  1322                           
  1323                           ;main_lab2.c: 162:     INTCONbits.RBIF=0;
  1324  037D  100B               	bcf	11,0	;volatile
  1325  037E                     l1023:
  1326                           
  1327                           ;main_lab2.c: 164:     PIE1bits.ADIE = 0 ;
  1328  037E  1683               	bsf	3,5	;RP0=1, select bank1
  1329  037F  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0380  130C               	bcf	12,6	;volatile
  1331  0381                     l1025:
  1332                           
  1333                           ;main_lab2.c: 165:     PIR1bits.ADIF = 0;
  1334  0381  1283               	bcf	3,5	;RP0=0, select bank0
  1335  0382  1303               	bcf	3,6	;RP1=0, select bank0
  1336  0383  130C               	bcf	12,6	;volatile
  1337  0384                     l105:
  1338  0384  0008               	return
  1339  0385                     __end_of_setup:
  1340                           
  1341                           	psect	text5
  1342  044F                     __ptext5:	
  1343 ;; *************** function _uart_config *****************
  1344 ;; Defined at:
  1345 ;;		line 18 in file "uart_config.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;		None
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;		None
  1350 ;; Return value:  Size  Location     Type
  1351 ;;                  1    wreg      void 
  1352 ;; Registers used:
  1353 ;;		wreg, status,2
  1354 ;; Tracked objects:
  1355 ;;		On entry : 0/0
  1356 ;;		On exit  : 0/0
  1357 ;;		Unchanged: 0/0
  1358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1359 ;;      Params:         0       0       0       0       0
  1360 ;;      Locals:         0       0       0       0       0
  1361 ;;      Temps:          0       0       0       0       0
  1362 ;;      Totals:         0       0       0       0       0
  1363 ;;Total ram usage:        0 bytes
  1364 ;; Hardware stack levels used:    1
  1365 ;; Hardware stack levels required when called:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_setup
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _uart_config
  1375  044F                     _uart_config:
  1376  044F                     l815:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _uart_config: [wreg+status,2]
  1379                           
  1380                           
  1381                           ;uart_config.c: 22:     TXSTAbits.SYNC = 0;
  1382  044F  1683               	bsf	3,5	;RP0=1, select bank1
  1383  0450  1303               	bcf	3,6	;RP1=0, select bank1
  1384  0451  1218               	bcf	24,4	;volatile
  1385                           
  1386                           ;uart_config.c: 23:     TXSTAbits.BRGH = 1;
  1387  0452  1518               	bsf	24,2	;volatile
  1388                           
  1389                           ;uart_config.c: 25:     BAUDCTLbits.BRG16 = 1;
  1390  0453  1683               	bsf	3,5	;RP0=1, select bank3
  1391  0454  1703               	bsf	3,6	;RP1=1, select bank3
  1392  0455  1587               	bsf	7,3	;volatile
  1393  0456                     l817:
  1394                           
  1395                           ;uart_config.c: 26:     SPBRG = 25;
  1396  0456  3019               	movlw	25
  1397  0457  1683               	bsf	3,5	;RP0=1, select bank1
  1398  0458  1303               	bcf	3,6	;RP1=0, select bank1
  1399  0459  0099               	movwf	25	;volatile
  1400  045A                     l819:
  1401                           
  1402                           ;uart_config.c: 27:     SPBRGH = 0;
  1403  045A  019A               	clrf	26	;volatile
  1404  045B                     l821:
  1405                           
  1406                           ;uart_config.c: 29:     RCSTAbits.SPEN = 1;
  1407  045B  1283               	bcf	3,5	;RP0=0, select bank0
  1408  045C  1303               	bcf	3,6	;RP1=0, select bank0
  1409  045D  1798               	bsf	24,7	;volatile
  1410  045E                     l823:
  1411                           
  1412                           ;uart_config.c: 30:     RCSTAbits.RX9 = 0;
  1413  045E  1318               	bcf	24,6	;volatile
  1414  045F                     l825:
  1415                           
  1416                           ;uart_config.c: 32:     RCSTAbits.CREN = 1;
  1417  045F  1618               	bsf	24,4	;volatile
  1418  0460                     l827:
  1419                           
  1420                           ;uart_config.c: 33:     TXSTAbits.TXEN = 1;
  1421  0460  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0461  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0462  1698               	bsf	24,5	;volatile
  1424  0463                     l203:
  1425  0463  0008               	return
  1426  0464                     __end_of_uart_config:
  1427                           
  1428                           	psect	text6
  1429  0464                     __ptext6:	
  1430 ;; *************** function _adc_config *****************
  1431 ;; Defined at:
  1432 ;;		line 20 in file "adc_config.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;		None
  1437 ;; Return value:  Size  Location     Type
  1438 ;;                  1    wreg      void 
  1439 ;; Registers used:
  1440 ;;		wreg, status,2, status,0
  1441 ;; Tracked objects:
  1442 ;;		On entry : 0/0
  1443 ;;		On exit  : 0/0
  1444 ;;		Unchanged: 0/0
  1445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1446 ;;      Params:         0       0       0       0       0
  1447 ;;      Locals:         0       0       0       0       0
  1448 ;;      Temps:          1       0       0       0       0
  1449 ;;      Totals:         1       0       0       0       0
  1450 ;;Total ram usage:        1 bytes
  1451 ;; Hardware stack levels used:    1
  1452 ;; Hardware stack levels required when called:    1
  1453 ;; This function calls:
  1454 ;;		Nothing
  1455 ;; This function is called by:
  1456 ;;		_setup
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _adc_config
  1462  0464                     _adc_config:
  1463  0464                     l805:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1466                           
  1467                           
  1468                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1469  0464  1683               	bsf	3,5	;RP0=1, select bank1
  1470  0465  1303               	bcf	3,6	;RP1=0, select bank1
  1471  0466  139F               	bcf	31,7	;volatile
  1472                           
  1473                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1474  0467  121F               	bcf	31,4	;volatile
  1475                           
  1476                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1477  0468  129F               	bcf	31,5	;volatile
  1478  0469                     l807:
  1479                           
  1480                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1481  0469  1283               	bcf	3,5	;RP0=0, select bank0
  1482  046A  1303               	bcf	3,6	;RP1=0, select bank0
  1483  046B  081F               	movf	31,w	;volatile
  1484  046C  393F               	andlw	-193
  1485  046D  3840               	iorlw	64
  1486  046E  009F               	movwf	31	;volatile
  1487                           
  1488                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1489  046F  30C3               	movlw	-61
  1490  0470  059F               	andwf	31,f	;volatile
  1491  0471                     l809:
  1492                           
  1493                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1494  0471  3021               	movlw	33
  1495  0472  00F2               	movwf	??_adc_config
  1496  0473                     u717:
  1497  0473  0BF2               	decfsz	??_adc_config,f
  1498  0474  2C73               	goto	u717
  1499  0475                     l811:
  1500                           
  1501                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1502  0475  1283               	bcf	3,5	;RP0=0, select bank0
  1503  0476  1303               	bcf	3,6	;RP1=0, select bank0
  1504  0477  141F               	bsf	31,0	;volatile
  1505  0478                     l151:
  1506  0478  0008               	return
  1507  0479                     __end_of_adc_config:
  1508                           
  1509                           	psect	text7
  1510  03D7                     __ptext7:	
  1511 ;; *************** function _recepcion_uart *****************
  1512 ;; Defined at:
  1513 ;;		line 202 in file "main_lab2.c"
  1514 ;; Parameters:    Size  Location     Type
  1515 ;;		None
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;		None
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       0       0       0       0
  1529 ;;      Temps:          2       0       0       0       0
  1530 ;;      Totals:         2       0       0       0       0
  1531 ;;Total ram usage:        2 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    1
  1534 ;; This function calls:
  1535 ;;		Nothing
  1536 ;; This function is called by:
  1537 ;;		_main
  1538 ;; This function uses a non-reentrant model
  1539 ;;
  1540                           
  1541                           
  1542                           ;psect for function _recepcion_uart
  1543  03D7                     _recepcion_uart:
  1544  03D7                     l1377:	
  1545                           ;incstack = 0
  1546                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  1547                           
  1548                           
  1549                           ;main_lab2.c: 204:     switch(dato_recibido)
  1550  03D7  2BE8               	goto	l1387
  1551  03D8                     l1379:
  1552                           
  1553                           ;main_lab2.c: 207:             cuenta_uart++;
  1554  03D8  3001               	movlw	1
  1555  03D9  00F2               	movwf	??_recepcion_uart
  1556  03DA  0872               	movf	??_recepcion_uart,w
  1557  03DB  1283               	bcf	3,5	;RP0=0, select bank0
  1558  03DC  1303               	bcf	3,6	;RP1=0, select bank0
  1559  03DD  07BB               	addwf	_cuenta_uart,f
  1560                           
  1561                           ;main_lab2.c: 208:             break;
  1562  03DE  2BF8               	goto	l121
  1563  03DF                     l1381:
  1564                           
  1565                           ;main_lab2.c: 211:             cuenta_uart--;
  1566  03DF  3001               	movlw	1
  1567  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1568  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1569  03E2  02BB               	subwf	_cuenta_uart,f
  1570                           
  1571                           ;main_lab2.c: 212:             break;
  1572  03E3  2BF8               	goto	l121
  1573  03E4                     l1383:
  1574                           
  1575                           ;main_lab2.c: 215:             cuenta_uart=0;
  1576  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1577  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1578  03E6  01BB               	clrf	_cuenta_uart
  1579                           
  1580                           ;main_lab2.c: 216:             break;
  1581  03E7  2BF8               	goto	l121
  1582  03E8                     l1387:
  1583  03E8  087B               	movf	_dato_recibido,w
  1584  03E9  00F2               	movwf	??_recepcion_uart
  1585  03EA  01F3               	clrf	??_recepcion_uart+1
  1586                           
  1587                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1588                           ; Switch size 1, requested type "simple"
  1589                           ; Number of cases is 1, Range of values is 0 to 0
  1590                           ; switch strategies available:
  1591                           ; Name         Instructions Cycles
  1592                           ; simple_byte            4     3 (average)
  1593                           ; direct_byte           11     8 (fixed)
  1594                           ; jumptable            260     6 (fixed)
  1595                           ;	Chosen strategy is simple_byte
  1596  03EB  0873               	movf	??_recepcion_uart+1,w
  1597  03EC  3A00               	xorlw	0	; case 0
  1598  03ED  1903               	skipnz
  1599  03EE  2BF0               	goto	l1665
  1600  03EF  2BE4               	goto	l1383
  1601  03F0                     l1665:
  1602                           
  1603                           ; Switch size 1, requested type "simple"
  1604                           ; Number of cases is 2, Range of values is 1 to 2
  1605                           ; switch strategies available:
  1606                           ; Name         Instructions Cycles
  1607                           ; simple_byte            7     4 (average)
  1608                           ; direct_byte           17    11 (fixed)
  1609                           ; jumptable            263     9 (fixed)
  1610                           ;	Chosen strategy is simple_byte
  1611  03F0  0872               	movf	??_recepcion_uart,w
  1612  03F1  3A01               	xorlw	1	; case 1
  1613  03F2  1903               	skipnz
  1614  03F3  2BD8               	goto	l1379
  1615  03F4  3A03               	xorlw	3	; case 2
  1616  03F5  1903               	skipnz
  1617  03F6  2BDF               	goto	l1381
  1618  03F7  2BE4               	goto	l1383
  1619  03F8                     l121:
  1620  03F8  0008               	return
  1621  03F9                     __end_of_recepcion_uart:
  1622                           
  1623                           	psect	text8
  1624  0385                     __ptext8:	
  1625 ;; *************** function _lcd_linea *****************
  1626 ;; Defined at:
  1627 ;;		line 67 in file "LCD.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;  a               1    wreg     unsigned char 
  1630 ;;  b               1    5[COMMON] unsigned char 
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  a               1    7[COMMON] unsigned char 
  1633 ;;  z               1    9[COMMON] unsigned char 
  1634 ;;  temp            1    8[COMMON] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  1    wreg      void 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, pclath, cstack
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1644 ;;      Params:         1       0       0       0       0
  1645 ;;      Locals:         3       0       0       0       0
  1646 ;;      Temps:          1       0       0       0       0
  1647 ;;      Totals:         5       0       0       0       0
  1648 ;;Total ram usage:        5 bytes
  1649 ;; Hardware stack levels used:    1
  1650 ;; Hardware stack levels required when called:    2
  1651 ;; This function calls:
  1652 ;;		_cmd
  1653 ;; This function is called by:
  1654 ;;		_main
  1655 ;; This function uses a non-reentrant model
  1656 ;;
  1657                           
  1658                           
  1659                           ;psect for function _lcd_linea
  1660  0385                     _lcd_linea:
  1661                           
  1662                           ;incstack = 0
  1663                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1664                           ;lcd_linea@a stored from wreg
  1665  0385  00F7               	movwf	lcd_linea@a
  1666  0386                     l1395:
  1667                           
  1668                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1669  0386  0377               	decf	lcd_linea@a,w
  1670  0387  1D03               	btfss	3,2
  1671  0388  2B8A               	goto	u451
  1672  0389  2B8B               	goto	u450
  1673  038A                     u451:
  1674  038A  2B9B               	goto	l1403
  1675  038B                     u450:
  1676  038B                     l1397:
  1677                           
  1678                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1679  038B  0875               	movf	lcd_linea@b,w
  1680  038C  3E7F               	addlw	127
  1681  038D  00F6               	movwf	??_lcd_linea
  1682  038E  0876               	movf	??_lcd_linea,w
  1683  038F  00F8               	movwf	lcd_linea@temp
  1684  0390                     l1399:
  1685                           
  1686                           ;LCD.c: 71:         z = temp;
  1687  0390  0878               	movf	lcd_linea@temp,w
  1688  0391  00F6               	movwf	??_lcd_linea
  1689  0392  0876               	movf	??_lcd_linea,w
  1690  0393  00F9               	movwf	lcd_linea@z
  1691  0394                     l1401:
  1692                           
  1693                           ;LCD.c: 72:         cmd(z);
  1694  0394  0879               	movf	lcd_linea@z,w
  1695  0395  120A  118A  2479  120A  118A  	fcall	_cmd
  1696                           
  1697                           ;LCD.c: 74:     } else if (a == 2) {
  1698  039A  2BB0               	goto	l184
  1699  039B                     l1403:
  1700  039B  3002               	movlw	2
  1701  039C  0677               	xorwf	lcd_linea@a,w
  1702  039D  1D03               	btfss	3,2
  1703  039E  2BA0               	goto	u461
  1704  039F  2BA1               	goto	u460
  1705  03A0                     u461:
  1706  03A0  2BB0               	goto	l184
  1707  03A1                     u460:
  1708  03A1                     l1405:
  1709                           
  1710                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1711  03A1  0875               	movf	lcd_linea@b,w
  1712  03A2  3EBF               	addlw	191
  1713  03A3  00F6               	movwf	??_lcd_linea
  1714  03A4  0876               	movf	??_lcd_linea,w
  1715  03A5  00F8               	movwf	lcd_linea@temp
  1716  03A6                     l1407:
  1717                           
  1718                           ;LCD.c: 76:         z = temp;
  1719  03A6  0878               	movf	lcd_linea@temp,w
  1720  03A7  00F6               	movwf	??_lcd_linea
  1721  03A8  0876               	movf	??_lcd_linea,w
  1722  03A9  00F9               	movwf	lcd_linea@z
  1723  03AA                     l1409:
  1724                           
  1725                           ;LCD.c: 77:         cmd(z);
  1726  03AA  0879               	movf	lcd_linea@z,w
  1727  03AB  120A  118A  2479  120A  118A  	fcall	_cmd
  1728  03B0                     l184:
  1729  03B0  0008               	return
  1730  03B1                     __end_of_lcd_linea:
  1731                           
  1732                           	psect	text9
  1733  0421                     __ptext9:	
  1734 ;; *************** function _lcd_init *****************
  1735 ;; Defined at:
  1736 ;;		line 28 in file "LCD.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;		None
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;		None
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, status,2, status,0, pclath, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1750 ;;      Params:         0       0       0       0       0
  1751 ;;      Locals:         0       0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0
  1753 ;;      Totals:         0       0       0       0       0
  1754 ;;Total ram usage:        0 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    2
  1757 ;; This function calls:
  1758 ;;		_cmd
  1759 ;; This function is called by:
  1760 ;;		_main
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           
  1765                           ;psect for function _lcd_init
  1766  0421                     _lcd_init:
  1767  0421                     l1029:	
  1768                           ;incstack = 0
  1769                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1770                           
  1771                           
  1772                           ;LCD.c: 30:  cmd(0x38);
  1773  0421  3038               	movlw	56
  1774  0422  120A  118A  2479  120A  118A  	fcall	_cmd
  1775                           
  1776                           ;LCD.c: 31:  cmd(0x0c);
  1777  0427  300C               	movlw	12
  1778  0428  120A  118A  2479  120A  118A  	fcall	_cmd
  1779                           
  1780                           ;LCD.c: 32:  cmd(0x06);
  1781  042D  3006               	movlw	6
  1782  042E  120A  118A  2479  120A  118A  	fcall	_cmd
  1783                           
  1784                           ;LCD.c: 33:  cmd(0x80);
  1785  0433  3080               	movlw	128
  1786  0434  120A  118A  2479  120A  118A  	fcall	_cmd
  1787  0439                     l166:
  1788  0439  0008               	return
  1789  043A                     __end_of_lcd_init:
  1790                           
  1791                           	psect	text10
  1792  0479                     __ptext10:	
  1793 ;; *************** function _cmd *****************
  1794 ;; Defined at:
  1795 ;;		line 37 in file "LCD.c"
  1796 ;; Parameters:    Size  Location     Type
  1797 ;;  a               1    wreg     unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;  a               1    4[COMMON] unsigned char 
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       0       0       0       0
  1810 ;;      Locals:         1       0       0       0       0
  1811 ;;      Temps:          2       0       0       0       0
  1812 ;;      Totals:         3       0       0       0       0
  1813 ;;Total ram usage:        3 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    1
  1816 ;; This function calls:
  1817 ;;		Nothing
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;;		_lcd_init
  1821 ;;		_lcd_linea
  1822 ;;		_lcd_mov_derecha
  1823 ;;		_lcd_mov_izquierda
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _cmd
  1829  0479                     _cmd:
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _cmd: [wreg]
  1833                           ;cmd@a stored from wreg
  1834  0479  00F4               	movwf	cmd@a
  1835  047A                     l795:
  1836                           
  1837                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1838  047A  0874               	movf	cmd@a,w
  1839  047B  1283               	bcf	3,5	;RP0=0, select bank0
  1840  047C  1303               	bcf	3,6	;RP1=0, select bank0
  1841  047D  0086               	movwf	6	;volatile
  1842  047E                     l797:
  1843                           
  1844                           ;LCD.c: 40:  RD5=0;
  1845  047E  1288               	bcf	8,5	;volatile
  1846  047F                     l799:
  1847                           
  1848                           ;LCD.c: 41:  RD6=0;
  1849  047F  1308               	bcf	8,6	;volatile
  1850  0480                     l801:
  1851                           
  1852                           ;LCD.c: 42:  RD7=1;
  1853  0480  1788               	bsf	8,7	;volatile
  1854                           
  1855                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1856  0481  3003               	movlw	3
  1857  0482  00F3               	movwf	??_cmd+1
  1858  0483  3097               	movlw	151
  1859  0484  00F2               	movwf	??_cmd
  1860  0485                     u727:
  1861  0485  0BF2               	decfsz	??_cmd,f
  1862  0486  2C85               	goto	u727
  1863  0487  0BF3               	decfsz	??_cmd+1,f
  1864  0488  2C85               	goto	u727
  1865  0489  2C8A               	nop2
  1866  048A                     l803:
  1867                           
  1868                           ;LCD.c: 44:  RD7=0;
  1869  048A  1283               	bcf	3,5	;RP0=0, select bank0
  1870  048B  1303               	bcf	3,6	;RP1=0, select bank0
  1871  048C  1388               	bcf	8,7	;volatile
  1872  048D                     l169:
  1873  048D  0008               	return
  1874  048E                     __end_of_cmd:
  1875                           
  1876                           	psect	text11
  1877  0148                     __ptext11:	
  1878 ;; *************** function _lcd_ascii *****************
  1879 ;; Defined at:
  1880 ;;		line 285 in file "main_lab2.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  random         16    0[BANK0 ] unsigned char [16]
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1    wreg      PTR unsigned char 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 0/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1894 ;;      Params:         0       0       0       0       0
  1895 ;;      Locals:         0      16       0       0       0
  1896 ;;      Temps:          1       0       0       0       0
  1897 ;;      Totals:         1      16       0       0       0
  1898 ;;Total ram usage:       17 bytes
  1899 ;; Hardware stack levels used:    1
  1900 ;; Hardware stack levels required when called:    2
  1901 ;; This function calls:
  1902 ;;		_datos_ascii
  1903 ;; This function is called by:
  1904 ;;		_main
  1905 ;; This function uses a non-reentrant model
  1906 ;;
  1907                           
  1908                           
  1909                           ;psect for function _lcd_ascii
  1910  0148                     _lcd_ascii:
  1911  0148                     l1419:	
  1912                           ;incstack = 0
  1913                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1914                           
  1915                           
  1916                           ;main_lab2.c: 287:     char random[16];;main_lab2.c: 288:     random[0]=datos_ascii(cent
      +                          enas1);
  1917  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1918  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1919  014A  083A               	movf	_centenas1,w
  1920  014B  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1921  0150  00F5               	movwf	??_lcd_ascii
  1922  0151  0875               	movf	??_lcd_ascii,w
  1923  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0154  00A0               	movwf	lcd_ascii@random
  1926                           
  1927                           ;main_lab2.c: 289:     random[1]=datos_ascii(decenas1);
  1928  0155  0839               	movf	_decenas1,w
  1929  0156  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1930  015B  00F5               	movwf	??_lcd_ascii
  1931  015C  0875               	movf	??_lcd_ascii,w
  1932  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1933  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1934  015F  00A1               	movwf	lcd_ascii@random+1
  1935                           
  1936                           ;main_lab2.c: 290:     random[2]=datos_ascii(unidades1);
  1937  0160  0838               	movf	_unidades1,w
  1938  0161  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1939  0166  00F5               	movwf	??_lcd_ascii
  1940  0167  0875               	movf	??_lcd_ascii,w
  1941  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1942  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1943  016A  00A2               	movwf	lcd_ascii@random+2
  1944  016B                     l1421:
  1945                           
  1946                           ;main_lab2.c: 291:     random[3]=32;
  1947  016B  3020               	movlw	32
  1948  016C  00F5               	movwf	??_lcd_ascii
  1949  016D  0875               	movf	??_lcd_ascii,w
  1950  016E  00A3               	movwf	lcd_ascii@random+3
  1951  016F                     l1423:
  1952                           
  1953                           ;main_lab2.c: 292:     random[4]=32;
  1954  016F  3020               	movlw	32
  1955  0170  00F5               	movwf	??_lcd_ascii
  1956  0171  0875               	movf	??_lcd_ascii,w
  1957  0172  00A4               	movwf	lcd_ascii@random+4
  1958                           
  1959                           ;main_lab2.c: 293:     random[5]=datos_ascii(centenas2);
  1960  0173  3000               	movlw	0
  1961  0174  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1962  0179  00F5               	movwf	??_lcd_ascii
  1963  017A  0875               	movf	??_lcd_ascii,w
  1964  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1965  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1966  017D  00A5               	movwf	lcd_ascii@random+5
  1967                           
  1968                           ;main_lab2.c: 294:     random[6]=datos_ascii(decenas2);
  1969  017E  3000               	movlw	0
  1970  017F  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1971  0184  00F5               	movwf	??_lcd_ascii
  1972  0185  0875               	movf	??_lcd_ascii,w
  1973  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1974  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1975  0188  00A6               	movwf	lcd_ascii@random+6
  1976                           
  1977                           ;main_lab2.c: 295:     random[7]=datos_ascii(unidades2);
  1978  0189  3000               	movlw	0
  1979  018A  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  1980  018F  00F5               	movwf	??_lcd_ascii
  1981  0190  0875               	movf	??_lcd_ascii,w
  1982  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0193  00A7               	movwf	lcd_ascii@random+7
  1985  0194                     l1425:
  1986                           
  1987                           ;main_lab2.c: 296:     random[8]=32;
  1988  0194  3020               	movlw	32
  1989  0195  00F5               	movwf	??_lcd_ascii
  1990  0196  0875               	movf	??_lcd_ascii,w
  1991  0197  00A8               	movwf	lcd_ascii@random+8
  1992  0198                     l1427:
  1993                           
  1994                           ;main_lab2.c: 297:     random[9]=32;
  1995  0198  3020               	movlw	32
  1996  0199  00F5               	movwf	??_lcd_ascii
  1997  019A  0875               	movf	??_lcd_ascii,w
  1998  019B  00A9               	movwf	lcd_ascii@random+9
  1999                           
  2000                           ;main_lab2.c: 298:     random[10]=datos_ascii(centenas3);
  2001  019C  3000               	movlw	0
  2002  019D  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  2003  01A2  00F5               	movwf	??_lcd_ascii
  2004  01A3  0875               	movf	??_lcd_ascii,w
  2005  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2006  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2007  01A6  00AA               	movwf	lcd_ascii@random+10
  2008                           
  2009                           ;main_lab2.c: 299:     random[11]=datos_ascii(decenas3);
  2010  01A7  3000               	movlw	0
  2011  01A8  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  2012  01AD  00F5               	movwf	??_lcd_ascii
  2013  01AE  0875               	movf	??_lcd_ascii,w
  2014  01AF  1283               	bcf	3,5	;RP0=0, select bank0
  2015  01B0  1303               	bcf	3,6	;RP1=0, select bank0
  2016  01B1  00AB               	movwf	lcd_ascii@random+11
  2017                           
  2018                           ;main_lab2.c: 300:     random[12]=datos_ascii(unidades3);
  2019  01B2  3000               	movlw	0
  2020  01B3  120A  118A  2319  120A  118A  	fcall	_datos_ascii
  2021  01B8  00F5               	movwf	??_lcd_ascii
  2022  01B9  0875               	movf	??_lcd_ascii,w
  2023  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  2024  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  2025  01BC  00AC               	movwf	lcd_ascii@random+12
  2026  01BD                     l1429:
  2027                           
  2028                           ;main_lab2.c: 301:     random[13]=32;
  2029  01BD  3020               	movlw	32
  2030  01BE  00F5               	movwf	??_lcd_ascii
  2031  01BF  0875               	movf	??_lcd_ascii,w
  2032  01C0  00AD               	movwf	lcd_ascii@random+13
  2033  01C1                     l1431:
  2034                           
  2035                           ;main_lab2.c: 302:     random[14]=32;
  2036  01C1  3020               	movlw	32
  2037  01C2  00F5               	movwf	??_lcd_ascii
  2038  01C3  0875               	movf	??_lcd_ascii,w
  2039  01C4  00AE               	movwf	lcd_ascii@random+14
  2040  01C5                     l1433:
  2041                           
  2042                           ;main_lab2.c: 303:     random[15]=32;
  2043  01C5  3020               	movlw	32
  2044  01C6  00F5               	movwf	??_lcd_ascii
  2045  01C7  0875               	movf	??_lcd_ascii,w
  2046  01C8  00AF               	movwf	lcd_ascii@random+15
  2047  01C9                     l1435:
  2048                           
  2049                           ;main_lab2.c: 304:     return random;
  2050  01C9  3020               	movlw	(low (lcd_ascii@random| 0))& (0+255)
  2051  01CA                     l142:
  2052  01CA  0008               	return
  2053  01CB                     __end_of_lcd_ascii:
  2054                           
  2055                           	psect	text12
  2056  0319                     __ptext12:	
  2057 ;; *************** function _datos_ascii *****************
  2058 ;; Defined at:
  2059 ;;		line 221 in file "main_lab2.c"
  2060 ;; Parameters:    Size  Location     Type
  2061 ;;  numero          1    wreg     unsigned char 
  2062 ;; Auto vars:     Size  Location     Type
  2063 ;;  numero          1    4[COMMON] unsigned char 
  2064 ;; Return value:  Size  Location     Type
  2065 ;;                  1    wreg      unsigned char 
  2066 ;; Registers used:
  2067 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2068 ;; Tracked objects:
  2069 ;;		On entry : 0/0
  2070 ;;		On exit  : 0/0
  2071 ;;		Unchanged: 0/0
  2072 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2073 ;;      Params:         0       0       0       0       0
  2074 ;;      Locals:         1       0       0       0       0
  2075 ;;      Temps:          2       0       0       0       0
  2076 ;;      Totals:         3       0       0       0       0
  2077 ;;Total ram usage:        3 bytes
  2078 ;; Hardware stack levels used:    1
  2079 ;; Hardware stack levels required when called:    1
  2080 ;; This function calls:
  2081 ;;		Nothing
  2082 ;; This function is called by:
  2083 ;;		_lcd_ascii
  2084 ;; This function uses a non-reentrant model
  2085 ;;
  2086                           
  2087                           
  2088                           ;psect for function _datos_ascii
  2089  0319                     _datos_ascii:
  2090                           
  2091                           ;incstack = 0
  2092                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2093                           ;datos_ascii@numero stored from wreg
  2094  0319  00F4               	movwf	datos_ascii@numero
  2095  031A                     l1199:
  2096                           
  2097                           ;main_lab2.c: 221: char datos_ascii(uint8_t numero);main_lab2.c: 222: {;main_lab2.c: 223
      +                          :     switch(numero)
  2098  031A  2B2F               	goto	l1263
  2099  031B                     l1201:
  2100                           
  2101                           ;main_lab2.c: 226:             return 48;
  2102  031B  3030               	movlw	48
  2103  031C  2B57               	goto	l126
  2104  031D                     l1207:
  2105                           
  2106                           ;main_lab2.c: 230:             return 49;
  2107  031D  3031               	movlw	49
  2108  031E  2B57               	goto	l126
  2109  031F                     l1213:
  2110                           
  2111                           ;main_lab2.c: 234:             return 50;
  2112  031F  3032               	movlw	50
  2113  0320  2B57               	goto	l126
  2114  0321                     l1219:
  2115                           
  2116                           ;main_lab2.c: 238:             return 51;
  2117  0321  3033               	movlw	51
  2118  0322  2B57               	goto	l126
  2119  0323                     l1225:
  2120                           
  2121                           ;main_lab2.c: 242:             return 52;
  2122  0323  3034               	movlw	52
  2123  0324  2B57               	goto	l126
  2124  0325                     l1231:
  2125                           
  2126                           ;main_lab2.c: 246:             return 53;
  2127  0325  3035               	movlw	53
  2128  0326  2B57               	goto	l126
  2129  0327                     l1237:
  2130                           
  2131                           ;main_lab2.c: 250:             return 54;
  2132  0327  3036               	movlw	54
  2133  0328  2B57               	goto	l126
  2134  0329                     l1243:
  2135                           
  2136                           ;main_lab2.c: 254:             return 55;
  2137  0329  3037               	movlw	55
  2138  032A  2B57               	goto	l126
  2139  032B                     l1249:
  2140                           
  2141                           ;main_lab2.c: 258:             return 56;
  2142  032B  3038               	movlw	56
  2143  032C  2B57               	goto	l126
  2144  032D                     l1255:
  2145                           
  2146                           ;main_lab2.c: 262:             return 57;
  2147  032D  3039               	movlw	57
  2148  032E  2B57               	goto	l126
  2149  032F                     l1263:
  2150  032F  0874               	movf	datos_ascii@numero,w
  2151  0330  00F2               	movwf	??_datos_ascii
  2152  0331  01F3               	clrf	??_datos_ascii+1
  2153                           
  2154                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 1, Range of values is 0 to 0
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte            4     3 (average)
  2160                           ; direct_byte           11     8 (fixed)
  2161                           ; jumptable            260     6 (fixed)
  2162                           ;	Chosen strategy is simple_byte
  2163  0332  0873               	movf	??_datos_ascii+1,w
  2164  0333  3A00               	xorlw	0	; case 0
  2165  0334  1903               	skipnz
  2166  0335  2B37               	goto	l1667
  2167  0336  2B57               	goto	l126
  2168  0337                     l1667:
  2169                           
  2170                           ; Switch size 1, requested type "simple"
  2171                           ; Number of cases is 10, Range of values is 0 to 9
  2172                           ; switch strategies available:
  2173                           ; Name         Instructions Cycles
  2174                           ; simple_byte           31    16 (average)
  2175                           ; direct_byte           38     8 (fixed)
  2176                           ; jumptable            260     6 (fixed)
  2177                           ;	Chosen strategy is simple_byte
  2178  0337  0872               	movf	??_datos_ascii,w
  2179  0338  3A00               	xorlw	0	; case 0
  2180  0339  1903               	skipnz
  2181  033A  2B1B               	goto	l1201
  2182  033B  3A01               	xorlw	1	; case 1
  2183  033C  1903               	skipnz
  2184  033D  2B1D               	goto	l1207
  2185  033E  3A03               	xorlw	3	; case 2
  2186  033F  1903               	skipnz
  2187  0340  2B1F               	goto	l1213
  2188  0341  3A01               	xorlw	1	; case 3
  2189  0342  1903               	skipnz
  2190  0343  2B21               	goto	l1219
  2191  0344  3A07               	xorlw	7	; case 4
  2192  0345  1903               	skipnz
  2193  0346  2B23               	goto	l1225
  2194  0347  3A01               	xorlw	1	; case 5
  2195  0348  1903               	skipnz
  2196  0349  2B25               	goto	l1231
  2197  034A  3A03               	xorlw	3	; case 6
  2198  034B  1903               	skipnz
  2199  034C  2B27               	goto	l1237
  2200  034D  3A01               	xorlw	1	; case 7
  2201  034E  1903               	skipnz
  2202  034F  2B29               	goto	l1243
  2203  0350  3A0F               	xorlw	15	; case 8
  2204  0351  1903               	skipnz
  2205  0352  2B2B               	goto	l1249
  2206  0353  3A01               	xorlw	1	; case 9
  2207  0354  1903               	skipnz
  2208  0355  2B2D               	goto	l1255
  2209  0356  2B57               	goto	l126
  2210  0357                     l126:
  2211  0357  0008               	return
  2212  0358                     __end_of_datos_ascii:
  2213                           
  2214                           	psect	text13
  2215  0025                     __ptext13:	
  2216 ;; *************** function _conversiones *****************
  2217 ;; Defined at:
  2218 ;;		line 269 in file "main_lab2.c"
  2219 ;; Parameters:    Size  Location     Type
  2220 ;;		None
  2221 ;; Auto vars:     Size  Location     Type
  2222 ;;		None
  2223 ;; Return value:  Size  Location     Type
  2224 ;;                  1    wreg      void 
  2225 ;; Registers used:
  2226 ;;		wreg, status,2, status,0, pclath, cstack
  2227 ;; Tracked objects:
  2228 ;;		On entry : 0/0
  2229 ;;		On exit  : 0/0
  2230 ;;		Unchanged: 0/0
  2231 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2232 ;;      Params:         0       0       0       0       0
  2233 ;;      Locals:         0       0       0       0       0
  2234 ;;      Temps:          0       3       0       0       0
  2235 ;;      Totals:         0       3       0       0       0
  2236 ;;Total ram usage:        3 bytes
  2237 ;; Hardware stack levels used:    1
  2238 ;; Hardware stack levels required when called:    2
  2239 ;; This function calls:
  2240 ;;		___awdiv
  2241 ;;		___awmod
  2242 ;; This function is called by:
  2243 ;;		_main
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           
  2248                           ;psect for function _conversiones
  2249  0025                     _conversiones:
  2250  0025                     l1591:	
  2251                           ;incstack = 0
  2252                           ; Regs used in _conversiones: [wreg+status,2+status,0+pclath+cstack]
  2253                           
  2254                           
  2255                           ;main_lab2.c: 271:     centenas1=((conversion1/100)%10) ;
  2256  0025  300A               	movlw	10
  2257  0026  1283               	bcf	3,5	;RP0=0, select bank0
  2258  0027  1303               	bcf	3,6	;RP1=0, select bank0
  2259  0028  00A4               	movwf	___awmod@divisor
  2260  0029  3000               	movlw	0
  2261  002A  00A5               	movwf	___awmod@divisor+1
  2262  002B  3064               	movlw	100
  2263  002C  00F2               	movwf	___awdiv@divisor
  2264  002D  3000               	movlw	0
  2265  002E  00F3               	movwf	___awdiv@divisor+1
  2266  002F  083D               	movf	_conversion1,w
  2267  0030  00A8               	movwf	??_conversiones
  2268  0031  01A9               	clrf	??_conversiones+1
  2269  0032  0828               	movf	??_conversiones,w
  2270  0033  00F4               	movwf	___awdiv@dividend
  2271  0034  0829               	movf	??_conversiones+1,w
  2272  0035  00F5               	movwf	___awdiv@dividend+1
  2273  0036  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2274  003B  0873               	movf	?___awdiv+1,w
  2275  003C  1283               	bcf	3,5	;RP0=0, select bank0
  2276  003D  1303               	bcf	3,6	;RP1=0, select bank0
  2277  003E  00A7               	movwf	___awmod@dividend+1
  2278  003F  0872               	movf	?___awdiv,w
  2279  0040  00A6               	movwf	___awmod@dividend
  2280  0041  120A  118A  2234  120A  118A  	fcall	___awmod
  2281  0046  1283               	bcf	3,5	;RP0=0, select bank0
  2282  0047  1303               	bcf	3,6	;RP1=0, select bank0
  2283  0048  0824               	movf	?___awmod,w
  2284  0049  00AA               	movwf	??_conversiones+2
  2285  004A  082A               	movf	??_conversiones+2,w
  2286  004B  00BA               	movwf	_centenas1
  2287                           
  2288                           ;main_lab2.c: 272:     decenas1=((conversion1/10)%10) ;
  2289  004C  300A               	movlw	10
  2290  004D  00A4               	movwf	___awmod@divisor
  2291  004E  3000               	movlw	0
  2292  004F  00A5               	movwf	___awmod@divisor+1
  2293  0050  300A               	movlw	10
  2294  0051  00F2               	movwf	___awdiv@divisor
  2295  0052  3000               	movlw	0
  2296  0053  00F3               	movwf	___awdiv@divisor+1
  2297  0054  083D               	movf	_conversion1,w
  2298  0055  00A8               	movwf	??_conversiones
  2299  0056  01A9               	clrf	??_conversiones+1
  2300  0057  0828               	movf	??_conversiones,w
  2301  0058  00F4               	movwf	___awdiv@dividend
  2302  0059  0829               	movf	??_conversiones+1,w
  2303  005A  00F5               	movwf	___awdiv@dividend+1
  2304  005B  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2305  0060  0873               	movf	?___awdiv+1,w
  2306  0061  1283               	bcf	3,5	;RP0=0, select bank0
  2307  0062  1303               	bcf	3,6	;RP1=0, select bank0
  2308  0063  00A7               	movwf	___awmod@dividend+1
  2309  0064  0872               	movf	?___awdiv,w
  2310  0065  00A6               	movwf	___awmod@dividend
  2311  0066  120A  118A  2234  120A  118A  	fcall	___awmod
  2312  006B  1283               	bcf	3,5	;RP0=0, select bank0
  2313  006C  1303               	bcf	3,6	;RP1=0, select bank0
  2314  006D  0824               	movf	?___awmod,w
  2315  006E  00AA               	movwf	??_conversiones+2
  2316  006F  082A               	movf	??_conversiones+2,w
  2317  0070  00B9               	movwf	_decenas1
  2318                           
  2319                           ;main_lab2.c: 273:     unidades1=(conversion1%10) ;
  2320  0071  300A               	movlw	10
  2321  0072  00A4               	movwf	___awmod@divisor
  2322  0073  3000               	movlw	0
  2323  0074  00A5               	movwf	___awmod@divisor+1
  2324  0075  083D               	movf	_conversion1,w
  2325  0076  00A8               	movwf	??_conversiones
  2326  0077  01A9               	clrf	??_conversiones+1
  2327  0078  0828               	movf	??_conversiones,w
  2328  0079  00A6               	movwf	___awmod@dividend
  2329  007A  0829               	movf	??_conversiones+1,w
  2330  007B  00A7               	movwf	___awmod@dividend+1
  2331  007C  120A  118A  2234  120A  118A  	fcall	___awmod
  2332  0081  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0082  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0083  0824               	movf	?___awmod,w
  2335  0084  00AA               	movwf	??_conversiones+2
  2336  0085  082A               	movf	??_conversiones+2,w
  2337  0086  00B8               	movwf	_unidades1
  2338                           
  2339                           ;main_lab2.c: 275:     centenas1=((conversion2/100)%10) ;
  2340  0087  300A               	movlw	10
  2341  0088  00A4               	movwf	___awmod@divisor
  2342  0089  3000               	movlw	0
  2343  008A  00A5               	movwf	___awmod@divisor+1
  2344  008B  3064               	movlw	100
  2345  008C  00F2               	movwf	___awdiv@divisor
  2346  008D  3000               	movlw	0
  2347  008E  00F3               	movwf	___awdiv@divisor+1
  2348  008F  083C               	movf	_conversion2,w
  2349  0090  00A8               	movwf	??_conversiones
  2350  0091  01A9               	clrf	??_conversiones+1
  2351  0092  0828               	movf	??_conversiones,w
  2352  0093  00F4               	movwf	___awdiv@dividend
  2353  0094  0829               	movf	??_conversiones+1,w
  2354  0095  00F5               	movwf	___awdiv@dividend+1
  2355  0096  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2356  009B  0873               	movf	?___awdiv+1,w
  2357  009C  1283               	bcf	3,5	;RP0=0, select bank0
  2358  009D  1303               	bcf	3,6	;RP1=0, select bank0
  2359  009E  00A7               	movwf	___awmod@dividend+1
  2360  009F  0872               	movf	?___awdiv,w
  2361  00A0  00A6               	movwf	___awmod@dividend
  2362  00A1  120A  118A  2234  120A  118A  	fcall	___awmod
  2363  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  2364  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  2365  00A8  0824               	movf	?___awmod,w
  2366  00A9  00AA               	movwf	??_conversiones+2
  2367  00AA  082A               	movf	??_conversiones+2,w
  2368  00AB  00BA               	movwf	_centenas1
  2369                           
  2370                           ;main_lab2.c: 276:     decenas1=((conversion2/10)%10) ;
  2371  00AC  300A               	movlw	10
  2372  00AD  00A4               	movwf	___awmod@divisor
  2373  00AE  3000               	movlw	0
  2374  00AF  00A5               	movwf	___awmod@divisor+1
  2375  00B0  300A               	movlw	10
  2376  00B1  00F2               	movwf	___awdiv@divisor
  2377  00B2  3000               	movlw	0
  2378  00B3  00F3               	movwf	___awdiv@divisor+1
  2379  00B4  083C               	movf	_conversion2,w
  2380  00B5  00A8               	movwf	??_conversiones
  2381  00B6  01A9               	clrf	??_conversiones+1
  2382  00B7  0828               	movf	??_conversiones,w
  2383  00B8  00F4               	movwf	___awdiv@dividend
  2384  00B9  0829               	movf	??_conversiones+1,w
  2385  00BA  00F5               	movwf	___awdiv@dividend+1
  2386  00BB  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2387  00C0  0873               	movf	?___awdiv+1,w
  2388  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  2389  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  2390  00C3  00A7               	movwf	___awmod@dividend+1
  2391  00C4  0872               	movf	?___awdiv,w
  2392  00C5  00A6               	movwf	___awmod@dividend
  2393  00C6  120A  118A  2234  120A  118A  	fcall	___awmod
  2394  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  2395  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  2396  00CD  0824               	movf	?___awmod,w
  2397  00CE  00AA               	movwf	??_conversiones+2
  2398  00CF  082A               	movf	??_conversiones+2,w
  2399  00D0  00B9               	movwf	_decenas1
  2400                           
  2401                           ;main_lab2.c: 277:     unidades1=(conversion2%10) ;
  2402  00D1  300A               	movlw	10
  2403  00D2  00A4               	movwf	___awmod@divisor
  2404  00D3  3000               	movlw	0
  2405  00D4  00A5               	movwf	___awmod@divisor+1
  2406  00D5  083C               	movf	_conversion2,w
  2407  00D6  00A8               	movwf	??_conversiones
  2408  00D7  01A9               	clrf	??_conversiones+1
  2409  00D8  0828               	movf	??_conversiones,w
  2410  00D9  00A6               	movwf	___awmod@dividend
  2411  00DA  0829               	movf	??_conversiones+1,w
  2412  00DB  00A7               	movwf	___awmod@dividend+1
  2413  00DC  120A  118A  2234  120A  118A  	fcall	___awmod
  2414  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  2415  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  2416  00E3  0824               	movf	?___awmod,w
  2417  00E4  00AA               	movwf	??_conversiones+2
  2418  00E5  082A               	movf	??_conversiones+2,w
  2419  00E6  00B8               	movwf	_unidades1
  2420                           
  2421                           ;main_lab2.c: 279:     centenas1=((cuenta_uart/100)%10) ;
  2422  00E7  300A               	movlw	10
  2423  00E8  00A4               	movwf	___awmod@divisor
  2424  00E9  3000               	movlw	0
  2425  00EA  00A5               	movwf	___awmod@divisor+1
  2426  00EB  3064               	movlw	100
  2427  00EC  00F2               	movwf	___awdiv@divisor
  2428  00ED  3000               	movlw	0
  2429  00EE  00F3               	movwf	___awdiv@divisor+1
  2430  00EF  083B               	movf	_cuenta_uart,w
  2431  00F0  00A8               	movwf	??_conversiones
  2432  00F1  01A9               	clrf	??_conversiones+1
  2433  00F2  0828               	movf	??_conversiones,w
  2434  00F3  00F4               	movwf	___awdiv@dividend
  2435  00F4  0829               	movf	??_conversiones+1,w
  2436  00F5  00F5               	movwf	___awdiv@dividend+1
  2437  00F6  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2438  00FB  0873               	movf	?___awdiv+1,w
  2439  00FC  1283               	bcf	3,5	;RP0=0, select bank0
  2440  00FD  1303               	bcf	3,6	;RP1=0, select bank0
  2441  00FE  00A7               	movwf	___awmod@dividend+1
  2442  00FF  0872               	movf	?___awdiv,w
  2443  0100  00A6               	movwf	___awmod@dividend
  2444  0101  120A  118A  2234  120A  118A  	fcall	___awmod
  2445  0106  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0107  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0108  0824               	movf	?___awmod,w
  2448  0109  00AA               	movwf	??_conversiones+2
  2449  010A  082A               	movf	??_conversiones+2,w
  2450  010B  00BA               	movwf	_centenas1
  2451                           
  2452                           ;main_lab2.c: 280:     decenas1=((cuenta_uart/10)%10) ;
  2453  010C  300A               	movlw	10
  2454  010D  00A4               	movwf	___awmod@divisor
  2455  010E  3000               	movlw	0
  2456  010F  00A5               	movwf	___awmod@divisor+1
  2457  0110  300A               	movlw	10
  2458  0111  00F2               	movwf	___awdiv@divisor
  2459  0112  3000               	movlw	0
  2460  0113  00F3               	movwf	___awdiv@divisor+1
  2461  0114  083B               	movf	_cuenta_uart,w
  2462  0115  00A8               	movwf	??_conversiones
  2463  0116  01A9               	clrf	??_conversiones+1
  2464  0117  0828               	movf	??_conversiones,w
  2465  0118  00F4               	movwf	___awdiv@dividend
  2466  0119  0829               	movf	??_conversiones+1,w
  2467  011A  00F5               	movwf	___awdiv@dividend+1
  2468  011B  120A  118A  21CB  120A  118A  	fcall	___awdiv
  2469  0120  0873               	movf	?___awdiv+1,w
  2470  0121  1283               	bcf	3,5	;RP0=0, select bank0
  2471  0122  1303               	bcf	3,6	;RP1=0, select bank0
  2472  0123  00A7               	movwf	___awmod@dividend+1
  2473  0124  0872               	movf	?___awdiv,w
  2474  0125  00A6               	movwf	___awmod@dividend
  2475  0126  120A  118A  2234  120A  118A  	fcall	___awmod
  2476  012B  1283               	bcf	3,5	;RP0=0, select bank0
  2477  012C  1303               	bcf	3,6	;RP1=0, select bank0
  2478  012D  0824               	movf	?___awmod,w
  2479  012E  00AA               	movwf	??_conversiones+2
  2480  012F  082A               	movf	??_conversiones+2,w
  2481  0130  00B9               	movwf	_decenas1
  2482                           
  2483                           ;main_lab2.c: 281:     unidades1=(cuenta_uart%10) ;
  2484  0131  300A               	movlw	10
  2485  0132  00A4               	movwf	___awmod@divisor
  2486  0133  3000               	movlw	0
  2487  0134  00A5               	movwf	___awmod@divisor+1
  2488  0135  083B               	movf	_cuenta_uart,w
  2489  0136  00A8               	movwf	??_conversiones
  2490  0137  01A9               	clrf	??_conversiones+1
  2491  0138  0828               	movf	??_conversiones,w
  2492  0139  00A6               	movwf	___awmod@dividend
  2493  013A  0829               	movf	??_conversiones+1,w
  2494  013B  00A7               	movwf	___awmod@dividend+1
  2495  013C  120A  118A  2234  120A  118A  	fcall	___awmod
  2496  0141  1283               	bcf	3,5	;RP0=0, select bank0
  2497  0142  1303               	bcf	3,6	;RP1=0, select bank0
  2498  0143  0824               	movf	?___awmod,w
  2499  0144  00AA               	movwf	??_conversiones+2
  2500  0145  082A               	movf	??_conversiones+2,w
  2501  0146  00B8               	movwf	_unidades1
  2502  0147                     l139:
  2503  0147  0008               	return
  2504  0148                     __end_of_conversiones:
  2505                           
  2506                           	psect	text14
  2507  0234                     __ptext14:	
  2508 ;; *************** function ___awmod *****************
  2509 ;; Defined at:
  2510 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2511 ;; Parameters:    Size  Location     Type
  2512 ;;  divisor         2    4[BANK0 ] int 
  2513 ;;  dividend        2    6[BANK0 ] int 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  sign            1    9[COMMON] unsigned char 
  2516 ;;  counter         1    8[COMMON] unsigned char 
  2517 ;; Return value:  Size  Location     Type
  2518 ;;                  2    4[BANK0 ] int 
  2519 ;; Registers used:
  2520 ;;		wreg, status,2, status,0
  2521 ;; Tracked objects:
  2522 ;;		On entry : 0/0
  2523 ;;		On exit  : 0/0
  2524 ;;		Unchanged: 0/0
  2525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2526 ;;      Params:         0       4       0       0       0
  2527 ;;      Locals:         2       0       0       0       0
  2528 ;;      Temps:          1       0       0       0       0
  2529 ;;      Totals:         3       4       0       0       0
  2530 ;;Total ram usage:        7 bytes
  2531 ;; Hardware stack levels used:    1
  2532 ;; Hardware stack levels required when called:    1
  2533 ;; This function calls:
  2534 ;;		Nothing
  2535 ;; This function is called by:
  2536 ;;		_conversiones
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           
  2541                           ;psect for function ___awmod
  2542  0234                     ___awmod:
  2543  0234                     l1553:	
  2544                           ;incstack = 0
  2545                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2546                           
  2547  0234  01F9               	clrf	___awmod@sign
  2548  0235                     l1555:
  2549  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2550  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2551  0237  1FA7               	btfss	___awmod@dividend+1,7
  2552  0238  2A3A               	goto	u581
  2553  0239  2A3B               	goto	u580
  2554  023A                     u581:
  2555  023A  2A42               	goto	l1561
  2556  023B                     u580:
  2557  023B                     l1557:
  2558  023B  09A6               	comf	___awmod@dividend,f
  2559  023C  09A7               	comf	___awmod@dividend+1,f
  2560  023D  0AA6               	incf	___awmod@dividend,f
  2561  023E  1903               	skipnz
  2562  023F  0AA7               	incf	___awmod@dividend+1,f
  2563  0240                     l1559:
  2564  0240  01F9               	clrf	___awmod@sign
  2565  0241  0AF9               	incf	___awmod@sign,f
  2566  0242                     l1561:
  2567  0242  1FA5               	btfss	___awmod@divisor+1,7
  2568  0243  2A45               	goto	u591
  2569  0244  2A46               	goto	u590
  2570  0245                     u591:
  2571  0245  2A4B               	goto	l1565
  2572  0246                     u590:
  2573  0246                     l1563:
  2574  0246  09A4               	comf	___awmod@divisor,f
  2575  0247  09A5               	comf	___awmod@divisor+1,f
  2576  0248  0AA4               	incf	___awmod@divisor,f
  2577  0249  1903               	skipnz
  2578  024A  0AA5               	incf	___awmod@divisor+1,f
  2579  024B                     l1565:
  2580  024B  0824               	movf	___awmod@divisor,w
  2581  024C  0425               	iorwf	___awmod@divisor+1,w
  2582  024D  1903               	btfsc	3,2
  2583  024E  2A50               	goto	u601
  2584  024F  2A51               	goto	u600
  2585  0250                     u601:
  2586  0250  2A80               	goto	l1583
  2587  0251                     u600:
  2588  0251                     l1567:
  2589  0251  01F8               	clrf	___awmod@counter
  2590  0252  0AF8               	incf	___awmod@counter,f
  2591  0253  2A5F               	goto	l1573
  2592  0254                     l1569:
  2593  0254  3001               	movlw	1
  2594  0255                     u615:
  2595  0255  1003               	clrc
  2596  0256  0DA4               	rlf	___awmod@divisor,f
  2597  0257  0DA5               	rlf	___awmod@divisor+1,f
  2598  0258  3EFF               	addlw	-1
  2599  0259  1D03               	skipz
  2600  025A  2A55               	goto	u615
  2601  025B                     l1571:
  2602  025B  3001               	movlw	1
  2603  025C  00F7               	movwf	??___awmod
  2604  025D  0877               	movf	??___awmod,w
  2605  025E  07F8               	addwf	___awmod@counter,f
  2606  025F                     l1573:
  2607  025F  1FA5               	btfss	___awmod@divisor+1,7
  2608  0260  2A62               	goto	u621
  2609  0261  2A63               	goto	u620
  2610  0262                     u621:
  2611  0262  2A54               	goto	l1569
  2612  0263                     u620:
  2613  0263                     l1575:
  2614  0263  0825               	movf	___awmod@divisor+1,w
  2615  0264  0227               	subwf	___awmod@dividend+1,w
  2616  0265  1D03               	skipz
  2617  0266  2A69               	goto	u635
  2618  0267  0824               	movf	___awmod@divisor,w
  2619  0268  0226               	subwf	___awmod@dividend,w
  2620  0269                     u635:
  2621  0269  1C03               	skipc
  2622  026A  2A6C               	goto	u631
  2623  026B  2A6D               	goto	u630
  2624  026C                     u631:
  2625  026C  2A73               	goto	l1579
  2626  026D                     u630:
  2627  026D                     l1577:
  2628  026D  0824               	movf	___awmod@divisor,w
  2629  026E  02A6               	subwf	___awmod@dividend,f
  2630  026F  0825               	movf	___awmod@divisor+1,w
  2631  0270  1C03               	skipc
  2632  0271  03A7               	decf	___awmod@dividend+1,f
  2633  0272  02A7               	subwf	___awmod@dividend+1,f
  2634  0273                     l1579:
  2635  0273  3001               	movlw	1
  2636  0274                     u645:
  2637  0274  1003               	clrc
  2638  0275  0CA5               	rrf	___awmod@divisor+1,f
  2639  0276  0CA4               	rrf	___awmod@divisor,f
  2640  0277  3EFF               	addlw	-1
  2641  0278  1D03               	skipz
  2642  0279  2A74               	goto	u645
  2643  027A                     l1581:
  2644  027A  3001               	movlw	1
  2645  027B  02F8               	subwf	___awmod@counter,f
  2646  027C  1D03               	btfss	3,2
  2647  027D  2A7F               	goto	u651
  2648  027E  2A80               	goto	u650
  2649  027F                     u651:
  2650  027F  2A63               	goto	l1575
  2651  0280                     u650:
  2652  0280                     l1583:
  2653  0280  0879               	movf	___awmod@sign,w
  2654  0281  1903               	btfsc	3,2
  2655  0282  2A84               	goto	u661
  2656  0283  2A85               	goto	u660
  2657  0284                     u661:
  2658  0284  2A8A               	goto	l1587
  2659  0285                     u660:
  2660  0285                     l1585:
  2661  0285  09A6               	comf	___awmod@dividend,f
  2662  0286  09A7               	comf	___awmod@dividend+1,f
  2663  0287  0AA6               	incf	___awmod@dividend,f
  2664  0288  1903               	skipnz
  2665  0289  0AA7               	incf	___awmod@dividend+1,f
  2666  028A                     l1587:
  2667  028A  0827               	movf	___awmod@dividend+1,w
  2668  028B  00A5               	movwf	?___awmod+1
  2669  028C  0826               	movf	___awmod@dividend,w
  2670  028D  00A4               	movwf	?___awmod
  2671  028E                     l455:
  2672  028E  0008               	return
  2673  028F                     __end_of___awmod:
  2674                           
  2675                           	psect	text15
  2676  01CB                     __ptext15:	
  2677 ;; *************** function ___awdiv *****************
  2678 ;; Defined at:
  2679 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2680 ;; Parameters:    Size  Location     Type
  2681 ;;  divisor         2    2[COMMON] int 
  2682 ;;  dividend        2    4[COMMON] int 
  2683 ;; Auto vars:     Size  Location     Type
  2684 ;;  quotient        2    2[BANK0 ] int 
  2685 ;;  sign            1    1[BANK0 ] unsigned char 
  2686 ;;  counter         1    0[BANK0 ] unsigned char 
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  2    2[COMMON] int 
  2689 ;; Registers used:
  2690 ;;		wreg, status,2, status,0
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2696 ;;      Params:         4       0       0       0       0
  2697 ;;      Locals:         0       4       0       0       0
  2698 ;;      Temps:          1       0       0       0       0
  2699 ;;      Totals:         5       4       0       0       0
  2700 ;;Total ram usage:        9 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    1
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_conversiones
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           
  2711                           ;psect for function ___awdiv
  2712  01CB                     ___awdiv:
  2713  01CB                     l1509:	
  2714                           ;incstack = 0
  2715                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2716                           
  2717  01CB  1283               	bcf	3,5	;RP0=0, select bank0
  2718  01CC  1303               	bcf	3,6	;RP1=0, select bank0
  2719  01CD  01A1               	clrf	___awdiv@sign
  2720  01CE                     l1511:
  2721  01CE  1FF3               	btfss	___awdiv@divisor+1,7
  2722  01CF  29D1               	goto	u481
  2723  01D0  29D2               	goto	u480
  2724  01D1                     u481:
  2725  01D1  29D9               	goto	l1517
  2726  01D2                     u480:
  2727  01D2                     l1513:
  2728  01D2  09F2               	comf	___awdiv@divisor,f
  2729  01D3  09F3               	comf	___awdiv@divisor+1,f
  2730  01D4  0AF2               	incf	___awdiv@divisor,f
  2731  01D5  1903               	skipnz
  2732  01D6  0AF3               	incf	___awdiv@divisor+1,f
  2733  01D7                     l1515:
  2734  01D7  01A1               	clrf	___awdiv@sign
  2735  01D8  0AA1               	incf	___awdiv@sign,f
  2736  01D9                     l1517:
  2737  01D9  1FF5               	btfss	___awdiv@dividend+1,7
  2738  01DA  29DC               	goto	u491
  2739  01DB  29DD               	goto	u490
  2740  01DC                     u491:
  2741  01DC  29E6               	goto	l1523
  2742  01DD                     u490:
  2743  01DD                     l1519:
  2744  01DD  09F4               	comf	___awdiv@dividend,f
  2745  01DE  09F5               	comf	___awdiv@dividend+1,f
  2746  01DF  0AF4               	incf	___awdiv@dividend,f
  2747  01E0  1903               	skipnz
  2748  01E1  0AF5               	incf	___awdiv@dividend+1,f
  2749  01E2                     l1521:
  2750  01E2  3001               	movlw	1
  2751  01E3  00F6               	movwf	??___awdiv
  2752  01E4  0876               	movf	??___awdiv,w
  2753  01E5  06A1               	xorwf	___awdiv@sign,f
  2754  01E6                     l1523:
  2755  01E6  01A2               	clrf	___awdiv@quotient
  2756  01E7  01A3               	clrf	___awdiv@quotient+1
  2757  01E8                     l1525:
  2758  01E8  0872               	movf	___awdiv@divisor,w
  2759  01E9  0473               	iorwf	___awdiv@divisor+1,w
  2760  01EA  1903               	btfsc	3,2
  2761  01EB  29ED               	goto	u501
  2762  01EC  29EE               	goto	u500
  2763  01ED                     u501:
  2764  01ED  2A25               	goto	l1545
  2765  01EE                     u500:
  2766  01EE                     l1527:
  2767  01EE  01A0               	clrf	___awdiv@counter
  2768  01EF  0AA0               	incf	___awdiv@counter,f
  2769  01F0  29FC               	goto	l1533
  2770  01F1                     l1529:
  2771  01F1  3001               	movlw	1
  2772  01F2                     u515:
  2773  01F2  1003               	clrc
  2774  01F3  0DF2               	rlf	___awdiv@divisor,f
  2775  01F4  0DF3               	rlf	___awdiv@divisor+1,f
  2776  01F5  3EFF               	addlw	-1
  2777  01F6  1D03               	skipz
  2778  01F7  29F2               	goto	u515
  2779  01F8                     l1531:
  2780  01F8  3001               	movlw	1
  2781  01F9  00F6               	movwf	??___awdiv
  2782  01FA  0876               	movf	??___awdiv,w
  2783  01FB  07A0               	addwf	___awdiv@counter,f
  2784  01FC                     l1533:
  2785  01FC  1FF3               	btfss	___awdiv@divisor+1,7
  2786  01FD  29FF               	goto	u521
  2787  01FE  2A00               	goto	u520
  2788  01FF                     u521:
  2789  01FF  29F1               	goto	l1529
  2790  0200                     u520:
  2791  0200                     l1535:
  2792  0200  3001               	movlw	1
  2793  0201                     u535:
  2794  0201  1003               	clrc
  2795  0202  0DA2               	rlf	___awdiv@quotient,f
  2796  0203  0DA3               	rlf	___awdiv@quotient+1,f
  2797  0204  3EFF               	addlw	-1
  2798  0205  1D03               	skipz
  2799  0206  2A01               	goto	u535
  2800  0207  0873               	movf	___awdiv@divisor+1,w
  2801  0208  0275               	subwf	___awdiv@dividend+1,w
  2802  0209  1D03               	skipz
  2803  020A  2A0D               	goto	u545
  2804  020B  0872               	movf	___awdiv@divisor,w
  2805  020C  0274               	subwf	___awdiv@dividend,w
  2806  020D                     u545:
  2807  020D  1C03               	skipc
  2808  020E  2A10               	goto	u541
  2809  020F  2A11               	goto	u540
  2810  0210                     u541:
  2811  0210  2A18               	goto	l1541
  2812  0211                     u540:
  2813  0211                     l1537:
  2814  0211  0872               	movf	___awdiv@divisor,w
  2815  0212  02F4               	subwf	___awdiv@dividend,f
  2816  0213  0873               	movf	___awdiv@divisor+1,w
  2817  0214  1C03               	skipc
  2818  0215  03F5               	decf	___awdiv@dividend+1,f
  2819  0216  02F5               	subwf	___awdiv@dividend+1,f
  2820  0217                     l1539:
  2821  0217  1422               	bsf	___awdiv@quotient,0
  2822  0218                     l1541:
  2823  0218  3001               	movlw	1
  2824  0219                     u555:
  2825  0219  1003               	clrc
  2826  021A  0CF3               	rrf	___awdiv@divisor+1,f
  2827  021B  0CF2               	rrf	___awdiv@divisor,f
  2828  021C  3EFF               	addlw	-1
  2829  021D  1D03               	skipz
  2830  021E  2A19               	goto	u555
  2831  021F                     l1543:
  2832  021F  3001               	movlw	1
  2833  0220  02A0               	subwf	___awdiv@counter,f
  2834  0221  1D03               	btfss	3,2
  2835  0222  2A24               	goto	u561
  2836  0223  2A25               	goto	u560
  2837  0224                     u561:
  2838  0224  2A00               	goto	l1535
  2839  0225                     u560:
  2840  0225                     l1545:
  2841  0225  0821               	movf	___awdiv@sign,w
  2842  0226  1903               	btfsc	3,2
  2843  0227  2A29               	goto	u571
  2844  0228  2A2A               	goto	u570
  2845  0229                     u571:
  2846  0229  2A2F               	goto	l1549
  2847  022A                     u570:
  2848  022A                     l1547:
  2849  022A  09A2               	comf	___awdiv@quotient,f
  2850  022B  09A3               	comf	___awdiv@quotient+1,f
  2851  022C  0AA2               	incf	___awdiv@quotient,f
  2852  022D  1903               	skipnz
  2853  022E  0AA3               	incf	___awdiv@quotient+1,f
  2854  022F                     l1549:
  2855  022F  0823               	movf	___awdiv@quotient+1,w
  2856  0230  00F3               	movwf	?___awdiv+1
  2857  0231  0822               	movf	___awdiv@quotient,w
  2858  0232  00F2               	movwf	?___awdiv
  2859  0233                     l442:
  2860  0233  0008               	return
  2861  0234                     __end_of___awdiv:
  2862                           
  2863                           	psect	text16
  2864  048E                     __ptext16:	
  2865 ;; *************** function _isr *****************
  2866 ;; Defined at:
  2867 ;;		line 82 in file "main_lab2.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		wreg
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2881 ;;      Params:         0       0       0       0       0
  2882 ;;      Locals:         0       0       0       0       0
  2883 ;;      Temps:          2       0       0       0       0
  2884 ;;      Totals:         2       0       0       0       0
  2885 ;;Total ram usage:        2 bytes
  2886 ;; Hardware stack levels used:    1
  2887 ;; This function calls:
  2888 ;;		Nothing
  2889 ;; This function is called by:
  2890 ;;		Interrupt level 1
  2891 ;; This function uses a non-reentrant model
  2892 ;;
  2893                           
  2894                           
  2895                           ;psect for function _isr
  2896  048E                     _isr:
  2897  048E                     i1l1119:
  2898                           
  2899                           ;main_lab2.c: 85:      if(PIR1bits.RCIF)
  2900  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2901  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2902  0490  1E8C               	btfss	12,5	;volatile
  2903  0491  2C93               	goto	u24_21
  2904  0492  2C94               	goto	u24_20
  2905  0493                     u24_21:
  2906  0493  2C97               	goto	i1l94
  2907  0494                     u24_20:
  2908  0494                     i1l1121:
  2909                           
  2910                           ;main_lab2.c: 86:     {;main_lab2.c: 87:         RCREG=dato_recibido;
  2911  0494  087B               	movf	_dato_recibido,w
  2912  0495  009A               	movwf	26	;volatile
  2913  0496                     i1l1123:
  2914                           
  2915                           ;main_lab2.c: 88:         PIR1bits.RCIF=0;
  2916  0496  128C               	bcf	12,5	;volatile
  2917  0497                     i1l94:
  2918  0497  0871               	movf	??_isr+1,w
  2919  0498  008A               	movwf	10
  2920  0499  0E70               	swapf	??_isr,w
  2921  049A  0083               	movwf	3
  2922  049B  0EFE               	swapf	btemp,f
  2923  049C  0E7E               	swapf	btemp,w
  2924  049D  0009               	retfie
  2925  049E                     __end_of_isr:
  2926  007E                     btemp	set	126	;btemp
  2927  007E                     wtemp0	set	126
  2928                           
  2929                           	psect	intentry
  2930  0004                     __pintentry:	
  2931                           ;incstack = 0
  2932                           ; Regs used in _isr: [wreg]
  2933                           
  2934  0004                     interrupt_function:
  2935  007E                     saved_w	set	btemp
  2936  0004  00FE               	movwf	btemp
  2937  0005  0E03               	swapf	3,w
  2938  0006  00F0               	movwf	??_isr
  2939  0007  080A               	movf	10,w
  2940  0008  00F1               	movwf	??_isr+1
  2941  0009  120A  118A  2C8E   	ljmp	_isr
  2942                           
  2943                           	psect	config
  2944                           
  2945                           ;Config register CONFIG1 @ 0x2007
  2946                           ;	Oscillator Selection bits
  2947                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2948                           ;	Watchdog Timer Enable bit
  2949                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2950                           ;	Power-up Timer Enable bit
  2951                           ;	PWRTE = OFF, PWRT disabled
  2952                           ;	RE3/MCLR pin function select bit
  2953                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2954                           ;	Code Protection bit
  2955                           ;	CP = OFF, Program memory code protection is disabled
  2956                           ;	Data Code Protection bit
  2957                           ;	CPD = OFF, Data memory code protection is disabled
  2958                           ;	Brown Out Reset Selection bits
  2959                           ;	BOREN = OFF, BOR disabled
  2960                           ;	Internal External Switchover bit
  2961                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2962                           ;	Fail-Safe Clock Monitor Enabled bit
  2963                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2964                           ;	Low Voltage Programming Enable bit
  2965                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2966                           ;	In-Circuit Debugger Mode bit
  2967                           ;	DEBUG = 0x1, unprogrammed default
  2968  2007                     	org	8199
  2969  2007  20D4               	dw	8404
  2970                           
  2971                           ;Config register CONFIG2 @ 0x2008
  2972                           ;	Brown-out Reset Selection bit
  2973                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2974                           ;	Flash Program Memory Self Write Enable bits
  2975                           ;	WRT = OFF, Write protection off
  2976  2008                     	org	8200
  2977  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     16      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 17
		 -> lcd_ascii@random(BANK0[16]), STR_1(CODE[17]), 

    sp__lcd_ascii	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_ascii@random(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _show->_lcd_ascii
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_ascii->_datos_ascii
    _conversiones->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_ascii
    _show->_lcd_ascii
    _conversiones->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    4574
                                _cmd
                       _conversiones
                          _lcd_ascii
                           _lcd_init
                          _lcd_linea
                     _recepcion_uart
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     212
                                              6 COMMON     2     0      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recepcion_uart                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           17    17      0     407
                                              5 COMMON     1     1      0
                                              0 BANK0     16    16      0
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _conversiones                                         3     3      0    3578
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    2053
                                              7 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1525
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _conversiones
     ___awdiv
     ___awmod
       ___awdiv (ARG)
   _lcd_ascii
     _datos_ascii
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _recepcion_uart
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1E       5       37.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 23:02:45 2021

                      pc 0002             ___awdiv@sign 0021          ?_recepcion_uart 0070  
                     fsr 0004                      l121 03F8                      l105 0384  
                    l113 0318                      l203 0463                      l126 0357  
                    l142 01CA                      l151 0478                      l139 0147  
                    l172 044E                      l166 0439                      l184 03B0  
                    l169 048D                      l442 0233                      l178 03D6  
                    l455 028E                      l801 0480                      l803 048A  
                    l811 0475                      l805 0464                      l821 045B  
                    l901 043B                      l807 0469                      l823 045E  
                    l815 044F                      l903 043F                      l809 0471  
                    l825 045F                      l817 0456                      l905 0440  
                    l827 0460                      l819 045A                      l907 0441  
                    l909 044B                      l795 047A                      l797 047E  
                    l799 047F                      l993 0358                      l995 035C  
                    l997 035D                      l999 0361                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u500 01EE  
                    u501 01ED                      u520 0200                      u600 0251  
                    u440 02DE                      u521 01FF                      u601 0250  
                    u441 02DD                      u450 038B                      u515 01F2  
                    u451 038A                      u540 0211                      u620 0263  
                    u460 03A1                      u541 0210                      u621 0262  
                    u461 03A0                      u630 026D                      u470 03D6  
                    u535 0201                      u631 026C                      u615 0255  
                    u471 03D5                      u560 0225                      u480 01D2  
                    u561 0224                      u545 020D                      u481 01D1  
                    u570 022A                      u490 01DD                      u650 0280  
                    u571 0229                      u555 0219                      u491 01DC  
                    u651 027F                      u635 0269                      u707 0446  
                    u660 0285                      u580 023B                      u661 0284  
                    u645 0274                      u581 023A                      u717 0473  
                    u590 0246                      u591 0245                      u727 0485  
                    u677 02E5                      u687 02F5                      u697 0312  
                    _dat 043A                      _cmd 0479                      _isr 048E  
                    fsr0 0004                      indf 0000             ___awmod@sign 0079  
                   l1001 0362                     l1011 0374                     l1003 0363  
                   l1021 037D                     l1013 0379                     l1005 036A  
                   l1023 037E                     l1015 037A                     l1007 036E  
                   l1201 031B                     l1025 0381                     l1017 037B  
                   l1009 036F                     l1019 037C                     l1213 031F  
                   l1029 0421                     l1231 0325                     l1207 031D  
                   l1225 0323                     l1401 0394                     l1243 0329  
                   l1219 0321                     l1403 039B                     l1411 03B1  
                   l1237 0327                     l1421 016B                     l1405 03A1  
                   l1413 03B2                     ?_dat 0070                     l1511 01CE  
                   l1255 032D                     l1263 032F                     l1431 01C1  
                   l1423 016F                     l1407 03A6                     l1415 03C0  
                   l1351 02D8                     l1521 01E2                     l1513 01D2  
                   l1249 032B                     l1433 01C5                     l1425 0194  
                   l1409 03AA                     l1417 03C6                     l1361 02F8  
                   l1601 02BF                     ?_cmd 0070                     l1531 01F8  
                   l1523 01E6                     l1515 01D7                     l1435 01C9  
                   l1427 0198                     l1419 0148                     l1355 02DF  
                   l1541 0218                     l1533 01FC                     l1525 01E8  
                   l1517 01D9                     l1509 01CB                     l1429 01BD  
                   l1381 03DF                     l1357 02E8                     l1365 02FD  
                   l1543 021F                     l1535 0200                     l1527 01EE  
                   l1519 01DD                     l1199 031A                     l1383 03E4  
                   l1359 02EF                     l1367 0310                     l1537 0211  
                   l1529 01F1                     l1545 0225                     l1561 0242  
                   l1553 0234                     l1377 03D7                     l1369 0315  
                   l1547 022A                     l1539 0217                     l1571 025B  
                   l1563 0246                     l1555 0235                     l1395 0386  
                   l1379 03D8                     l1387 03E8                     l1549 022F  
                   l1581 027A                     l1573 025F                     l1565 024B  
                   l1557 023B                     l1397 038B                     l1575 0263  
                   l1567 0251                     l1583 0280                     l1559 0240  
                   l1591 0025                     l1399 0390                     l1663 0308  
                   l1585 0285                     l1577 026D                     l1569 0254  
                   l1665 03F0                     l1593 028F                     l1587 028A  
                   l1579 0273                     l1667 0337                     l1595 029F  
                   l1597 02A4                     l1599 02B6                     ?_isr 0070  
                   STR_1 0410                     i1l94 0497                     dat@b 0074  
                   cmd@a 0074                     _main 028F                     _show 03B1  
                   btemp 007E                     start 000C                    ??_dat 0072  
                  ??_cmd 0072            ?_conversiones 0070                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 0234          __end_of___awmod 028F  
                  ?_show 0076                    _ANSEL 0188          ___awdiv@divisor 0072  
        ___awdiv@counter 0020                    _RCREG 001A                    u24_20 0494  
                  u24_21 0493                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISE 0089                    _suma1 007A                    _suma2 0031  
                  _suma3 0030                    _setup 0358                    pclath 000A  
                  show@s 0076            lcd_linea@temp 0078                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 02D8  
           __end_of_show 03D7           ??_conversiones 0028                   ??_main 007A  
                 ??_show 0078     __size_of_datos_ascii 003F                   _ADRESH 001E  
       ___awdiv@dividend 0074                   ?_setup 0070                   _ANSELH 0189  
                 i1l1121 0494                   i1l1123 0496                   i1l1119 048E  
                 _SPBRGH 009A         __end_of_lcd_init 043A          lcd_ascii@random 0020  
              ??___awdiv 0076                ??___awmod 0077         ___awdiv@quotient 0022  
        ___awmod@divisor 0024          ___awmod@counter 0078             ?_uart_config 0070  
                 saved_w 007E  __end_of__initialization 0021         ??_recepcion_uart 0072  
         __pcstackCOMMON 0070               _adc_config 0464            __end_of_setup 0385  
     __size_of_lcd_ascii 0083       __size_of_lcd_linea 002C                  ??_setup 0073  
   __end_of_conversiones 0148               __pbssBANK0 0030               __pmaintext 028F  
             __pintentry 0004                ?_lcd_init 0070               __stringtab 0400  
      __end_of_lcd_ascii 01CB        __end_of_lcd_linea 03B1              ?_adc_config 0070  
                ___awdiv 01CB                  ___awmod 0234                _ANSELbits 0188  
                __ptext1 02D8                  __ptext2 03B1                  __ptext3 043A  
                __ptext4 0358                  __ptext5 044F                  __ptext6 0464  
                __ptext7 03D7                  __ptext8 0385                  __ptext9 0421  
           __size_of_dat 0015             __size_of_cmd 0015             __size_of_isr 0010  
       ___awmod@dividend 0026     __size_of_uart_config 0015               ??_lcd_init 0075  
   end_of_initialization 0021                _RCSTAbits 0018            ??_datos_ascii 0072  
  __size_of_conversiones 0123               _toggle_adc 02D8                _TRISDbits 0088  
    __size_of_adc_config 0015               lcd_linea@a 0077               lcd_linea@b 0075  
             lcd_linea@z 0079                _TXSTAbits 0098             _conversiones 0025  
            _BAUDCTLbits 0187      start_initialization 000F      __end_of_datos_ascii 0358  
            __end_of_dat 044F              __end_of_cmd 048E              __end_of_isr 049E  
      datos_ascii@numero 0074              ?_toggle_adc 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0019  
              _centenas1 003A                _centenas2 0037                _centenas3 0034  
           ??_adc_config 0072                 ?___awdiv 0072                 ?___awmod 0024  
          _dato_recibido 007B                _lcd_ascii 0148              _datos_ascii 0319  
              _lcd_linea 0385                __pstrings 0400  __size_of_recepcion_uart 0022  
         __size_of_setup 002D       __end_of_adc_config 0479        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C      __size_of_toggle_adc 0041  
             ?_lcd_ascii 0070                _unidades1 0038                _unidades2 0035  
              _unidades3 0032               ?_lcd_linea 0075               _ADCON0bits 001F  
            __stringbase 040F               _ADCON1bits 009F            ??_uart_config 0072  
            _cuenta_uart 003B              _conversion1 003D              _conversion2 003C  
       __size_of___awdiv 0069         __size_of___awmod 005B       __end_of__stringtab 0410  
               _decenas1 0039                 _decenas2 0036                 _decenas3 0033  
               __ptext10 0479                 __ptext11 0148                 __ptext12 0319  
               __ptext13 0025                 __ptext14 0234                 __ptext15 01CB  
               __ptext16 048E      __end_of_uart_config 0464                 _lcd_init 0421  
          __size_of_main 0049            __size_of_show 0026              ??_lcd_ascii 0075  
            ??_lcd_linea 0076           _recepcion_uart 03D7               _INTCONbits 000B  
           ??_toggle_adc 0072                 intlevel1 0000                stringcode 040A  
             _OSCCONbits 008F       __end_of_toggle_adc 0319   __end_of_recepcion_uart 03F9  
           ?_datos_ascii 0070              _uart_config 044F                 stringdir 040A  
               stringtab 0400  
