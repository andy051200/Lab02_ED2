

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Mon Jul 26 17:28:55 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    26                           	dabs	1,0x7E,2
    27  0000                     
    28                           ; Version 2.20
    29                           ; Generated 12/02/2020 GMT
    30                           ; 
    31                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    32                           ; All rights reserved.
    33                           ; 
    34                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    35                           ; 
    36                           ; Redistribution and use in source and binary forms, with or without modification, are
    37                           ; permitted provided that the following conditions are met:
    38                           ; 
    39                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    40                           ;        conditions and the following disclaimer.
    41                           ; 
    42                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    43                           ;        of conditions and the following disclaimer in the documentation and/or other
    44                           ;        materials provided with the distribution.
    45                           ; 
    46                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    47                           ;        software without specific prior written permission.
    48                           ; 
    49                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    50                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    51                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    52                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    53                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    54                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    55                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    56                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    57                           ; 
    58                           ; 
    59                           ; Code-generator required, PIC16F887 Definitions
    60                           ; 
    61                           ; SFR Addresses
    62  0000                     	;# 
    63  0001                     	;# 
    64  0002                     	;# 
    65  0003                     	;# 
    66  0004                     	;# 
    67  0005                     	;# 
    68  0006                     	;# 
    69  0007                     	;# 
    70  0008                     	;# 
    71  0009                     	;# 
    72  000A                     	;# 
    73  000B                     	;# 
    74  000C                     	;# 
    75  000D                     	;# 
    76  000E                     	;# 
    77  000E                     	;# 
    78  000F                     	;# 
    79  0010                     	;# 
    80  0011                     	;# 
    81  0012                     	;# 
    82  0013                     	;# 
    83  0014                     	;# 
    84  0015                     	;# 
    85  0015                     	;# 
    86  0016                     	;# 
    87  0017                     	;# 
    88  0018                     	;# 
    89  0019                     	;# 
    90  001A                     	;# 
    91  001B                     	;# 
    92  001B                     	;# 
    93  001C                     	;# 
    94  001D                     	;# 
    95  001E                     	;# 
    96  001F                     	;# 
    97  0081                     	;# 
    98  0085                     	;# 
    99  0086                     	;# 
   100  0087                     	;# 
   101  0088                     	;# 
   102  0089                     	;# 
   103  008C                     	;# 
   104  008D                     	;# 
   105  008E                     	;# 
   106  008F                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0095                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  0105                     	;# 
   126  0107                     	;# 
   127  0108                     	;# 
   128  0109                     	;# 
   129  010C                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  0185                     	;# 
   135  0187                     	;# 
   136  0188                     	;# 
   137  0189                     	;# 
   138  018C                     	;# 
   139  018D                     	;# 
   140  0000                     	;# 
   141  0001                     	;# 
   142  0002                     	;# 
   143  0003                     	;# 
   144  0004                     	;# 
   145  0005                     	;# 
   146  0006                     	;# 
   147  0007                     	;# 
   148  0008                     	;# 
   149  0009                     	;# 
   150  000A                     	;# 
   151  000B                     	;# 
   152  000C                     	;# 
   153  000D                     	;# 
   154  000E                     	;# 
   155  000E                     	;# 
   156  000F                     	;# 
   157  0010                     	;# 
   158  0011                     	;# 
   159  0012                     	;# 
   160  0013                     	;# 
   161  0014                     	;# 
   162  0015                     	;# 
   163  0015                     	;# 
   164  0016                     	;# 
   165  0017                     	;# 
   166  0018                     	;# 
   167  0019                     	;# 
   168  001A                     	;# 
   169  001B                     	;# 
   170  001B                     	;# 
   171  001C                     	;# 
   172  001D                     	;# 
   173  001E                     	;# 
   174  001F                     	;# 
   175  0081                     	;# 
   176  0085                     	;# 
   177  0086                     	;# 
   178  0087                     	;# 
   179  0088                     	;# 
   180  0089                     	;# 
   181  008C                     	;# 
   182  008D                     	;# 
   183  008E                     	;# 
   184  008F                     	;# 
   185  0090                     	;# 
   186  0091                     	;# 
   187  0092                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0094                     	;# 
   192  0095                     	;# 
   193  0096                     	;# 
   194  0097                     	;# 
   195  0098                     	;# 
   196  0099                     	;# 
   197  009A                     	;# 
   198  009B                     	;# 
   199  009C                     	;# 
   200  009D                     	;# 
   201  009E                     	;# 
   202  009F                     	;# 
   203  0105                     	;# 
   204  0107                     	;# 
   205  0108                     	;# 
   206  0109                     	;# 
   207  010C                     	;# 
   208  010C                     	;# 
   209  010D                     	;# 
   210  010E                     	;# 
   211  010F                     	;# 
   212  0185                     	;# 
   213  0187                     	;# 
   214  0188                     	;# 
   215  0189                     	;# 
   216  018C                     	;# 
   217  018D                     	;# 
   218  0000                     	;# 
   219  0001                     	;# 
   220  0002                     	;# 
   221  0003                     	;# 
   222  0004                     	;# 
   223  0005                     	;# 
   224  0006                     	;# 
   225  0007                     	;# 
   226  0008                     	;# 
   227  0009                     	;# 
   228  000A                     	;# 
   229  000B                     	;# 
   230  000C                     	;# 
   231  000D                     	;# 
   232  000E                     	;# 
   233  000E                     	;# 
   234  000F                     	;# 
   235  0010                     	;# 
   236  0011                     	;# 
   237  0012                     	;# 
   238  0013                     	;# 
   239  0014                     	;# 
   240  0015                     	;# 
   241  0015                     	;# 
   242  0016                     	;# 
   243  0017                     	;# 
   244  0018                     	;# 
   245  0019                     	;# 
   246  001A                     	;# 
   247  001B                     	;# 
   248  001B                     	;# 
   249  001C                     	;# 
   250  001D                     	;# 
   251  001E                     	;# 
   252  001F                     	;# 
   253  0081                     	;# 
   254  0085                     	;# 
   255  0086                     	;# 
   256  0087                     	;# 
   257  0088                     	;# 
   258  0089                     	;# 
   259  008C                     	;# 
   260  008D                     	;# 
   261  008E                     	;# 
   262  008F                     	;# 
   263  0090                     	;# 
   264  0091                     	;# 
   265  0092                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009C                     	;# 
   278  009D                     	;# 
   279  009E                     	;# 
   280  009F                     	;# 
   281  0105                     	;# 
   282  0107                     	;# 
   283  0108                     	;# 
   284  0109                     	;# 
   285  010C                     	;# 
   286  010C                     	;# 
   287  010D                     	;# 
   288  010E                     	;# 
   289  010F                     	;# 
   290  0185                     	;# 
   291  0187                     	;# 
   292  0188                     	;# 
   293  0189                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  008F                     	;# 
   341  0090                     	;# 
   342  0091                     	;# 
   343  0092                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0095                     	;# 
   349  0096                     	;# 
   350  0097                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009A                     	;# 
   354  009B                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  0105                     	;# 
   360  0107                     	;# 
   361  0108                     	;# 
   362  0109                     	;# 
   363  010C                     	;# 
   364  010C                     	;# 
   365  010D                     	;# 
   366  010E                     	;# 
   367  010F                     	;# 
   368  0185                     	;# 
   369  0187                     	;# 
   370  0188                     	;# 
   371  0189                     	;# 
   372  018C                     	;# 
   373  018D                     	;# 
   374  0000                     	;# 
   375  0001                     	;# 
   376  0002                     	;# 
   377  0003                     	;# 
   378  0004                     	;# 
   379  0005                     	;# 
   380  0006                     	;# 
   381  0007                     	;# 
   382  0008                     	;# 
   383  0009                     	;# 
   384  000A                     	;# 
   385  000B                     	;# 
   386  000C                     	;# 
   387  000D                     	;# 
   388  000E                     	;# 
   389  000E                     	;# 
   390  000F                     	;# 
   391  0010                     	;# 
   392  0011                     	;# 
   393  0012                     	;# 
   394  0013                     	;# 
   395  0014                     	;# 
   396  0015                     	;# 
   397  0015                     	;# 
   398  0016                     	;# 
   399  0017                     	;# 
   400  0018                     	;# 
   401  0019                     	;# 
   402  001A                     	;# 
   403  001B                     	;# 
   404  001B                     	;# 
   405  001C                     	;# 
   406  001D                     	;# 
   407  001E                     	;# 
   408  001F                     	;# 
   409  0081                     	;# 
   410  0085                     	;# 
   411  0086                     	;# 
   412  0087                     	;# 
   413  0088                     	;# 
   414  0089                     	;# 
   415  008C                     	;# 
   416  008D                     	;# 
   417  008E                     	;# 
   418  008F                     	;# 
   419  0090                     	;# 
   420  0091                     	;# 
   421  0092                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0094                     	;# 
   426  0095                     	;# 
   427  0096                     	;# 
   428  0097                     	;# 
   429  0098                     	;# 
   430  0099                     	;# 
   431  009A                     	;# 
   432  009B                     	;# 
   433  009C                     	;# 
   434  009D                     	;# 
   435  009E                     	;# 
   436  009F                     	;# 
   437  0105                     	;# 
   438  0107                     	;# 
   439  0108                     	;# 
   440  0109                     	;# 
   441  010C                     	;# 
   442  010C                     	;# 
   443  010D                     	;# 
   444  010E                     	;# 
   445  010F                     	;# 
   446  0185                     	;# 
   447  0187                     	;# 
   448  0188                     	;# 
   449  0189                     	;# 
   450  018C                     	;# 
   451  018D                     	;# 
   452  0018                     _RCSTAbits	set	24
   453  0007                     _PORTCbits	set	7
   454  001E                     _ADRESH	set	30
   455  001F                     _ADCON0bits	set	31
   456  000B                     _INTCONbits	set	11
   457  0007                     _PORTC	set	7
   458  0006                     _PORTB	set	6
   459  0009                     _PORTE	set	9
   460  0008                     _PORTD	set	8
   461  001A                     _RCREG	set	26
   462  000C                     _PIR1bits	set	12
   463  0039                     _RC1	set	57
   464  0038                     _RC0	set	56
   465  009A                     _SPBRGH	set	154
   466  0099                     _SPBRG	set	153
   467  0098                     _TXSTAbits	set	152
   468  009F                     _ADCON1bits	set	159
   469  008C                     _PIE1bits	set	140
   470  008F                     _OSCCONbits	set	143
   471  0089                     _TRISE	set	137
   472  0088                     _TRISD	set	136
   473  0087                     _TRISCbits	set	135
   474  0086                     _TRISB	set	134
   475  0187                     _BAUDCTLbits	set	391
   476  0188                     _ANSELbits	set	392
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	strings
   481  0200                     __pstrings:
   482  0200                     stringtab:
   483  0200                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0200  1BFF               	btfsc	btemp+1,7
   487  0201  2A0A               	ljmp	stringcode
   488  0202  1383               	bcf	3,7
   489  0203  187F               	btfsc	btemp+1,0
   490  0204  1783               	bsf	3,7
   491  0205  0800               	movf	0,w
   492  0206  0A84               	incf	4,f
   493  0207  1903               	skipnz
   494  0208  0AFF               	incf	btemp+1,f
   495  0209  0008               	return
   496  020A                     stringcode:
   497  020A                     stringdir:
   498  020A  3002               	movlw	high stringdir
   499  020B  008A               	movwf	10
   500  020C  0804               	movf	4,w
   501  020D  0A84               	incf	4,f
   502  020E  0782               	addwf	2,f
   503  020F                     __stringbase:
   504  020F  3400               	retlw	0
   505  0210                     __end_of__stringtab:
   506  0210                     STR_1:
   507  0210  3420               	retlw	32	;' '
   508  0211  3463               	retlw	99	;'c'
   509  0212  3475               	retlw	117	;'u'
   510  0213  3461               	retlw	97	;'a'
   511  0214  346C               	retlw	108	;'l'
   512  0215  3471               	retlw	113	;'q'
   513  0216  3475               	retlw	117	;'u'
   514  0217  3469               	retlw	105	;'i'
   515  0218  3465               	retlw	101	;'e'
   516  0219  3472               	retlw	114	;'r'
   517  021A  3420               	retlw	32	;' '
   518  021B  3474               	retlw	116	;'t'
   519  021C  3465               	retlw	101	;'e'
   520  021D  3478               	retlw	120	;'x'
   521  021E  3474               	retlw	116	;'t'
   522  021F  346F               	retlw	111	;'o'
   523  0220  3420               	retlw	32	;' '
   524  0221  3400               	retlw	0
   525                           
   526                           	psect	cinit
   527  000F                     start_initialization:	
   528                           ; #config settings
   529                           
   530  000F                     __initialization:
   531                           
   532                           ; Clear objects allocated to COMMON
   533  000F  01F8               	clrf	__pbssCOMMON& (0+127)
   534  0010  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   535  0011  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
   536  0012  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
   537                           
   538                           ; Clear objects allocated to BANK0
   539  0013  1283               	bcf	3,5	;RP0=0, select bank0
   540  0014  1303               	bcf	3,6	;RP1=0, select bank0
   541  0015  01B0               	clrf	__pbssBANK0& (0+127)
   542  0016  01B1               	clrf	(__pbssBANK0+1)& (0+127)
   543  0017  01B2               	clrf	(__pbssBANK0+2)& (0+127)
   544  0018  01B3               	clrf	(__pbssBANK0+3)& (0+127)
   545  0019  01B4               	clrf	(__pbssBANK0+4)& (0+127)
   546  001A  01B5               	clrf	(__pbssBANK0+5)& (0+127)
   547  001B  01B6               	clrf	(__pbssBANK0+6)& (0+127)
   548  001C  01B7               	clrf	(__pbssBANK0+7)& (0+127)
   549  001D  01B8               	clrf	(__pbssBANK0+8)& (0+127)
   550  001E  01B9               	clrf	(__pbssBANK0+9)& (0+127)
   551  001F  01BA               	clrf	(__pbssBANK0+10)& (0+127)
   552  0020  01BB               	clrf	(__pbssBANK0+11)& (0+127)
   553  0021                     end_of_initialization:	
   554                           ;End of C runtime variable initialization code
   555                           
   556  0021                     __end_of__initialization:
   557  0021  0183               	clrf	3
   558  0022  120A  118A  28A8   	ljmp	_main	;jump to C main() function
   559                           
   560                           	psect	bssCOMMON
   561  0078                     __pbssCOMMON:
   562  0078                     _cuenta_uart:
   563  0078                     	ds	1
   564  0079                     _dato_recibido:
   565  0079                     	ds	1
   566  007A                     _conversion2:
   567  007A                     	ds	1
   568  007B                     _conversion1:
   569  007B                     	ds	1
   570                           
   571                           	psect	bssBANK0
   572  0030                     __pbssBANK0:
   573  0030                     _suma3:
   574  0030                     	ds	1
   575  0031                     _suma2:
   576  0031                     	ds	1
   577  0032                     _suma1:
   578  0032                     	ds	1
   579  0033                     _unidades3:
   580  0033                     	ds	1
   581  0034                     _decenas3:
   582  0034                     	ds	1
   583  0035                     _centenas3:
   584  0035                     	ds	1
   585  0036                     _unidades2:
   586  0036                     	ds	1
   587  0037                     _decenas2:
   588  0037                     	ds	1
   589  0038                     _centenas2:
   590  0038                     	ds	1
   591  0039                     _unidades1:
   592  0039                     	ds	1
   593  003A                     _decenas1:
   594  003A                     	ds	1
   595  003B                     _centenas1:
   596  003B                     	ds	1
   597                           
   598                           	psect	cstackCOMMON
   599  0070                     __pcstackCOMMON:
   600  0070                     ?_setup:
   601  0070                     ?_lcd_init:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_cmd:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_lcd_ascii:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_toggle_adc:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_recepcion_uart:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_adc_config:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_uart_config:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_isr:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ??_isr:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_main:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_datos_ascii:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_dat:	
   635                           ; 1 bytes @ 0x0
   636                           
   637                           
   638                           ; 1 bytes @ 0x0
   639  0070                     	ds	2
   640  0072                     ??_cmd:
   641  0072                     ??_toggle_adc:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ??_recepcion_uart:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ??_adc_config:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ??_uart_config:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ??_datos_ascii:	
   654                           ; 1 bytes @ 0x2
   655                           
   656  0072                     ??_dat:	
   657                           ; 1 bytes @ 0x2
   658                           
   659                           
   660                           ; 1 bytes @ 0x2
   661  0072                     	ds	1
   662  0073                     ??_setup:
   663                           
   664                           ; 1 bytes @ 0x3
   665  0073                     	ds	1
   666  0074                     datos_ascii@numero:
   667  0074                     cmd@a:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     dat@b:	
   671                           ; 1 bytes @ 0x4
   672                           
   673                           
   674                           ; 1 bytes @ 0x4
   675  0074                     	ds	1
   676  0075                     ??_lcd_init:
   677  0075                     ?_lcd_linea:	
   678                           ; 1 bytes @ 0x5
   679                           
   680  0075                     ??_lcd_ascii:	
   681                           ; 1 bytes @ 0x5
   682                           
   683  0075                     lcd_linea@b:	
   684                           ; 1 bytes @ 0x5
   685                           
   686                           
   687                           ; 1 bytes @ 0x5
   688  0075                     	ds	1
   689  0076                     ??_lcd_linea:
   690  0076                     ?_show:	
   691                           ; 1 bytes @ 0x6
   692                           
   693  0076                     show@s:	
   694                           ; 1 bytes @ 0x6
   695                           
   696                           
   697                           ; 2 bytes @ 0x6
   698  0076                     	ds	2
   699  0078                     ??_show:
   700  0078                     ??_main:	
   701                           ; 1 bytes @ 0x8
   702                           
   703                           
   704                           	psect	cstackBANK0
   705  0020                     __pcstackBANK0:	
   706                           ; 1 bytes @ 0x8
   707                           
   708  0020                     lcd_linea@a:
   709  0020                     lcd_ascii@random:	
   710                           ; 1 bytes @ 0x0
   711                           
   712                           
   713                           ; 16 bytes @ 0x0
   714  0020                     	ds	1
   715  0021                     lcd_linea@temp:
   716                           
   717                           ; 1 bytes @ 0x1
   718  0021                     	ds	1
   719  0022                     lcd_linea@z:
   720                           
   721                           ; 1 bytes @ 0x2
   722  0022                     	ds	14
   723                           
   724                           	psect	maintext
   725  00A8                     __pmaintext:	
   726 ;;
   727 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   728 ;;
   729 ;; *************** function _main *****************
   730 ;; Defined at:
   731 ;;		line 96 in file "main_lab2.c"
   732 ;; Parameters:    Size  Location     Type
   733 ;;		None
   734 ;; Auto vars:     Size  Location     Type
   735 ;;		None
   736 ;; Return value:  Size  Location     Type
   737 ;;                  1    wreg      void 
   738 ;; Registers used:
   739 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   740 ;; Tracked objects:
   741 ;;		On entry : B00/0
   742 ;;		On exit  : 0/0
   743 ;;		Unchanged: 0/0
   744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   745 ;;      Params:         0       0       0       0       0
   746 ;;      Locals:         0       0       0       0       0
   747 ;;      Temps:          0       0       0       0       0
   748 ;;      Totals:         0       0       0       0       0
   749 ;;Total ram usage:        0 bytes
   750 ;; Hardware stack levels required when called:    3
   751 ;; This function calls:
   752 ;;		_cmd
   753 ;;		_lcd_ascii
   754 ;;		_lcd_init
   755 ;;		_lcd_linea
   756 ;;		_recepcion_uart
   757 ;;		_setup
   758 ;;		_show
   759 ;;		_toggle_adc
   760 ;; This function is called by:
   761 ;;		Startup code after reset
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           
   766                           ;psect for function _main
   767  00A8                     _main:
   768  00A8                     l1423:	
   769                           ;incstack = 0
   770                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   771                           
   772                           
   773                           ;main_lab2.c: 98:     setup();
   774  00A8  120A  118A  216F  120A  118A  	fcall	_setup
   775                           
   776                           ;main_lab2.c: 99:     lcd_init();
   777  00AD  120A  118A  223E  120A  118A  	fcall	_lcd_init
   778                           
   779                           ;main_lab2.c: 100:  cmd(0x90);
   780  00B2  3090               	movlw	144
   781  00B3  120A  118A  2296  120A  118A  	fcall	_cmd
   782  00B8                     l101:	
   783                           ;main_lab2.c: 103:     while(1)
   784                           
   785                           
   786                           ;main_lab2.c: 104:     {;main_lab2.c: 106:         lcd_linea(1,1);
   787  00B8  01F5               	clrf	lcd_linea@b
   788  00B9  0AF5               	incf	lcd_linea@b,f
   789  00BA  3001               	movlw	1
   790  00BB  120A  118A  219E  120A  118A  	fcall	_lcd_linea
   791  00C0                     l1425:
   792                           
   793                           ;main_lab2.c: 107:         show(" cualquier texto ");
   794  00C0  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   795  00C1  00F6               	movwf	show@s
   796  00C2  3080               	movlw	128
   797  00C3  00F7               	movwf	show@s+1
   798  00C4  120A  118A  21CC  120A  118A  	fcall	_show
   799  00C9                     l1427:
   800                           
   801                           ;main_lab2.c: 108:         lcd_linea(2,1);
   802  00C9  01F5               	clrf	lcd_linea@b
   803  00CA  0AF5               	incf	lcd_linea@b,f
   804  00CB  3002               	movlw	2
   805  00CC  120A  118A  219E  120A  118A  	fcall	_lcd_linea
   806                           
   807                           ;main_lab2.c: 109:         show(lcd_ascii());
   808  00D1  120A  118A  2025  120A  118A  	fcall	_lcd_ascii
   809  00D6  00F6               	movwf	show@s
   810  00D7  3000               	movlw	0
   811  00D8  00F7               	movwf	show@s+1
   812  00D9  120A  118A  21CC  120A  118A  	fcall	_show
   813  00DE                     l1429:
   814                           
   815                           ;main_lab2.c: 112:         toggle_adc();
   816  00DE  120A  118A  20F2  120A  118A  	fcall	_toggle_adc
   817  00E3                     l1431:
   818                           
   819                           ;main_lab2.c: 113:         recepcion_uart();
   820  00E3  120A  118A  2222  120A  118A  	fcall	_recepcion_uart
   821  00E8                     l1433:
   822                           
   823                           ;main_lab2.c: 115:         PORTD=conversion1;
   824  00E8  087B               	movf	_conversion1,w
   825  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   826  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   827  00EB  0088               	movwf	8	;volatile
   828  00EC                     l1435:
   829                           
   830                           ;main_lab2.c: 116:         PORTE=conversion2;
   831  00EC  087A               	movf	_conversion2,w
   832  00ED  0089               	movwf	9	;volatile
   833  00EE  28B8               	goto	l101
   834  00EF  120A  118A  280C   	ljmp	start
   835  00F2                     __end_of_main:
   836                           
   837                           	psect	text1
   838  00F2                     __ptext1:	
   839 ;; *************** function _toggle_adc *****************
   840 ;; Defined at:
   841 ;;		line 173 in file "main_lab2.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          3       0       0       0       0
   858 ;;      Totals:         3       0       0       0       0
   859 ;;Total ram usage:        3 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    1
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_main
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869                           
   870                           ;psect for function _toggle_adc
   871  00F2                     _toggle_adc:
   872  00F2                     l995:	
   873                           ;incstack = 0
   874                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   875                           
   876                           
   877                           ;main_lab2.c: 175:     if (ADCON0bits.GO==0)
   878  00F2  1283               	bcf	3,5	;RP0=0, select bank0
   879  00F3  1303               	bcf	3,6	;RP1=0, select bank0
   880  00F4  189F               	btfsc	31,1	;volatile
   881  00F5  28F7               	goto	u41
   882  00F6  28F8               	goto	u40
   883  00F7                     u41:
   884  00F7  2932               	goto	l115
   885  00F8                     u40:
   886  00F8  2917               	goto	l1009
   887  00F9                     l999:
   888                           
   889                           ;main_lab2.c: 180:                 conversion1=ADRESH;
   890  00F9  081E               	movf	30,w	;volatile
   891  00FA  00F2               	movwf	??_toggle_adc
   892  00FB  0872               	movf	??_toggle_adc,w
   893  00FC  00FB               	movwf	_conversion1
   894                           
   895                           ;main_lab2.c: 181:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   896  00FD  3042               	movlw	66
   897  00FE  00F2               	movwf	??_toggle_adc
   898  00FF                     u307:
   899  00FF  0BF2               	decfsz	??_toggle_adc,f
   900  0100  28FF               	goto	u307
   901  0101  0000               	nop
   902  0102                     l1001:
   903                           
   904                           ;main_lab2.c: 182:                 ADCON0bits.CHS=1;
   905  0102  1283               	bcf	3,5	;RP0=0, select bank0
   906  0103  1303               	bcf	3,6	;RP1=0, select bank0
   907  0104  081F               	movf	31,w	;volatile
   908  0105  39C3               	andlw	-61
   909  0106  3804               	iorlw	4
   910  0107  009F               	movwf	31	;volatile
   911                           
   912                           ;main_lab2.c: 183:                 break;
   913  0108  292A               	goto	l1011
   914  0109                     l1003:
   915                           
   916                           ;main_lab2.c: 186:                 conversion2=ADRESH;
   917  0109  081E               	movf	30,w	;volatile
   918  010A  00F2               	movwf	??_toggle_adc
   919  010B  0872               	movf	??_toggle_adc,w
   920  010C  00FA               	movwf	_conversion2
   921                           
   922                           ;main_lab2.c: 187:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   923  010D  3042               	movlw	66
   924  010E  00F2               	movwf	??_toggle_adc
   925  010F                     u317:
   926  010F  0BF2               	decfsz	??_toggle_adc,f
   927  0110  290F               	goto	u317
   928  0111  0000               	nop
   929  0112                     l1005:
   930                           
   931                           ;main_lab2.c: 188:                 ADCON0bits.CHS=0;
   932  0112  30C3               	movlw	-61
   933  0113  1283               	bcf	3,5	;RP0=0, select bank0
   934  0114  1303               	bcf	3,6	;RP1=0, select bank0
   935  0115  059F               	andwf	31,f	;volatile
   936                           
   937                           ;main_lab2.c: 189:                 break;
   938  0116  292A               	goto	l1011
   939  0117                     l1009:
   940  0117  0C1F               	rrf	31,w	;volatile
   941  0118  00F2               	movwf	??_toggle_adc
   942  0119  0C72               	rrf	??_toggle_adc,w
   943  011A  390F               	andlw	15
   944  011B  00F3               	movwf	??_toggle_adc+1
   945  011C  01F4               	clrf	??_toggle_adc+2
   946                           
   947                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   948                           ; Switch size 1, requested type "simple"
   949                           ; Number of cases is 1, Range of values is 0 to 0
   950                           ; switch strategies available:
   951                           ; Name         Instructions Cycles
   952                           ; simple_byte            4     3 (average)
   953                           ; direct_byte           11     8 (fixed)
   954                           ; jumptable            260     6 (fixed)
   955                           ;	Chosen strategy is simple_byte
   956  011D  0874               	movf	??_toggle_adc+2,w
   957  011E  3A00               	xorlw	0	; case 0
   958  011F  1903               	skipnz
   959  0120  2922               	goto	l1501
   960  0121  292A               	goto	l1011
   961  0122                     l1501:
   962                           
   963                           ; Switch size 1, requested type "simple"
   964                           ; Number of cases is 2, Range of values is 0 to 1
   965                           ; switch strategies available:
   966                           ; Name         Instructions Cycles
   967                           ; simple_byte            7     4 (average)
   968                           ; direct_byte           14     8 (fixed)
   969                           ; jumptable            260     6 (fixed)
   970                           ;	Chosen strategy is simple_byte
   971  0122  0873               	movf	??_toggle_adc+1,w
   972  0123  3A00               	xorlw	0	; case 0
   973  0124  1903               	skipnz
   974  0125  28F9               	goto	l999
   975  0126  3A01               	xorlw	1	; case 1
   976  0127  1903               	skipnz
   977  0128  2909               	goto	l1003
   978  0129  292A               	goto	l1011
   979  012A                     l1011:
   980                           
   981                           ;main_lab2.c: 191:             _delay((unsigned long)((100)*(8000000/4000000.0)));
   982  012A  3042               	movlw	66
   983  012B  00F2               	movwf	??_toggle_adc
   984  012C                     u327:
   985  012C  0BF2               	decfsz	??_toggle_adc,f
   986  012D  292C               	goto	u327
   987  012E  0000               	nop
   988  012F                     l1013:
   989                           
   990                           ;main_lab2.c: 192:             ADCON0bits.GO=1;
   991  012F  1283               	bcf	3,5	;RP0=0, select bank0
   992  0130  1303               	bcf	3,6	;RP1=0, select bank0
   993  0131  149F               	bsf	31,1	;volatile
   994  0132                     l115:
   995  0132  0008               	return
   996  0133                     __end_of_toggle_adc:
   997                           
   998                           	psect	text2
   999  01CC                     __ptext2:	
  1000 ;; *************** function _show *****************
  1001 ;; Defined at:
  1002 ;;		line 59 in file "LCD.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;  s               2    6[COMMON] PTR unsigned char 
  1005 ;;		 -> lcd_ascii@random(16), STR_1(18), 
  1006 ;; Auto vars:     Size  Location     Type
  1007 ;;		None
  1008 ;; Return value:  Size  Location     Type
  1009 ;;                  1    wreg      void 
  1010 ;; Registers used:
  1011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1012 ;; Tracked objects:
  1013 ;;		On entry : 0/0
  1014 ;;		On exit  : 0/0
  1015 ;;		Unchanged: 0/0
  1016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1017 ;;      Params:         2       0       0       0       0
  1018 ;;      Locals:         0       0       0       0       0
  1019 ;;      Temps:          0       0       0       0       0
  1020 ;;      Totals:         2       0       0       0       0
  1021 ;;Total ram usage:        2 bytes
  1022 ;; Hardware stack levels used:    1
  1023 ;; Hardware stack levels required when called:    2
  1024 ;; This function calls:
  1025 ;;		_dat
  1026 ;; This function is called by:
  1027 ;;		_main
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _show
  1033  01CC                     _show:
  1034  01CC                     l1209:	
  1035                           ;incstack = 0
  1036                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1037                           
  1038                           
  1039                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
  1040  01CC  29E1               	goto	l1215
  1041  01CD                     l1211:
  1042                           
  1043                           ;LCD.c: 62:   dat(*s++);
  1044  01CD  0877               	movf	show@s+1,w
  1045  01CE  00FF               	movwf	btemp+1
  1046  01CF  0876               	movf	show@s,w
  1047  01D0  0084               	movwf	4
  1048  01D1  120A  118A  2200  120A  118A  	fcall	stringtab
  1049  01D6  120A  118A  2257  120A  118A  	fcall	_dat
  1050  01DB                     l1213:
  1051  01DB  3001               	movlw	1
  1052  01DC  07F6               	addwf	show@s,f
  1053  01DD  1803               	skipnc
  1054  01DE  0AF7               	incf	show@s+1,f
  1055  01DF  3000               	movlw	0
  1056  01E0  07F7               	addwf	show@s+1,f
  1057  01E1                     l1215:
  1058                           
  1059                           ;LCD.c: 61:  while(*s) {
  1060  01E1  0877               	movf	show@s+1,w
  1061  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  1062  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  1063  01E4  00FF               	movwf	btemp+1
  1064  01E5  0876               	movf	show@s,w
  1065  01E6  0084               	movwf	4
  1066  01E7  120A  118A  2200  120A  118A  	fcall	stringtab
  1067  01EC  3A00               	xorlw	0
  1068  01ED  1D03               	skipz
  1069  01EE  29F0               	goto	u81
  1070  01EF  29F1               	goto	u80
  1071  01F0                     u81:
  1072  01F0  29CD               	goto	l1211
  1073  01F1                     u80:
  1074  01F1                     l180:
  1075  01F1  0008               	return
  1076  01F2                     __end_of_show:
  1077                           
  1078                           	psect	text3
  1079  0257                     __ptext3:	
  1080 ;; *************** function _dat *****************
  1081 ;; Defined at:
  1082 ;;		line 48 in file "LCD.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;  b               1    wreg     unsigned char 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  b               1    4[COMMON] unsigned char 
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1096 ;;      Params:         0       0       0       0       0
  1097 ;;      Locals:         1       0       0       0       0
  1098 ;;      Temps:          2       0       0       0       0
  1099 ;;      Totals:         3       0       0       0       0
  1100 ;;Total ram usage:        3 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    1
  1103 ;; This function calls:
  1104 ;;		Nothing
  1105 ;; This function is called by:
  1106 ;;		_show
  1107 ;; This function uses a non-reentrant model
  1108 ;;
  1109                           
  1110                           
  1111                           ;psect for function _dat
  1112  0257                     _dat:
  1113                           
  1114                           ;incstack = 0
  1115                           ; Regs used in _dat: [wreg]
  1116                           ;dat@b stored from wreg
  1117  0257  00F4               	movwf	dat@b
  1118  0258                     l903:
  1119                           
  1120                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
  1121  0258  0874               	movf	dat@b,w
  1122  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1123  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1124  025B  0086               	movwf	6	;volatile
  1125  025C                     l905:
  1126                           
  1127                           ;LCD.c: 51:  RC0=1;
  1128  025C  1407               	bsf	7,0	;volatile
  1129  025D                     l907:
  1130                           
  1131                           ;LCD.c: 52:  RC1=0;
  1132  025D  1087               	bcf	7,1	;volatile
  1133  025E                     l909:
  1134                           
  1135                           ;LCD.c: 53:  PORTCbits.RC2=1;
  1136  025E  1507               	bsf	7,2	;volatile
  1137                           
  1138                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1139  025F  3003               	movlw	3
  1140  0260  00F3               	movwf	??_dat+1
  1141  0261  3097               	movlw	151
  1142  0262  00F2               	movwf	??_dat
  1143  0263                     u337:
  1144  0263  0BF2               	decfsz	??_dat,f
  1145  0264  2A63               	goto	u337
  1146  0265  0BF3               	decfsz	??_dat+1,f
  1147  0266  2A63               	goto	u337
  1148  0267  2A68               	nop2
  1149  0268                     l911:
  1150                           
  1151                           ;LCD.c: 55:  PORTCbits.RC2=0;
  1152  0268  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0269  1303               	bcf	3,6	;RP1=0, select bank0
  1154  026A  1107               	bcf	7,2	;volatile
  1155  026B                     l174:
  1156  026B  0008               	return
  1157  026C                     __end_of_dat:
  1158                           
  1159                           	psect	text4
  1160  016F                     __ptext4:	
  1161 ;; *************** function _setup *****************
  1162 ;; Defined at:
  1163 ;;		line 123 in file "main_lab2.c"
  1164 ;; Parameters:    Size  Location     Type
  1165 ;;		None
  1166 ;; Auto vars:     Size  Location     Type
  1167 ;;		None
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  1    wreg      void 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0, pclath, cstack
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1177 ;;      Params:         0       0       0       0       0
  1178 ;;      Locals:         0       0       0       0       0
  1179 ;;      Temps:          0       0       0       0       0
  1180 ;;      Totals:         0       0       0       0       0
  1181 ;;Total ram usage:        0 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; Hardware stack levels required when called:    2
  1184 ;; This function calls:
  1185 ;;		_adc_config
  1186 ;;		_uart_config
  1187 ;; This function is called by:
  1188 ;;		_main
  1189 ;; This function uses a non-reentrant model
  1190 ;;
  1191                           
  1192                           
  1193                           ;psect for function _setup
  1194  016F                     _setup:
  1195  016F                     l913:	
  1196                           ;incstack = 0
  1197                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1198                           
  1199                           
  1200                           ;main_lab2.c: 126:     ANSEL=0;
  1201  016F  1683               	bsf	3,5	;RP0=1, select bank3
  1202  0170  1703               	bsf	3,6	;RP1=1, select bank3
  1203  0171  0188               	clrf	8	;volatile
  1204                           
  1205                           ;main_lab2.c: 127:     ANSELH=0;
  1206  0172  0189               	clrf	9	;volatile
  1207  0173                     l915:
  1208                           
  1209                           ;main_lab2.c: 128:     ANSELbits.ANS0=1;
  1210  0173  1408               	bsf	8,0	;volatile
  1211  0174                     l917:
  1212                           
  1213                           ;main_lab2.c: 129:     ANSELbits.ANS1=1;
  1214  0174  1488               	bsf	8,1	;volatile
  1215                           
  1216                           ;main_lab2.c: 132:     TRISB=0;
  1217  0175  1683               	bsf	3,5	;RP0=1, select bank1
  1218  0176  1303               	bcf	3,6	;RP1=0, select bank1
  1219  0177  0186               	clrf	6	;volatile
  1220  0178                     l919:
  1221                           
  1222                           ;main_lab2.c: 133:     TRISCbits.TRISC0=0;
  1223  0178  1007               	bcf	7,0	;volatile
  1224  0179                     l921:
  1225                           
  1226                           ;main_lab2.c: 134:     TRISCbits.TRISC1=0;
  1227  0179  1087               	bcf	7,1	;volatile
  1228  017A                     l923:
  1229                           
  1230                           ;main_lab2.c: 135:     TRISCbits.TRISC2=0;
  1231  017A  1107               	bcf	7,2	;volatile
  1232                           
  1233                           ;main_lab2.c: 136:     TRISD=0;
  1234  017B  0188               	clrf	8	;volatile
  1235                           
  1236                           ;main_lab2.c: 137:     TRISE=0;
  1237  017C  0189               	clrf	9	;volatile
  1238                           
  1239                           ;main_lab2.c: 139:     PORTB=0;
  1240  017D  1283               	bcf	3,5	;RP0=0, select bank0
  1241  017E  1303               	bcf	3,6	;RP1=0, select bank0
  1242  017F  0186               	clrf	6	;volatile
  1243                           
  1244                           ;main_lab2.c: 140:     PORTC=0;
  1245  0180  0187               	clrf	7	;volatile
  1246                           
  1247                           ;main_lab2.c: 141:     PORTD=0;
  1248  0181  0188               	clrf	8	;volatile
  1249                           
  1250                           ;main_lab2.c: 142:     PORTE=0;
  1251  0182  0189               	clrf	9	;volatile
  1252  0183                     l925:
  1253                           
  1254                           ;main_lab2.c: 145:     OSCCONbits.IRCF = 0b111;
  1255  0183  3070               	movlw	112
  1256  0184  1683               	bsf	3,5	;RP0=1, select bank1
  1257  0185  1303               	bcf	3,6	;RP1=0, select bank1
  1258  0186  048F               	iorwf	15,f	;volatile
  1259  0187                     l927:
  1260                           
  1261                           ;main_lab2.c: 146:     OSCCONbits.SCS = 1;
  1262  0187  140F               	bsf	15,0	;volatile
  1263  0188                     l929:
  1264                           
  1265                           ;main_lab2.c: 149:     adc_config();
  1266  0188  120A  118A  2281  120A  118A  	fcall	_adc_config
  1267  018D                     l931:
  1268                           
  1269                           ;main_lab2.c: 151:     uart_config();
  1270  018D  120A  118A  226C  120A  118A  	fcall	_uart_config
  1271  0192                     l933:
  1272                           
  1273                           ;main_lab2.c: 154:     INTCONbits.GIE=1;
  1274  0192  178B               	bsf	11,7	;volatile
  1275  0193                     l935:
  1276                           
  1277                           ;main_lab2.c: 155:     INTCONbits.T0IE=0;
  1278  0193  128B               	bcf	11,5	;volatile
  1279  0194                     l937:
  1280                           
  1281                           ;main_lab2.c: 156:     INTCONbits.T0IF=0;
  1282  0194  110B               	bcf	11,2	;volatile
  1283  0195                     l939:
  1284                           
  1285                           ;main_lab2.c: 157:     INTCONbits.RBIE=0;
  1286  0195  118B               	bcf	11,3	;volatile
  1287  0196                     l941:
  1288                           
  1289                           ;main_lab2.c: 158:     INTCONbits.RBIF=0;
  1290  0196  100B               	bcf	11,0	;volatile
  1291  0197                     l943:
  1292                           
  1293                           ;main_lab2.c: 160:     PIE1bits.ADIE = 0 ;
  1294  0197  1683               	bsf	3,5	;RP0=1, select bank1
  1295  0198  1303               	bcf	3,6	;RP1=0, select bank1
  1296  0199  130C               	bcf	12,6	;volatile
  1297  019A                     l945:
  1298                           
  1299                           ;main_lab2.c: 161:     PIR1bits.ADIF = 0;
  1300  019A  1283               	bcf	3,5	;RP0=0, select bank0
  1301  019B  1303               	bcf	3,6	;RP1=0, select bank0
  1302  019C  130C               	bcf	12,6	;volatile
  1303  019D                     l107:
  1304  019D  0008               	return
  1305  019E                     __end_of_setup:
  1306                           
  1307                           	psect	text5
  1308  026C                     __ptext5:	
  1309 ;; *************** function _uart_config *****************
  1310 ;; Defined at:
  1311 ;;		line 18 in file "uart_config.c"
  1312 ;; Parameters:    Size  Location     Type
  1313 ;;		None
  1314 ;; Auto vars:     Size  Location     Type
  1315 ;;		None
  1316 ;; Return value:  Size  Location     Type
  1317 ;;                  1    wreg      void 
  1318 ;; Registers used:
  1319 ;;		wreg, status,2
  1320 ;; Tracked objects:
  1321 ;;		On entry : 0/0
  1322 ;;		On exit  : 0/0
  1323 ;;		Unchanged: 0/0
  1324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1325 ;;      Params:         0       0       0       0       0
  1326 ;;      Locals:         0       0       0       0       0
  1327 ;;      Temps:          0       0       0       0       0
  1328 ;;      Totals:         0       0       0       0       0
  1329 ;;Total ram usage:        0 bytes
  1330 ;; Hardware stack levels used:    1
  1331 ;; Hardware stack levels required when called:    1
  1332 ;; This function calls:
  1333 ;;		Nothing
  1334 ;; This function is called by:
  1335 ;;		_setup
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           
  1340                           ;psect for function _uart_config
  1341  026C                     _uart_config:
  1342  026C                     l817:	
  1343                           ;incstack = 0
  1344                           ; Regs used in _uart_config: [wreg+status,2]
  1345                           
  1346                           
  1347                           ;uart_config.c: 22:     TXSTAbits.SYNC = 0;
  1348  026C  1683               	bsf	3,5	;RP0=1, select bank1
  1349  026D  1303               	bcf	3,6	;RP1=0, select bank1
  1350  026E  1218               	bcf	24,4	;volatile
  1351                           
  1352                           ;uart_config.c: 23:     TXSTAbits.BRGH = 1;
  1353  026F  1518               	bsf	24,2	;volatile
  1354                           
  1355                           ;uart_config.c: 25:     BAUDCTLbits.BRG16 = 1;
  1356  0270  1683               	bsf	3,5	;RP0=1, select bank3
  1357  0271  1703               	bsf	3,6	;RP1=1, select bank3
  1358  0272  1587               	bsf	7,3	;volatile
  1359  0273                     l819:
  1360                           
  1361                           ;uart_config.c: 26:     SPBRG = 25;
  1362  0273  3019               	movlw	25
  1363  0274  1683               	bsf	3,5	;RP0=1, select bank1
  1364  0275  1303               	bcf	3,6	;RP1=0, select bank1
  1365  0276  0099               	movwf	25	;volatile
  1366  0277                     l821:
  1367                           
  1368                           ;uart_config.c: 27:     SPBRGH = 0;
  1369  0277  019A               	clrf	26	;volatile
  1370  0278                     l823:
  1371                           
  1372                           ;uart_config.c: 29:     RCSTAbits.SPEN = 1;
  1373  0278  1283               	bcf	3,5	;RP0=0, select bank0
  1374  0279  1303               	bcf	3,6	;RP1=0, select bank0
  1375  027A  1798               	bsf	24,7	;volatile
  1376  027B                     l825:
  1377                           
  1378                           ;uart_config.c: 30:     RCSTAbits.RX9 = 0;
  1379  027B  1318               	bcf	24,6	;volatile
  1380  027C                     l827:
  1381                           
  1382                           ;uart_config.c: 32:     RCSTAbits.CREN = 1;
  1383  027C  1618               	bsf	24,4	;volatile
  1384  027D                     l829:
  1385                           
  1386                           ;uart_config.c: 33:     TXSTAbits.TXEN = 1;
  1387  027D  1683               	bsf	3,5	;RP0=1, select bank1
  1388  027E  1303               	bcf	3,6	;RP1=0, select bank1
  1389  027F  1698               	bsf	24,5	;volatile
  1390  0280                     l205:
  1391  0280  0008               	return
  1392  0281                     __end_of_uart_config:
  1393                           
  1394                           	psect	text6
  1395  0281                     __ptext6:	
  1396 ;; *************** function _adc_config *****************
  1397 ;; Defined at:
  1398 ;;		line 20 in file "adc_config.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;		None
  1401 ;; Auto vars:     Size  Location     Type
  1402 ;;		None
  1403 ;; Return value:  Size  Location     Type
  1404 ;;                  1    wreg      void 
  1405 ;; Registers used:
  1406 ;;		wreg, status,2, status,0
  1407 ;; Tracked objects:
  1408 ;;		On entry : 0/0
  1409 ;;		On exit  : 0/0
  1410 ;;		Unchanged: 0/0
  1411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1412 ;;      Params:         0       0       0       0       0
  1413 ;;      Locals:         0       0       0       0       0
  1414 ;;      Temps:          1       0       0       0       0
  1415 ;;      Totals:         1       0       0       0       0
  1416 ;;Total ram usage:        1 bytes
  1417 ;; Hardware stack levels used:    1
  1418 ;; Hardware stack levels required when called:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_setup
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           
  1426                           
  1427                           ;psect for function _adc_config
  1428  0281                     _adc_config:
  1429  0281                     l807:	
  1430                           ;incstack = 0
  1431                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1432                           
  1433                           
  1434                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1435  0281  1683               	bsf	3,5	;RP0=1, select bank1
  1436  0282  1303               	bcf	3,6	;RP1=0, select bank1
  1437  0283  139F               	bcf	31,7	;volatile
  1438                           
  1439                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1440  0284  121F               	bcf	31,4	;volatile
  1441                           
  1442                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1443  0285  129F               	bcf	31,5	;volatile
  1444  0286                     l809:
  1445                           
  1446                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1447  0286  1283               	bcf	3,5	;RP0=0, select bank0
  1448  0287  1303               	bcf	3,6	;RP1=0, select bank0
  1449  0288  081F               	movf	31,w	;volatile
  1450  0289  393F               	andlw	-193
  1451  028A  3840               	iorlw	64
  1452  028B  009F               	movwf	31	;volatile
  1453                           
  1454                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1455  028C  30C3               	movlw	-61
  1456  028D  059F               	andwf	31,f	;volatile
  1457  028E                     l811:
  1458                           
  1459                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1460  028E  3021               	movlw	33
  1461  028F  00F2               	movwf	??_adc_config
  1462  0290                     u347:
  1463  0290  0BF2               	decfsz	??_adc_config,f
  1464  0291  2A90               	goto	u347
  1465  0292                     l813:
  1466                           
  1467                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1468  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1469  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1470  0294  141F               	bsf	31,0	;volatile
  1471  0295                     l153:
  1472  0295  0008               	return
  1473  0296                     __end_of_adc_config:
  1474                           
  1475                           	psect	text7
  1476  0222                     __ptext7:	
  1477 ;; *************** function _recepcion_uart *****************
  1478 ;; Defined at:
  1479 ;;		line 198 in file "main_lab2.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;		None
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;		None
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         0       0       0       0       0
  1495 ;;      Temps:          2       0       0       0       0
  1496 ;;      Totals:         2       0       0       0       0
  1497 ;;Total ram usage:        2 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_main
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           
  1508                           ;psect for function _recepcion_uart
  1509  0222                     _recepcion_uart:
  1510  0222                     l1021:	
  1511                           ;incstack = 0
  1512                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  1513                           
  1514                           
  1515                           ;main_lab2.c: 200:     switch(dato_recibido)
  1516  0222  2A2D               	goto	l1031
  1517  0223                     l1023:
  1518                           
  1519                           ;main_lab2.c: 203:             cuenta_uart++;
  1520  0223  3001               	movlw	1
  1521  0224  00F2               	movwf	??_recepcion_uart
  1522  0225  0872               	movf	??_recepcion_uart,w
  1523  0226  07F8               	addwf	_cuenta_uart,f
  1524                           
  1525                           ;main_lab2.c: 204:             break;
  1526  0227  2A3D               	goto	l123
  1527  0228                     l1025:
  1528                           
  1529                           ;main_lab2.c: 207:             cuenta_uart--;
  1530  0228  3001               	movlw	1
  1531  0229  02F8               	subwf	_cuenta_uart,f
  1532                           
  1533                           ;main_lab2.c: 208:             break;
  1534  022A  2A3D               	goto	l123
  1535  022B                     l1027:
  1536                           
  1537                           ;main_lab2.c: 211:             cuenta_uart=0;
  1538  022B  01F8               	clrf	_cuenta_uart
  1539                           
  1540                           ;main_lab2.c: 212:             break;
  1541  022C  2A3D               	goto	l123
  1542  022D                     l1031:
  1543  022D  0879               	movf	_dato_recibido,w
  1544  022E  00F2               	movwf	??_recepcion_uart
  1545  022F  01F3               	clrf	??_recepcion_uart+1
  1546                           
  1547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1548                           ; Switch size 1, requested type "simple"
  1549                           ; Number of cases is 1, Range of values is 0 to 0
  1550                           ; switch strategies available:
  1551                           ; Name         Instructions Cycles
  1552                           ; simple_byte            4     3 (average)
  1553                           ; direct_byte           11     8 (fixed)
  1554                           ; jumptable            260     6 (fixed)
  1555                           ;	Chosen strategy is simple_byte
  1556  0230  0873               	movf	??_recepcion_uart+1,w
  1557  0231  3A00               	xorlw	0	; case 0
  1558  0232  1903               	skipnz
  1559  0233  2A35               	goto	l1503
  1560  0234  2A2B               	goto	l1027
  1561  0235                     l1503:
  1562                           
  1563                           ; Switch size 1, requested type "simple"
  1564                           ; Number of cases is 2, Range of values is 1 to 2
  1565                           ; switch strategies available:
  1566                           ; Name         Instructions Cycles
  1567                           ; simple_byte            7     4 (average)
  1568                           ; direct_byte           17    11 (fixed)
  1569                           ; jumptable            263     9 (fixed)
  1570                           ;	Chosen strategy is simple_byte
  1571  0235  0872               	movf	??_recepcion_uart,w
  1572  0236  3A01               	xorlw	1	; case 1
  1573  0237  1903               	skipnz
  1574  0238  2A23               	goto	l1023
  1575  0239  3A03               	xorlw	3	; case 2
  1576  023A  1903               	skipnz
  1577  023B  2A28               	goto	l1025
  1578  023C  2A2B               	goto	l1027
  1579  023D                     l123:
  1580  023D  0008               	return
  1581  023E                     __end_of_recepcion_uart:
  1582                           
  1583                           	psect	text8
  1584  019E                     __ptext8:	
  1585 ;; *************** function _lcd_linea *****************
  1586 ;; Defined at:
  1587 ;;		line 67 in file "LCD.c"
  1588 ;; Parameters:    Size  Location     Type
  1589 ;;  a               1    wreg     unsigned char 
  1590 ;;  b               1    5[COMMON] unsigned char 
  1591 ;; Auto vars:     Size  Location     Type
  1592 ;;  a               1    0[BANK0 ] unsigned char 
  1593 ;;  z               1    2[BANK0 ] unsigned char 
  1594 ;;  temp            1    1[BANK0 ] unsigned char 
  1595 ;; Return value:  Size  Location     Type
  1596 ;;                  1    wreg      void 
  1597 ;; Registers used:
  1598 ;;		wreg, status,2, status,0, pclath, cstack
  1599 ;; Tracked objects:
  1600 ;;		On entry : 0/0
  1601 ;;		On exit  : 0/0
  1602 ;;		Unchanged: 0/0
  1603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1604 ;;      Params:         1       0       0       0       0
  1605 ;;      Locals:         0       3       0       0       0
  1606 ;;      Temps:          1       0       0       0       0
  1607 ;;      Totals:         2       3       0       0       0
  1608 ;;Total ram usage:        5 bytes
  1609 ;; Hardware stack levels used:    1
  1610 ;; Hardware stack levels required when called:    2
  1611 ;; This function calls:
  1612 ;;		_cmd
  1613 ;; This function is called by:
  1614 ;;		_main
  1615 ;; This function uses a non-reentrant model
  1616 ;;
  1617                           
  1618                           
  1619                           ;psect for function _lcd_linea
  1620  019E                     _lcd_linea:
  1621                           
  1622                           ;incstack = 0
  1623                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1624                           ;lcd_linea@a stored from wreg
  1625  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1626  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1627  01A0  00A0               	movwf	lcd_linea@a
  1628  01A1                     l1407:
  1629                           
  1630                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1631  01A1  0320               	decf	lcd_linea@a,w
  1632  01A2  1D03               	btfss	3,2
  1633  01A3  29A5               	goto	u281
  1634  01A4  29A6               	goto	u280
  1635  01A5                     u281:
  1636  01A5  29B6               	goto	l1415
  1637  01A6                     u280:
  1638  01A6                     l1409:
  1639                           
  1640                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1641  01A6  0875               	movf	lcd_linea@b,w
  1642  01A7  3E7F               	addlw	127
  1643  01A8  00F6               	movwf	??_lcd_linea
  1644  01A9  0876               	movf	??_lcd_linea,w
  1645  01AA  00A1               	movwf	lcd_linea@temp
  1646  01AB                     l1411:
  1647                           
  1648                           ;LCD.c: 71:         z = temp;
  1649  01AB  0821               	movf	lcd_linea@temp,w
  1650  01AC  00F6               	movwf	??_lcd_linea
  1651  01AD  0876               	movf	??_lcd_linea,w
  1652  01AE  00A2               	movwf	lcd_linea@z
  1653  01AF                     l1413:
  1654                           
  1655                           ;LCD.c: 72:         cmd(z);
  1656  01AF  0822               	movf	lcd_linea@z,w
  1657  01B0  120A  118A  2296  120A  118A  	fcall	_cmd
  1658                           
  1659                           ;LCD.c: 74:     } else if (a == 2) {
  1660  01B5  29CB               	goto	l186
  1661  01B6                     l1415:
  1662  01B6  3002               	movlw	2
  1663  01B7  0620               	xorwf	lcd_linea@a,w
  1664  01B8  1D03               	btfss	3,2
  1665  01B9  29BB               	goto	u291
  1666  01BA  29BC               	goto	u290
  1667  01BB                     u291:
  1668  01BB  29CB               	goto	l186
  1669  01BC                     u290:
  1670  01BC                     l1417:
  1671                           
  1672                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1673  01BC  0875               	movf	lcd_linea@b,w
  1674  01BD  3EBF               	addlw	191
  1675  01BE  00F6               	movwf	??_lcd_linea
  1676  01BF  0876               	movf	??_lcd_linea,w
  1677  01C0  00A1               	movwf	lcd_linea@temp
  1678  01C1                     l1419:
  1679                           
  1680                           ;LCD.c: 76:         z = temp;
  1681  01C1  0821               	movf	lcd_linea@temp,w
  1682  01C2  00F6               	movwf	??_lcd_linea
  1683  01C3  0876               	movf	??_lcd_linea,w
  1684  01C4  00A2               	movwf	lcd_linea@z
  1685  01C5                     l1421:
  1686                           
  1687                           ;LCD.c: 77:         cmd(z);
  1688  01C5  0822               	movf	lcd_linea@z,w
  1689  01C6  120A  118A  2296  120A  118A  	fcall	_cmd
  1690  01CB                     l186:
  1691  01CB  0008               	return
  1692  01CC                     __end_of_lcd_linea:
  1693                           
  1694                           	psect	text9
  1695  023E                     __ptext9:	
  1696 ;; *************** function _lcd_init *****************
  1697 ;; Defined at:
  1698 ;;		line 28 in file "LCD.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, status,0, pclath, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1712 ;;      Params:         0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0
  1714 ;;      Temps:          0       0       0       0       0
  1715 ;;      Totals:         0       0       0       0       0
  1716 ;;Total ram usage:        0 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    2
  1719 ;; This function calls:
  1720 ;;		_cmd
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           
  1727                           ;psect for function _lcd_init
  1728  023E                     _lcd_init:
  1729  023E                     l1405:	
  1730                           ;incstack = 0
  1731                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1732                           
  1733                           
  1734                           ;LCD.c: 30:  cmd(0x38);
  1735  023E  3038               	movlw	56
  1736  023F  120A  118A  2296  120A  118A  	fcall	_cmd
  1737                           
  1738                           ;LCD.c: 31:  cmd(0x0c);
  1739  0244  300C               	movlw	12
  1740  0245  120A  118A  2296  120A  118A  	fcall	_cmd
  1741                           
  1742                           ;LCD.c: 32:  cmd(0x06);
  1743  024A  3006               	movlw	6
  1744  024B  120A  118A  2296  120A  118A  	fcall	_cmd
  1745                           
  1746                           ;LCD.c: 33:  cmd(0x80);
  1747  0250  3080               	movlw	128
  1748  0251  120A  118A  2296  120A  118A  	fcall	_cmd
  1749  0256                     l168:
  1750  0256  0008               	return
  1751  0257                     __end_of_lcd_init:
  1752                           
  1753                           	psect	text10
  1754  0296                     __ptext10:	
  1755 ;; *************** function _cmd *****************
  1756 ;; Defined at:
  1757 ;;		line 37 in file "LCD.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  a               1    wreg     unsigned char 
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;  a               1    4[COMMON] unsigned char 
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1771 ;;      Params:         0       0       0       0       0
  1772 ;;      Locals:         1       0       0       0       0
  1773 ;;      Temps:          2       0       0       0       0
  1774 ;;      Totals:         3       0       0       0       0
  1775 ;;Total ram usage:        3 bytes
  1776 ;; Hardware stack levels used:    1
  1777 ;; Hardware stack levels required when called:    1
  1778 ;; This function calls:
  1779 ;;		Nothing
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;;		_lcd_init
  1783 ;;		_lcd_linea
  1784 ;;		_lcd_mov_derecha
  1785 ;;		_lcd_mov_izquierda
  1786 ;; This function uses a non-reentrant model
  1787 ;;
  1788                           
  1789                           
  1790                           ;psect for function _cmd
  1791  0296                     _cmd:
  1792                           
  1793                           ;incstack = 0
  1794                           ; Regs used in _cmd: [wreg]
  1795                           ;cmd@a stored from wreg
  1796  0296  00F4               	movwf	cmd@a
  1797  0297                     l1395:
  1798                           
  1799                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1800  0297  0874               	movf	cmd@a,w
  1801  0298  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0299  1303               	bcf	3,6	;RP1=0, select bank0
  1803  029A  0086               	movwf	6	;volatile
  1804  029B                     l1397:
  1805                           
  1806                           ;LCD.c: 40:  RC0=0;
  1807  029B  1007               	bcf	7,0	;volatile
  1808  029C                     l1399:
  1809                           
  1810                           ;LCD.c: 41:  RC1=0;
  1811  029C  1087               	bcf	7,1	;volatile
  1812  029D                     l1401:
  1813                           
  1814                           ;LCD.c: 42:  PORTCbits.RC2=1;
  1815  029D  1507               	bsf	7,2	;volatile
  1816                           
  1817                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1818  029E  3003               	movlw	3
  1819  029F  00F3               	movwf	??_cmd+1
  1820  02A0  3097               	movlw	151
  1821  02A1  00F2               	movwf	??_cmd
  1822  02A2                     u357:
  1823  02A2  0BF2               	decfsz	??_cmd,f
  1824  02A3  2AA2               	goto	u357
  1825  02A4  0BF3               	decfsz	??_cmd+1,f
  1826  02A5  2AA2               	goto	u357
  1827  02A6  2AA7               	nop2
  1828  02A7                     l1403:
  1829                           
  1830                           ;LCD.c: 44:  PORTCbits.RC2=0;
  1831  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1832  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1833  02A9  1107               	bcf	7,2	;volatile
  1834  02AA                     l171:
  1835  02AA  0008               	return
  1836  02AB                     __end_of_cmd:
  1837                           
  1838                           	psect	text11
  1839  0025                     __ptext11:	
  1840 ;; *************** function _lcd_ascii *****************
  1841 ;; Defined at:
  1842 ;;		line 281 in file "main_lab2.c"
  1843 ;; Parameters:    Size  Location     Type
  1844 ;;		None
  1845 ;; Auto vars:     Size  Location     Type
  1846 ;;  random         16    0[BANK0 ] unsigned char [16]
  1847 ;; Return value:  Size  Location     Type
  1848 ;;                  1    wreg      PTR unsigned char 
  1849 ;; Registers used:
  1850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1851 ;; Tracked objects:
  1852 ;;		On entry : 0/0
  1853 ;;		On exit  : 0/0
  1854 ;;		Unchanged: 0/0
  1855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1856 ;;      Params:         0       0       0       0       0
  1857 ;;      Locals:         0      16       0       0       0
  1858 ;;      Temps:          1       0       0       0       0
  1859 ;;      Totals:         1      16       0       0       0
  1860 ;;Total ram usage:       17 bytes
  1861 ;; Hardware stack levels used:    1
  1862 ;; Hardware stack levels required when called:    2
  1863 ;; This function calls:
  1864 ;;		_datos_ascii
  1865 ;; This function is called by:
  1866 ;;		_main
  1867 ;; This function uses a non-reentrant model
  1868 ;;
  1869                           
  1870                           
  1871                           ;psect for function _lcd_ascii
  1872  0025                     _lcd_ascii:
  1873  0025                     l1217:	
  1874                           ;incstack = 0
  1875                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1876                           
  1877                           
  1878                           ;main_lab2.c: 283:     char random[16];;main_lab2.c: 284:     random[0]=datos_ascii(cent
      +                          enas1);
  1879  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0027  083B               	movf	_centenas1,w
  1882  0028  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1883  002D  00F5               	movwf	??_lcd_ascii
  1884  002E  0875               	movf	??_lcd_ascii,w
  1885  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1886  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1887  0031  00A0               	movwf	lcd_ascii@random
  1888                           
  1889                           ;main_lab2.c: 285:     random[1]=datos_ascii(decenas1);
  1890  0032  083A               	movf	_decenas1,w
  1891  0033  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1892  0038  00F5               	movwf	??_lcd_ascii
  1893  0039  0875               	movf	??_lcd_ascii,w
  1894  003A  1283               	bcf	3,5	;RP0=0, select bank0
  1895  003B  1303               	bcf	3,6	;RP1=0, select bank0
  1896  003C  00A1               	movwf	lcd_ascii@random+1
  1897                           
  1898                           ;main_lab2.c: 286:     random[2]=datos_ascii(unidades1);
  1899  003D  0839               	movf	_unidades1,w
  1900  003E  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1901  0043  00F5               	movwf	??_lcd_ascii
  1902  0044  0875               	movf	??_lcd_ascii,w
  1903  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1904  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1905  0047  00A2               	movwf	lcd_ascii@random+2
  1906  0048                     l1219:
  1907                           
  1908                           ;main_lab2.c: 287:     random[3]=32;
  1909  0048  3020               	movlw	32
  1910  0049  00F5               	movwf	??_lcd_ascii
  1911  004A  0875               	movf	??_lcd_ascii,w
  1912  004B  00A3               	movwf	lcd_ascii@random+3
  1913  004C                     l1221:
  1914                           
  1915                           ;main_lab2.c: 288:     random[4]=32;
  1916  004C  3020               	movlw	32
  1917  004D  00F5               	movwf	??_lcd_ascii
  1918  004E  0875               	movf	??_lcd_ascii,w
  1919  004F  00A4               	movwf	lcd_ascii@random+4
  1920                           
  1921                           ;main_lab2.c: 289:     random[5]=datos_ascii(centenas2);
  1922  0050  3000               	movlw	0
  1923  0051  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1924  0056  00F5               	movwf	??_lcd_ascii
  1925  0057  0875               	movf	??_lcd_ascii,w
  1926  0058  1283               	bcf	3,5	;RP0=0, select bank0
  1927  0059  1303               	bcf	3,6	;RP1=0, select bank0
  1928  005A  00A5               	movwf	lcd_ascii@random+5
  1929                           
  1930                           ;main_lab2.c: 290:     random[6]=datos_ascii(decenas2);
  1931  005B  3000               	movlw	0
  1932  005C  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1933  0061  00F5               	movwf	??_lcd_ascii
  1934  0062  0875               	movf	??_lcd_ascii,w
  1935  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1936  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1937  0065  00A6               	movwf	lcd_ascii@random+6
  1938                           
  1939                           ;main_lab2.c: 291:     random[7]=datos_ascii(unidades2);
  1940  0066  3000               	movlw	0
  1941  0067  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1942  006C  00F5               	movwf	??_lcd_ascii
  1943  006D  0875               	movf	??_lcd_ascii,w
  1944  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1945  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0070  00A7               	movwf	lcd_ascii@random+7
  1947  0071                     l1223:
  1948                           
  1949                           ;main_lab2.c: 292:     random[8]=32;
  1950  0071  3020               	movlw	32
  1951  0072  00F5               	movwf	??_lcd_ascii
  1952  0073  0875               	movf	??_lcd_ascii,w
  1953  0074  00A8               	movwf	lcd_ascii@random+8
  1954  0075                     l1225:
  1955                           
  1956                           ;main_lab2.c: 293:     random[9]=32;
  1957  0075  3020               	movlw	32
  1958  0076  00F5               	movwf	??_lcd_ascii
  1959  0077  0875               	movf	??_lcd_ascii,w
  1960  0078  00A9               	movwf	lcd_ascii@random+9
  1961                           
  1962                           ;main_lab2.c: 294:     random[10]=datos_ascii(centenas3);
  1963  0079  3000               	movlw	0
  1964  007A  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1965  007F  00F5               	movwf	??_lcd_ascii
  1966  0080  0875               	movf	??_lcd_ascii,w
  1967  0081  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0082  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0083  00AA               	movwf	lcd_ascii@random+10
  1970                           
  1971                           ;main_lab2.c: 295:     random[11]=datos_ascii(decenas3);
  1972  0084  3000               	movlw	0
  1973  0085  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1974  008A  00F5               	movwf	??_lcd_ascii
  1975  008B  0875               	movf	??_lcd_ascii,w
  1976  008C  1283               	bcf	3,5	;RP0=0, select bank0
  1977  008D  1303               	bcf	3,6	;RP1=0, select bank0
  1978  008E  00AB               	movwf	lcd_ascii@random+11
  1979                           
  1980                           ;main_lab2.c: 296:     random[12]=datos_ascii(unidades3);
  1981  008F  3000               	movlw	0
  1982  0090  120A  118A  2133  120A  118A  	fcall	_datos_ascii
  1983  0095  00F5               	movwf	??_lcd_ascii
  1984  0096  0875               	movf	??_lcd_ascii,w
  1985  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0099  00AC               	movwf	lcd_ascii@random+12
  1988  009A                     l1227:
  1989                           
  1990                           ;main_lab2.c: 297:     random[13]=32;
  1991  009A  3020               	movlw	32
  1992  009B  00F5               	movwf	??_lcd_ascii
  1993  009C  0875               	movf	??_lcd_ascii,w
  1994  009D  00AD               	movwf	lcd_ascii@random+13
  1995  009E                     l1229:
  1996                           
  1997                           ;main_lab2.c: 298:     random[14]=32;
  1998  009E  3020               	movlw	32
  1999  009F  00F5               	movwf	??_lcd_ascii
  2000  00A0  0875               	movf	??_lcd_ascii,w
  2001  00A1  00AE               	movwf	lcd_ascii@random+14
  2002  00A2                     l1231:
  2003                           
  2004                           ;main_lab2.c: 299:     random[15]=32;
  2005  00A2  3020               	movlw	32
  2006  00A3  00F5               	movwf	??_lcd_ascii
  2007  00A4  0875               	movf	??_lcd_ascii,w
  2008  00A5  00AF               	movwf	lcd_ascii@random+15
  2009  00A6                     l1233:
  2010                           
  2011                           ;main_lab2.c: 300:     return random;
  2012  00A6  3020               	movlw	(low (lcd_ascii@random| 0))& (0+255)
  2013  00A7                     l144:
  2014  00A7  0008               	return
  2015  00A8                     __end_of_lcd_ascii:
  2016                           
  2017                           	psect	text12
  2018  0133                     __ptext12:	
  2019 ;; *************** function _datos_ascii *****************
  2020 ;; Defined at:
  2021 ;;		line 217 in file "main_lab2.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;  numero          1    wreg     unsigned char 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  numero          1    4[COMMON] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;                  1    wreg      unsigned char 
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2035 ;;      Params:         0       0       0       0       0
  2036 ;;      Locals:         1       0       0       0       0
  2037 ;;      Temps:          2       0       0       0       0
  2038 ;;      Totals:         3       0       0       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		Nothing
  2044 ;; This function is called by:
  2045 ;;		_lcd_ascii
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _datos_ascii
  2051  0133                     _datos_ascii:
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2055                           ;datos_ascii@numero stored from wreg
  2056  0133  00F4               	movwf	datos_ascii@numero
  2057  0134                     l1123:
  2058                           
  2059                           ;main_lab2.c: 217: char datos_ascii(uint8_t numero);main_lab2.c: 218: {;main_lab2.c: 219
      +                          :     switch(numero)
  2060  0134  2949               	goto	l1187
  2061  0135                     l1125:
  2062                           
  2063                           ;main_lab2.c: 222:             return 48;
  2064  0135  3030               	movlw	48
  2065  0136  296E               	goto	l128
  2066  0137                     l1131:
  2067                           
  2068                           ;main_lab2.c: 226:             return 49;
  2069  0137  3031               	movlw	49
  2070  0138  296E               	goto	l128
  2071  0139                     l1137:
  2072                           
  2073                           ;main_lab2.c: 230:             return 50;
  2074  0139  3032               	movlw	50
  2075  013A  296E               	goto	l128
  2076  013B                     l1143:
  2077                           
  2078                           ;main_lab2.c: 234:             return 51;
  2079  013B  3033               	movlw	51
  2080  013C  296E               	goto	l128
  2081  013D                     l1149:
  2082                           
  2083                           ;main_lab2.c: 238:             return 52;
  2084  013D  3034               	movlw	52
  2085  013E  296E               	goto	l128
  2086  013F                     l1155:
  2087                           
  2088                           ;main_lab2.c: 242:             return 53;
  2089  013F  3035               	movlw	53
  2090  0140  296E               	goto	l128
  2091  0141                     l1161:
  2092                           
  2093                           ;main_lab2.c: 246:             return 54;
  2094  0141  3036               	movlw	54
  2095  0142  296E               	goto	l128
  2096  0143                     l1167:
  2097                           
  2098                           ;main_lab2.c: 250:             return 55;
  2099  0143  3037               	movlw	55
  2100  0144  296E               	goto	l128
  2101  0145                     l1173:
  2102                           
  2103                           ;main_lab2.c: 254:             return 56;
  2104  0145  3038               	movlw	56
  2105  0146  296E               	goto	l128
  2106  0147                     l1179:
  2107                           
  2108                           ;main_lab2.c: 258:             return 57;
  2109  0147  3039               	movlw	57
  2110  0148  296E               	goto	l128
  2111  0149                     l1187:
  2112  0149  0874               	movf	datos_ascii@numero,w
  2113  014A  00F2               	movwf	??_datos_ascii
  2114  014B  01F3               	clrf	??_datos_ascii+1
  2115                           
  2116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2117                           ; Switch size 1, requested type "simple"
  2118                           ; Number of cases is 1, Range of values is 0 to 0
  2119                           ; switch strategies available:
  2120                           ; Name         Instructions Cycles
  2121                           ; simple_byte            4     3 (average)
  2122                           ; direct_byte           11     8 (fixed)
  2123                           ; jumptable            260     6 (fixed)
  2124                           ;	Chosen strategy is simple_byte
  2125  014C  0873               	movf	??_datos_ascii+1,w
  2126  014D  3A00               	xorlw	0	; case 0
  2127  014E  1903               	skipnz
  2128  014F  2951               	goto	l1505
  2129  0150  2935               	goto	l1125
  2130  0151                     l1505:
  2131                           
  2132                           ; Switch size 1, requested type "simple"
  2133                           ; Number of cases is 9, Range of values is 1 to 9
  2134                           ; switch strategies available:
  2135                           ; Name         Instructions Cycles
  2136                           ; simple_byte           28    15 (average)
  2137                           ; direct_byte           38    11 (fixed)
  2138                           ; jumptable            263     9 (fixed)
  2139                           ;	Chosen strategy is simple_byte
  2140  0151  0872               	movf	??_datos_ascii,w
  2141  0152  3A01               	xorlw	1	; case 1
  2142  0153  1903               	skipnz
  2143  0154  2937               	goto	l1131
  2144  0155  3A03               	xorlw	3	; case 2
  2145  0156  1903               	skipnz
  2146  0157  2939               	goto	l1137
  2147  0158  3A01               	xorlw	1	; case 3
  2148  0159  1903               	skipnz
  2149  015A  293B               	goto	l1143
  2150  015B  3A07               	xorlw	7	; case 4
  2151  015C  1903               	skipnz
  2152  015D  293D               	goto	l1149
  2153  015E  3A01               	xorlw	1	; case 5
  2154  015F  1903               	skipnz
  2155  0160  293F               	goto	l1155
  2156  0161  3A03               	xorlw	3	; case 6
  2157  0162  1903               	skipnz
  2158  0163  2941               	goto	l1161
  2159  0164  3A01               	xorlw	1	; case 7
  2160  0165  1903               	skipnz
  2161  0166  2943               	goto	l1167
  2162  0167  3A0F               	xorlw	15	; case 8
  2163  0168  1903               	skipnz
  2164  0169  2945               	goto	l1173
  2165  016A  3A01               	xorlw	1	; case 9
  2166  016B  1903               	skipnz
  2167  016C  2947               	goto	l1179
  2168  016D  2935               	goto	l1125
  2169  016E                     l128:
  2170  016E  0008               	return
  2171  016F                     __end_of_datos_ascii:
  2172                           
  2173                           	psect	text13
  2174  02AB                     __ptext13:	
  2175 ;; *************** function _isr *****************
  2176 ;; Defined at:
  2177 ;;		line 82 in file "main_lab2.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;		None
  2180 ;; Auto vars:     Size  Location     Type
  2181 ;;		None
  2182 ;; Return value:  Size  Location     Type
  2183 ;;                  1    wreg      void 
  2184 ;; Registers used:
  2185 ;;		wreg
  2186 ;; Tracked objects:
  2187 ;;		On entry : 0/0
  2188 ;;		On exit  : 0/0
  2189 ;;		Unchanged: 0/0
  2190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2191 ;;      Params:         0       0       0       0       0
  2192 ;;      Locals:         0       0       0       0       0
  2193 ;;      Temps:          2       0       0       0       0
  2194 ;;      Totals:         2       0       0       0       0
  2195 ;;Total ram usage:        2 bytes
  2196 ;; Hardware stack levels used:    1
  2197 ;; This function calls:
  2198 ;;		Nothing
  2199 ;; This function is called by:
  2200 ;;		Interrupt level 1
  2201 ;; This function uses a non-reentrant model
  2202 ;;
  2203                           
  2204                           
  2205                           ;psect for function _isr
  2206  02AB                     _isr:
  2207  02AB                     i1l1037:
  2208                           
  2209                           ;main_lab2.c: 85:      if(PIR1bits.RCIF)
  2210  02AB  1283               	bcf	3,5	;RP0=0, select bank0
  2211  02AC  1303               	bcf	3,6	;RP1=0, select bank0
  2212  02AD  1E8C               	btfss	12,5	;volatile
  2213  02AE  2AB0               	goto	u5_21
  2214  02AF  2AB1               	goto	u5_20
  2215  02B0                     u5_21:
  2216  02B0  2AB4               	goto	i1l96
  2217  02B1                     u5_20:
  2218  02B1                     i1l1039:
  2219                           
  2220                           ;main_lab2.c: 86:     {;main_lab2.c: 87:         RCREG=dato_recibido;
  2221  02B1  0879               	movf	_dato_recibido,w
  2222  02B2  009A               	movwf	26	;volatile
  2223  02B3                     i1l1041:
  2224                           
  2225                           ;main_lab2.c: 88:         PIR1bits.RCIF=0;
  2226  02B3  128C               	bcf	12,5	;volatile
  2227  02B4                     i1l96:
  2228  02B4  0871               	movf	??_isr+1,w
  2229  02B5  008A               	movwf	10
  2230  02B6  0E70               	swapf	??_isr,w
  2231  02B7  0083               	movwf	3
  2232  02B8  0EFE               	swapf	btemp,f
  2233  02B9  0E7E               	swapf	btemp,w
  2234  02BA  0009               	retfie
  2235  02BB                     __end_of_isr:
  2236  007E                     btemp	set	126	;btemp
  2237  007E                     wtemp0	set	126
  2238                           
  2239                           	psect	intentry
  2240  0004                     __pintentry:	
  2241                           ;incstack = 0
  2242                           ; Regs used in _isr: [wreg]
  2243                           
  2244  0004                     interrupt_function:
  2245  007E                     saved_w	set	btemp
  2246  0004  00FE               	movwf	btemp
  2247  0005  0E03               	swapf	3,w
  2248  0006  00F0               	movwf	??_isr
  2249  0007  080A               	movf	10,w
  2250  0008  00F1               	movwf	??_isr+1
  2251  0009  120A  118A  2AAB   	ljmp	_isr
  2252                           
  2253                           	psect	config
  2254                           
  2255                           ;Config register CONFIG1 @ 0x2007
  2256                           ;	Oscillator Selection bits
  2257                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2258                           ;	Watchdog Timer Enable bit
  2259                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2260                           ;	Power-up Timer Enable bit
  2261                           ;	PWRTE = OFF, PWRT disabled
  2262                           ;	RE3/MCLR pin function select bit
  2263                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2264                           ;	Code Protection bit
  2265                           ;	CP = OFF, Program memory code protection is disabled
  2266                           ;	Data Code Protection bit
  2267                           ;	CPD = OFF, Data memory code protection is disabled
  2268                           ;	Brown Out Reset Selection bits
  2269                           ;	BOREN = OFF, BOR disabled
  2270                           ;	Internal External Switchover bit
  2271                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2272                           ;	Fail-Safe Clock Monitor Enabled bit
  2273                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2274                           ;	Low Voltage Programming Enable bit
  2275                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2276                           ;	In-Circuit Debugger Mode bit
  2277                           ;	DEBUG = 0x1, unprogrammed default
  2278  2007                     	org	8199
  2279  2007  20D4               	dw	8404
  2280                           
  2281                           ;Config register CONFIG2 @ 0x2008
  2282                           ;	Brown-out Reset Selection bit
  2283                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2284                           ;	Flash Program Memory Self Write Enable bits
  2285                           ;	WRT = OFF, Write protection off
  2286  2008                     	org	8200
  2287  2008  3FFF               	dw	16383

Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      12
    BANK0            80     16      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 18
		 -> lcd_ascii@random(BANK0[16]), STR_1(CODE[18]), 

    sp__lcd_ascii	PTR unsigned char  size(1) Largest target is 16
		 -> lcd_ascii@random(BANK0[16]), 


Critical Paths under _main in COMMON

    _main->_show
    _show->_lcd_ascii
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_ascii->_datos_ascii

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_ascii
    _show->_lcd_ascii

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1125
                                _cmd
                          _lcd_ascii
                           _lcd_init
                          _lcd_linea
                     _recepcion_uart
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     212
                                              6 COMMON     2     0      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recepcion_uart                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     462
                                              5 COMMON     2     1      1
                                              0 BANK0      3     3      0
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           17    17      0     407
                                              5 COMMON     1     1      0
                                              0 BANK0     16    16      0
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     _datos_ascii
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _recepcion_uart
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      28       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     10      1C       5       35.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      28      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Mon Jul 26 17:28:55 2021

                      pc 0002                       u40 00F8                       u41 00F7  
                     u80 01F1                       u81 01F0          ?_recepcion_uart 0070  
                     fsr 0004                      l101 00B8                      l123 023D  
                    l107 019D                      l115 0132                      l205 0280  
                    l128 016E                      l144 00A7                      l153 0295  
                    l171 02AA                      l180 01F1                      l174 026B  
                    l168 0256                      l186 01CB                      l811 028E  
                    l813 0292                      l821 0277                      l807 0281  
                    l823 0278                      l911 0268                      l903 0258  
                    l809 0286                      l825 027B                      l817 026C  
                    l921 0179                      l913 016F                      l905 025C  
                    l827 027C                      l819 0273                      l931 018D  
                    l923 017A                      l915 0173                      l907 025D  
                    l829 027D                      l941 0196                      l933 0192  
                    l925 0183                      l917 0174                      l909 025E  
                    l943 0197                      l935 0193                      l927 0187  
                    l919 0178                      l945 019A                      l937 0194  
                    l929 0188                      l939 0195                      l995 00F2  
                    l999 00F9                      _RC0 0038                      _RC1 0039  
                    u307 00FF                      u317 010F                      u327 012C  
                    u280 01A6                      u281 01A5                      u337 0263  
                    u290 01BC                      u291 01BB                      u347 0290  
                    u357 02A2                      _dat 0257                      _cmd 0296  
                    _isr 02AB                      fsr0 0004                      indf 0000  
                   l1001 0102                     l1003 0109                     l1011 012A  
                   l1021 0222                     l1013 012F                     l1005 0112  
                   l1023 0223                     l1031 022D                     l1025 0228  
                   l1009 0117                     l1131 0137                     l1123 0134  
                   l1027 022B                     l1211 01CD                     l1125 0135  
                   l1221 004C                     l1213 01DB                     l1143 013B  
                   l1231 00A2                     l1223 0071                     l1215 01E1  
                   l1161 0141                     l1137 0139                     l1233 00A6  
                   l1225 0075                     l1217 0025                     l1401 029D  
                   l1209 01CC                     l1155 013F                     l1227 009A  
                   l1219 0048                     l1403 02A7                     l1411 01AB  
                   l1173 0145                     l1149 013D                     l1229 009E  
                   l1405 023E                     l1421 01C5                     l1413 01AF  
                   l1501 0122                     ?_dat 0070                     l1167 0143  
                   l1415 01B6                     l1407 01A1                     l1503 0235  
                   l1431 00E3                     l1423 00A8                     l1505 0151  
                   l1417 01BC                     l1409 01A6                     l1433 00E8  
                   l1425 00C0                     ?_cmd 0070                     l1179 0147  
                   l1187 0149                     l1419 01C1                     l1435 00EC  
                   l1427 00C9                     l1429 00DE                     l1395 0297  
                   l1397 029B                     l1399 029C                     ?_isr 0070  
                   STR_1 0210                     i1l96 02B4                     u5_20 02B1  
                   u5_21 02B0                     dat@b 0074                     cmd@a 0074  
                   _main 00A8                     _show 01CC                     btemp 007E  
                   start 000C                    ??_dat 0072                    ??_cmd 0072  
                  ??_isr 0070                    ?_main 0070                    ?_show 0076  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISD 0088  
                  _TRISE 0089                    _suma1 0032                    _suma2 0031  
                  _suma3 0030                    _setup 016F                    pclath 000A  
                  show@s 0076            lcd_linea@temp 0021                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00F2  
           __end_of_show 01F2                   ??_main 0078                   ??_show 0078  
   __size_of_datos_ascii 003C                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189                   i1l1041 02B3                   i1l1037 02AB  
                 i1l1039 02B1                   _SPBRGH 009A         __end_of_lcd_init 0257  
        lcd_ascii@random 0020             ?_uart_config 0070                   saved_w 007E  
__end_of__initialization 0021         ??_recepcion_uart 0072           __pcstackCOMMON 0070  
             _adc_config 0281            __end_of_setup 019E       __size_of_lcd_ascii 0083  
     __size_of_lcd_linea 002E                  ??_setup 0073               __pbssBANK0 0030  
             __pmaintext 00A8               __pintentry 0004                ?_lcd_init 0070  
             __stringtab 0200        __end_of_lcd_ascii 00A8        __end_of_lcd_linea 01CC  
            ?_adc_config 0070                _ANSELbits 0188                  __ptext1 00F2  
                __ptext2 01CC                  __ptext3 0257                  __ptext4 016F  
                __ptext5 026C                  __ptext6 0281                  __ptext7 0222  
                __ptext8 019E                  __ptext9 023E             __size_of_dat 0015  
           __size_of_cmd 0015             __size_of_isr 0010     __size_of_uart_config 0015  
             ??_lcd_init 0075     end_of_initialization 0021                _RCSTAbits 0018  
          ??_datos_ascii 0072                _PORTCbits 0007               _toggle_adc 00F2  
              _TRISCbits 0087      __size_of_adc_config 0015               lcd_linea@a 0020  
             lcd_linea@b 0075               lcd_linea@z 0022                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F      __end_of_datos_ascii 016F  
            __end_of_dat 026C              __end_of_cmd 02AB              __end_of_isr 02BB  
      datos_ascii@numero 0074              ?_toggle_adc 0070              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0019  
              _centenas1 003B                _centenas2 0038                _centenas3 0035  
           ??_adc_config 0072            _dato_recibido 0079                _lcd_ascii 0025  
            _datos_ascii 0133                _lcd_linea 019E                __pstrings 0200  
__size_of_recepcion_uart 001C           __size_of_setup 002F       __end_of_adc_config 0296  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
    __size_of_toggle_adc 0041               ?_lcd_ascii 0070                _unidades1 0039  
              _unidades2 0036                _unidades3 0033               ?_lcd_linea 0075  
             _ADCON0bits 001F              __stringbase 020F               _ADCON1bits 009F  
          ??_uart_config 0072              _cuenta_uart 0078              _conversion1 007B  
            _conversion2 007A       __end_of__stringtab 0210                 _decenas1 003A  
               _decenas2 0037                 _decenas3 0034                 __ptext10 0296  
               __ptext11 0025                 __ptext12 0133                 __ptext13 02AB  
    __end_of_uart_config 0281                 _lcd_init 023E            __size_of_main 004A  
          __size_of_show 0026              ??_lcd_ascii 0075              ??_lcd_linea 0076  
         _recepcion_uart 0222               _INTCONbits 000B             ??_toggle_adc 0072  
               intlevel1 0000                stringcode 020A               _OSCCONbits 008F  
     __end_of_toggle_adc 0133   __end_of_recepcion_uart 023E             ?_datos_ascii 0070  
            _uart_config 026C                 stringdir 020A                 stringtab 0200  
