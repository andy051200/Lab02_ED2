

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 15:02:59 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  001E                     _ADRESH	set	30
   456  001F                     _ADCON0bits	set	31
   457  000B                     _INTCONbits	set	11
   458  0008                     _PORTD	set	8
   459  0006                     _PORTB	set	6
   460  001A                     _RCREG	set	26
   461  000C                     _PIR1bits	set	12
   462  0047                     _RD7	set	71
   463  0046                     _RD6	set	70
   464  0045                     _RD5	set	69
   465  009A                     _SPBRGH	set	154
   466  0099                     _SPBRG	set	153
   467  0098                     _TXSTAbits	set	152
   468  009F                     _ADCON1bits	set	159
   469  008C                     _PIE1bits	set	140
   470  008F                     _OSCCONbits	set	143
   471  0088                     _TRISDbits	set	136
   472  0086                     _TRISB	set	134
   473  0187                     _BAUDCTLbits	set	391
   474  0188                     _ANSELbits	set	392
   475  0189                     _ANSELH	set	393
   476  0188                     _ANSEL	set	392
   477                           
   478                           	psect	strings
   479  0343                     __pstrings:
   480  0343                     stringtab:
   481  0343                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484  0343  1BFF               	btfsc	btemp+1,7
   485  0344  2B4D               	ljmp	stringcode
   486  0345  1383               	bcf	3,7
   487  0346  187F               	btfsc	btemp+1,0
   488  0347  1783               	bsf	3,7
   489  0348  0800               	movf	0,w
   490  0349  0A84               	incf	4,f
   491  034A  1903               	skipnz
   492  034B  0AFF               	incf	btemp+1,f
   493  034C  0008               	return
   494  034D                     stringcode:
   495  034D                     stringdir:
   496  034D  3003               	movlw	high stringdir
   497  034E  008A               	movwf	10
   498  034F  0804               	movf	4,w
   499  0350  0A84               	incf	4,f
   500  0351  0782               	addwf	2,f
   501  0352                     __stringbase:
   502  0352  3400               	retlw	0
   503  0353                     __end_of__stringtab:
   504  0353                     STR_1:
   505  0353  3420               	retlw	32	;' '
   506  0354  3453               	retlw	83	;'S'
   507  0355  3431               	retlw	49	;'1'
   508  0356  3420               	retlw	32	;' '
   509  0357  3420               	retlw	32	;' '
   510  0358  3420               	retlw	32	;' '
   511  0359  3453               	retlw	83	;'S'
   512  035A  3432               	retlw	50	;'2'
   513  035B  3420               	retlw	32	;' '
   514  035C  3420               	retlw	32	;' '
   515  035D  3420               	retlw	32	;' '
   516  035E  3453               	retlw	83	;'S'
   517  035F  3433               	retlw	51	;'3'
   518  0360  3420               	retlw	32	;' '
   519  0361  3400               	retlw	0
   520                           
   521                           	psect	cinit
   522  000F                     start_initialization:	
   523                           ; #config settings
   524                           
   525  000F                     __initialization:
   526                           
   527                           ; Clear objects allocated to COMMON
   528  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   529  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0011  1283               	bcf	3,5	;RP0=0, select bank0
   533  0012  1303               	bcf	3,6	;RP1=0, select bank0
   534  0013  01BF               	clrf	__pbssBANK0& (0+127)
   535  0014  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   536  0015  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   537  0016  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   538  0017  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   539  0018                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0018                     __end_of__initialization:
   543  0018  0183               	clrf	3
   544  0019  120A  118A  2A03   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  007A                     __pbssCOMMON:
   548  007A                     _cuenta_uart:
   549  007A                     	ds	1
   550  007B                     _dato_recibido:
   551  007B                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554  003F                     __pbssBANK0:
   555  003F                     _unidades3:
   556  003F                     	ds	1
   557  0040                     _decenas3:
   558  0040                     	ds	1
   559  0041                     _centenas3:
   560  0041                     	ds	1
   561  0042                     _conversion2:
   562  0042                     	ds	1
   563  0043                     _conversion1:
   564  0043                     	ds	1
   565                           
   566                           	psect	cstackCOMMON
   567  0070                     __pcstackCOMMON:
   568  0070                     ?_setup:
   569  0070                     ?_lcd_init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_toggle_adc:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_recepcion_uart:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ascii:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_adc_config:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_uart_config:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_isr:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_isr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_main:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_datos_ascii:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_dat:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 1 bytes @ 0x0
   607  0070                     	ds	2
   608  0072                     ??_cmd:
   609  0072                     ??_toggle_adc:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     ??_recepcion_uart:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     ??_adc_config:	
   616                           ; 1 bytes @ 0x2
   617                           
   618  0072                     ??_uart_config:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     ??_datos_ascii:	
   622                           ; 1 bytes @ 0x2
   623                           
   624  0072                     ??_dat:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ?___awdiv:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     ___awdiv@divisor:	
   631                           ; 2 bytes @ 0x2
   632                           
   633                           
   634                           ; 2 bytes @ 0x2
   635  0072                     	ds	1
   636  0073                     ??_setup:
   637                           
   638                           ; 1 bytes @ 0x3
   639  0073                     	ds	1
   640  0074                     datos_ascii@numero:
   641  0074                     cmd@a:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     dat@b:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ___awdiv@dividend:	
   648                           ; 1 bytes @ 0x4
   649                           
   650                           
   651                           ; 2 bytes @ 0x4
   652  0074                     	ds	1
   653  0075                     ??_lcd_init:
   654  0075                     ?_lcd_linea:	
   655                           ; 1 bytes @ 0x5
   656                           
   657  0075                     lcd_linea@b:	
   658                           ; 1 bytes @ 0x5
   659                           
   660                           
   661                           ; 1 bytes @ 0x5
   662  0075                     	ds	1
   663  0076                     ??_lcd_linea:
   664  0076                     ??___awdiv:	
   665                           ; 1 bytes @ 0x6
   666                           
   667                           
   668                           ; 1 bytes @ 0x6
   669  0076                     	ds	1
   670  0077                     ??___awmod:
   671  0077                     lcd_linea@a:	
   672                           ; 1 bytes @ 0x7
   673                           
   674                           
   675                           ; 1 bytes @ 0x7
   676  0077                     	ds	1
   677  0078                     lcd_linea@temp:
   678  0078                     ___awmod@counter:	
   679                           ; 1 bytes @ 0x8
   680                           
   681                           
   682                           ; 1 bytes @ 0x8
   683  0078                     	ds	1
   684  0079                     lcd_linea@z:
   685  0079                     ___awmod@sign:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690  0079                     	ds	1
   691  007A                     ??_show:
   692                           
   693                           	psect	cstackBANK0
   694  0020                     __pcstackBANK0:	
   695                           ; 1 bytes @ 0xA
   696                           
   697  0020                     ___awdiv@counter:
   698                           
   699                           ; 1 bytes @ 0x0
   700  0020                     	ds	1
   701  0021                     ___awdiv@sign:
   702                           
   703                           ; 1 bytes @ 0x1
   704  0021                     	ds	1
   705  0022                     ___awdiv@quotient:
   706                           
   707                           ; 2 bytes @ 0x2
   708  0022                     	ds	2
   709  0024                     ?___awmod:
   710  0024                     ___awmod@divisor:	
   711                           ; 2 bytes @ 0x4
   712                           
   713                           
   714                           ; 2 bytes @ 0x4
   715  0024                     	ds	2
   716  0026                     ___awmod@dividend:
   717                           
   718                           ; 2 bytes @ 0x6
   719  0026                     	ds	2
   720  0028                     ??_lcd_ascii:
   721                           
   722                           ; 1 bytes @ 0x8
   723  0028                     	ds	3
   724  002B                     lcd_ascii@random:
   725                           
   726                           ; 16 bytes @ 0xB
   727  002B                     	ds	16
   728  003B                     ?_show:
   729  003B                     show@s:	
   730                           ; 1 bytes @ 0x1B
   731                           
   732                           
   733                           ; 2 bytes @ 0x1B
   734  003B                     	ds	2
   735  003D                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x1D
   738  003D                     	ds	2
   739                           
   740                           	psect	maintext
   741  0203                     __pmaintext:	
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 92 in file "main_lab2.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : B00/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       2       0       0       0
   764 ;;      Totals:         0       2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		_cmd
   769 ;;		_lcd_ascii
   770 ;;		_lcd_init
   771 ;;		_lcd_linea
   772 ;;		_recepcion_uart
   773 ;;		_setup
   774 ;;		_show
   775 ;;		_toggle_adc
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _main
   783  0203                     _main:
   784  0203                     l1599:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   787                           
   788                           
   789                           ;main_lab2.c: 94:     setup();
   790  0203  120A  118A  231C  120A  118A  	fcall	_setup
   791                           
   792                           ;main_lab2.c: 95:     lcd_init();
   793  0208  120A  118A  237C  120A  118A  	fcall	_lcd_init
   794                           
   795                           ;main_lab2.c: 96:  cmd(0x90);
   796  020D  3090               	movlw	144
   797  020E  120A  118A  23D4  120A  118A  	fcall	_cmd
   798  0213                     l1601:
   799                           
   800                           ;main_lab2.c: 99:     {;main_lab2.c: 101:         toggle_adc();
   801  0213  120A  118A  228D  120A  118A  	fcall	_toggle_adc
   802  0218                     l1603:
   803                           
   804                           ;main_lab2.c: 102:         recepcion_uart();
   805  0218  120A  118A  2362  120A  118A  	fcall	_recepcion_uart
   806                           
   807                           ;main_lab2.c: 106:         lcd_linea(1,1);
   808  021D  01F5               	clrf	lcd_linea@b
   809  021E  0AF5               	incf	lcd_linea@b,f
   810  021F  3001               	movlw	1
   811  0220  120A  118A  22C8  120A  118A  	fcall	_lcd_linea
   812  0225                     l1605:
   813                           
   814                           ;main_lab2.c: 107:         show(" S1   S2   S3 ");
   815  0225  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   816  0226  1283               	bcf	3,5	;RP0=0, select bank0
   817  0227  1303               	bcf	3,6	;RP1=0, select bank0
   818  0228  00BB               	movwf	show@s
   819  0229  3080               	movlw	128
   820  022A  00BC               	movwf	show@s+1
   821  022B  120A  118A  22F4  120A  118A  	fcall	_show
   822  0230                     l1607:
   823                           
   824                           ;main_lab2.c: 108:         lcd_linea(2,1);
   825  0230  01F5               	clrf	lcd_linea@b
   826  0231  0AF5               	incf	lcd_linea@b,f
   827  0232  3002               	movlw	2
   828  0233  120A  118A  22C8  120A  118A  	fcall	_lcd_linea
   829                           
   830                           ;main_lab2.c: 109:         show(lcd_ascii());
   831  0238  120A  118A  201C  120A  118A  	fcall	_lcd_ascii
   832  023D  1283               	bcf	3,5	;RP0=0, select bank0
   833  023E  1303               	bcf	3,6	;RP1=0, select bank0
   834  023F  00BD               	movwf	??_main
   835  0240  01BE               	clrf	??_main+1
   836  0241  083D               	movf	??_main,w
   837  0242  00BB               	movwf	show@s
   838  0243  083E               	movf	??_main+1,w
   839  0244  00BC               	movwf	show@s+1
   840  0245  120A  118A  22F4  120A  118A  	fcall	_show
   841  024A  2A13               	goto	l1601
   842  024B  120A  118A  280C   	ljmp	start
   843  024E                     __end_of_main:
   844                           
   845                           	psect	text1
   846  028D                     __ptext1:	
   847 ;; *************** function _toggle_adc *****************
   848 ;; Defined at:
   849 ;;		line 158 in file "main_lab2.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          3       0       0       0       0
   866 ;;      Totals:         3       0       0       0       0
   867 ;;Total ram usage:        3 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _toggle_adc
   879  028D                     _toggle_adc:
   880  028D                     l1333:	
   881                           ;incstack = 0
   882                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   883                           
   884                           
   885                           ;main_lab2.c: 160:     if (ADCON0bits.GO==0)
   886  028D  1283               	bcf	3,5	;RP0=0, select bank0
   887  028E  1303               	bcf	3,6	;RP1=0, select bank0
   888  028F  189F               	btfsc	31,1	;volatile
   889  0290  2A92               	goto	u441
   890  0291  2A93               	goto	u440
   891  0292                     u441:
   892  0292  2AC7               	goto	l89
   893  0293                     u440:
   894  0293  2AB4               	goto	l1353
   895  0294                     l1337:
   896                           
   897                           ;main_lab2.c: 165:                 conversion1=ADRESH;
   898  0294  081E               	movf	30,w	;volatile
   899  0295  00F2               	movwf	??_toggle_adc
   900  0296  0872               	movf	??_toggle_adc,w
   901  0297  00C3               	movwf	_conversion1
   902                           
   903                           ;main_lab2.c: 166:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   904  0298  3042               	movlw	66
   905  0299  00F2               	movwf	??_toggle_adc
   906  029A                     u677:
   907  029A  0BF2               	decfsz	??_toggle_adc,f
   908  029B  2A9A               	goto	u677
   909  029C  0000               	nop
   910  029D                     l1339:
   911                           
   912                           ;main_lab2.c: 167:                 ADCON0bits.CHS=1;
   913  029D  1283               	bcf	3,5	;RP0=0, select bank0
   914  029E  1303               	bcf	3,6	;RP1=0, select bank0
   915  029F  081F               	movf	31,w	;volatile
   916  02A0  39C3               	andlw	-61
   917  02A1  3804               	iorlw	4
   918  02A2  009F               	movwf	31	;volatile
   919  02A3                     l1341:
   920                           
   921                           ;main_lab2.c: 168:                 ADCON0bits.GO=1;
   922  02A3  149F               	bsf	31,1	;volatile
   923                           
   924                           ;main_lab2.c: 169:                 break;
   925  02A4  2AC7               	goto	l89
   926  02A5                     l1343:
   927                           
   928                           ;main_lab2.c: 172:                 conversion2=ADRESH;
   929  02A5  081E               	movf	30,w	;volatile
   930  02A6  00F2               	movwf	??_toggle_adc
   931  02A7  0872               	movf	??_toggle_adc,w
   932  02A8  00C2               	movwf	_conversion2
   933                           
   934                           ;main_lab2.c: 173:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   935  02A9  3042               	movlw	66
   936  02AA  00F2               	movwf	??_toggle_adc
   937  02AB                     u687:
   938  02AB  0BF2               	decfsz	??_toggle_adc,f
   939  02AC  2AAB               	goto	u687
   940  02AD  0000               	nop
   941  02AE                     l1345:
   942                           
   943                           ;main_lab2.c: 174:                 ADCON0bits.CHS=0;
   944  02AE  30C3               	movlw	-61
   945  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   946  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   947  02B1  059F               	andwf	31,f	;volatile
   948  02B2                     l1347:
   949                           
   950                           ;main_lab2.c: 175:                 ADCON0bits.GO=1;
   951  02B2  149F               	bsf	31,1	;volatile
   952                           
   953                           ;main_lab2.c: 176:                 break;
   954  02B3  2AC7               	goto	l89
   955  02B4                     l1353:
   956  02B4  0C1F               	rrf	31,w	;volatile
   957  02B5  00F2               	movwf	??_toggle_adc
   958  02B6  0C72               	rrf	??_toggle_adc,w
   959  02B7  390F               	andlw	15
   960  02B8  00F3               	movwf	??_toggle_adc+1
   961  02B9  01F4               	clrf	??_toggle_adc+2
   962                           
   963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   964                           ; Switch size 1, requested type "simple"
   965                           ; Number of cases is 1, Range of values is 0 to 0
   966                           ; switch strategies available:
   967                           ; Name         Instructions Cycles
   968                           ; simple_byte            4     3 (average)
   969                           ; direct_byte           11     8 (fixed)
   970                           ; jumptable            260     6 (fixed)
   971                           ;	Chosen strategy is simple_byte
   972  02BA  0874               	movf	??_toggle_adc+2,w
   973  02BB  3A00               	xorlw	0	; case 0
   974  02BC  1903               	skipnz
   975  02BD  2ABF               	goto	l1669
   976  02BE  2AC7               	goto	l89
   977  02BF                     l1669:
   978                           
   979                           ; Switch size 1, requested type "simple"
   980                           ; Number of cases is 2, Range of values is 0 to 1
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; simple_byte            7     4 (average)
   984                           ; direct_byte           14     8 (fixed)
   985                           ; jumptable            260     6 (fixed)
   986                           ;	Chosen strategy is simple_byte
   987  02BF  0873               	movf	??_toggle_adc+1,w
   988  02C0  3A00               	xorlw	0	; case 0
   989  02C1  1903               	skipnz
   990  02C2  2A94               	goto	l1337
   991  02C3  3A01               	xorlw	1	; case 1
   992  02C4  1903               	skipnz
   993  02C5  2AA5               	goto	l1343
   994  02C6  2AC7               	goto	l89
   995  02C7                     l89:
   996  02C7  0008               	return
   997  02C8                     __end_of_toggle_adc:
   998                           
   999                           	psect	text2
  1000  02F4                     __ptext2:	
  1001 ;; *************** function _show *****************
  1002 ;; Defined at:
  1003 ;;		line 59 in file "LCD.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1006 ;;		 -> RAM(512), STR_1(15), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       2       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         0       2       0       0       0
  1022 ;;Total ram usage:        2 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    2
  1025 ;; This function calls:
  1026 ;;		_dat
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _show
  1034  02F4                     _show:
  1035  02F4                     l1375:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1038                           
  1039                           
  1040                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
  1041  02F4  2B0B               	goto	l1381
  1042  02F5                     l1377:
  1043                           
  1044                           ;LCD.c: 62:   dat(*s++);
  1045  02F5  083C               	movf	show@s+1,w
  1046  02F6  00FF               	movwf	btemp+1
  1047  02F7  083B               	movf	show@s,w
  1048  02F8  0084               	movwf	4
  1049  02F9  120A  118A  2343  120A  118A  	fcall	stringtab
  1050  02FE  120A  118A  2395  120A  118A  	fcall	_dat
  1051  0303                     l1379:
  1052  0303  3001               	movlw	1
  1053  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0306  07BB               	addwf	show@s,f
  1056  0307  1803               	skipnc
  1057  0308  0ABC               	incf	show@s+1,f
  1058  0309  3000               	movlw	0
  1059  030A  07BC               	addwf	show@s+1,f
  1060  030B                     l1381:
  1061                           
  1062                           ;LCD.c: 61:  while(*s) {
  1063  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1064  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1065  030D  083C               	movf	show@s+1,w
  1066  030E  00FF               	movwf	btemp+1
  1067  030F  083B               	movf	show@s,w
  1068  0310  0084               	movwf	4
  1069  0311  120A  118A  2343  120A  118A  	fcall	stringtab
  1070  0316  3A00               	xorlw	0
  1071  0317  1D03               	skipz
  1072  0318  2B1A               	goto	u471
  1073  0319  2B1B               	goto	u470
  1074  031A                     u471:
  1075  031A  2AF5               	goto	l1377
  1076  031B                     u470:
  1077  031B                     l152:
  1078  031B  0008               	return
  1079  031C                     __end_of_show:
  1080                           
  1081                           	psect	text3
  1082  0395                     __ptext3:	
  1083 ;; *************** function _dat *****************
  1084 ;; Defined at:
  1085 ;;		line 48 in file "LCD.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  b               1    wreg     unsigned char 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  b               1    4[COMMON] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         1       0       0       0       0
  1101 ;;      Temps:          2       0       0       0       0
  1102 ;;      Totals:         3       0       0       0       0
  1103 ;;Total ram usage:        3 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_show
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _dat
  1115  0395                     _dat:
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _dat: [wreg]
  1119                           ;dat@b stored from wreg
  1120  0395  00F4               	movwf	dat@b
  1121  0396                     l879:
  1122                           
  1123                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
  1124  0396  0874               	movf	dat@b,w
  1125  0397  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0398  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0399  0086               	movwf	6	;volatile
  1128  039A                     l881:
  1129                           
  1130                           ;LCD.c: 51:  RD5=1;
  1131  039A  1688               	bsf	8,5	;volatile
  1132  039B                     l883:
  1133                           
  1134                           ;LCD.c: 52:  RD6=0;
  1135  039B  1308               	bcf	8,6	;volatile
  1136  039C                     l885:
  1137                           
  1138                           ;LCD.c: 53:  RD7=1;
  1139  039C  1788               	bsf	8,7	;volatile
  1140                           
  1141                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1142  039D  3003               	movlw	3
  1143  039E  00F3               	movwf	??_dat+1
  1144  039F  3097               	movlw	151
  1145  03A0  00F2               	movwf	??_dat
  1146  03A1                     u697:
  1147  03A1  0BF2               	decfsz	??_dat,f
  1148  03A2  2BA1               	goto	u697
  1149  03A3  0BF3               	decfsz	??_dat+1,f
  1150  03A4  2BA1               	goto	u697
  1151  03A5  2BA6               	nop2
  1152  03A6                     l887:
  1153                           
  1154                           ;LCD.c: 55:  RD7=0;
  1155  03A6  1283               	bcf	3,5	;RP0=0, select bank0
  1156  03A7  1303               	bcf	3,6	;RP1=0, select bank0
  1157  03A8  1388               	bcf	8,7	;volatile
  1158  03A9                     l146:
  1159  03A9  0008               	return
  1160  03AA                     __end_of_dat:
  1161                           
  1162                           	psect	text4
  1163  031C                     __ptext4:	
  1164 ;; *************** function _setup *****************
  1165 ;; Defined at:
  1166 ;;		line 116 in file "main_lab2.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    2
  1187 ;; This function calls:
  1188 ;;		_adc_config
  1189 ;;		_uart_config
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _setup
  1197  031C                     _setup:
  1198  031C                     l971:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1201                           
  1202                           
  1203                           ;main_lab2.c: 119:     ANSEL=0;
  1204  031C  1683               	bsf	3,5	;RP0=1, select bank3
  1205  031D  1703               	bsf	3,6	;RP1=1, select bank3
  1206  031E  0188               	clrf	8	;volatile
  1207                           
  1208                           ;main_lab2.c: 120:     ANSELH=0;
  1209  031F  0189               	clrf	9	;volatile
  1210  0320                     l973:
  1211                           
  1212                           ;main_lab2.c: 121:     ANSELbits.ANS0=1;
  1213  0320  1408               	bsf	8,0	;volatile
  1214  0321                     l975:
  1215                           
  1216                           ;main_lab2.c: 122:     ANSELbits.ANS1=1;
  1217  0321  1488               	bsf	8,1	;volatile
  1218                           
  1219                           ;main_lab2.c: 125:     TRISB=0;
  1220  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1221  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1222  0324  0186               	clrf	6	;volatile
  1223  0325                     l977:
  1224                           
  1225                           ;main_lab2.c: 128:     TRISDbits.TRISD5=0;
  1226  0325  1288               	bcf	8,5	;volatile
  1227  0326                     l979:
  1228                           
  1229                           ;main_lab2.c: 129:     TRISDbits.TRISD6=0;
  1230  0326  1308               	bcf	8,6	;volatile
  1231  0327                     l981:
  1232                           
  1233                           ;main_lab2.c: 130:     TRISDbits.TRISD7=0;
  1234  0327  1388               	bcf	8,7	;volatile
  1235                           
  1236                           ;main_lab2.c: 133:     PORTB=0;
  1237  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1239  032A  0186               	clrf	6	;volatile
  1240                           
  1241                           ;main_lab2.c: 134:     PORTD=0;
  1242  032B  0188               	clrf	8	;volatile
  1243  032C                     l983:
  1244                           
  1245                           ;main_lab2.c: 138:     OSCCONbits.IRCF = 0b111;
  1246  032C  3070               	movlw	112
  1247  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1248  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1249  032F  048F               	iorwf	15,f	;volatile
  1250  0330                     l985:
  1251                           
  1252                           ;main_lab2.c: 139:     OSCCONbits.SCS = 1;
  1253  0330  140F               	bsf	15,0	;volatile
  1254  0331                     l987:
  1255                           
  1256                           ;main_lab2.c: 142:     adc_config();
  1257  0331  120A  118A  23BF  120A  118A  	fcall	_adc_config
  1258  0336                     l989:
  1259                           
  1260                           ;main_lab2.c: 144:     uart_config();
  1261  0336  120A  118A  23AA  120A  118A  	fcall	_uart_config
  1262  033B                     l991:
  1263                           
  1264                           ;main_lab2.c: 147:     INTCONbits.GIE=1;
  1265  033B  178B               	bsf	11,7	;volatile
  1266  033C                     l993:
  1267                           
  1268                           ;main_lab2.c: 148:     PIE1bits.RCIE=1;
  1269  033C  1683               	bsf	3,5	;RP0=1, select bank1
  1270  033D  1303               	bcf	3,6	;RP1=0, select bank1
  1271  033E  168C               	bsf	12,5	;volatile
  1272  033F                     l995:
  1273                           
  1274                           ;main_lab2.c: 149:     PIR1bits.RCIF=0;
  1275  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0341  128C               	bcf	12,5	;volatile
  1278  0342                     l81:
  1279  0342  0008               	return
  1280  0343                     __end_of_setup:
  1281                           
  1282                           	psect	text5
  1283  03AA                     __ptext5:	
  1284 ;; *************** function _uart_config *****************
  1285 ;; Defined at:
  1286 ;;		line 19 in file "uart_config.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_setup
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _uart_config
  1316  03AA                     _uart_config:
  1317  03AA                     l787:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _uart_config: [wreg+status,2]
  1320                           
  1321                           
  1322                           ;uart_config.c: 23:     TXSTAbits.SYNC = 0;
  1323  03AA  1683               	bsf	3,5	;RP0=1, select bank1
  1324  03AB  1303               	bcf	3,6	;RP1=0, select bank1
  1325  03AC  1218               	bcf	24,4	;volatile
  1326                           
  1327                           ;uart_config.c: 24:     TXSTAbits.BRGH = 1;
  1328  03AD  1518               	bsf	24,2	;volatile
  1329                           
  1330                           ;uart_config.c: 26:     BAUDCTLbits.BRG16 = 1;
  1331  03AE  1683               	bsf	3,5	;RP0=1, select bank3
  1332  03AF  1703               	bsf	3,6	;RP1=1, select bank3
  1333  03B0  1587               	bsf	7,3	;volatile
  1334  03B1                     l789:
  1335                           
  1336                           ;uart_config.c: 27:     SPBRG = 25;
  1337  03B1  3019               	movlw	25
  1338  03B2  1683               	bsf	3,5	;RP0=1, select bank1
  1339  03B3  1303               	bcf	3,6	;RP1=0, select bank1
  1340  03B4  0099               	movwf	25	;volatile
  1341  03B5                     l791:
  1342                           
  1343                           ;uart_config.c: 28:     SPBRGH = 0;
  1344  03B5  019A               	clrf	26	;volatile
  1345  03B6                     l793:
  1346                           
  1347                           ;uart_config.c: 30:     RCSTAbits.SPEN = 1;
  1348  03B6  1283               	bcf	3,5	;RP0=0, select bank0
  1349  03B7  1303               	bcf	3,6	;RP1=0, select bank0
  1350  03B8  1798               	bsf	24,7	;volatile
  1351  03B9                     l795:
  1352                           
  1353                           ;uart_config.c: 31:     RCSTAbits.RX9 = 0;
  1354  03B9  1318               	bcf	24,6	;volatile
  1355  03BA                     l797:
  1356                           
  1357                           ;uart_config.c: 33:     RCSTAbits.CREN = 1;
  1358  03BA  1618               	bsf	24,4	;volatile
  1359  03BB                     l799:
  1360                           
  1361                           ;uart_config.c: 34:     TXSTAbits.TXEN = 1;
  1362  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  1363  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  1364  03BD  1698               	bsf	24,5	;volatile
  1365  03BE                     l177:
  1366  03BE  0008               	return
  1367  03BF                     __end_of_uart_config:
  1368                           
  1369                           	psect	text6
  1370  03BF                     __ptext6:	
  1371 ;; *************** function _adc_config *****************
  1372 ;; Defined at:
  1373 ;;		line 20 in file "adc_config.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          1       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_setup
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _adc_config
  1403  03BF                     _adc_config:
  1404  03BF                     l779:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1407                           
  1408                           
  1409                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1410  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  1411  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  1412  03C1  139F               	bcf	31,7	;volatile
  1413                           
  1414                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1415  03C2  121F               	bcf	31,4	;volatile
  1416                           
  1417                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1418  03C3  129F               	bcf	31,5	;volatile
  1419  03C4                     l781:
  1420                           
  1421                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1422  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  1423  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  1424  03C6  081F               	movf	31,w	;volatile
  1425  03C7  393F               	andlw	-193
  1426  03C8  3840               	iorlw	64
  1427  03C9  009F               	movwf	31	;volatile
  1428                           
  1429                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1430  03CA  30C3               	movlw	-61
  1431  03CB  059F               	andwf	31,f	;volatile
  1432  03CC                     l783:
  1433                           
  1434                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1435  03CC  3021               	movlw	33
  1436  03CD  00F2               	movwf	??_adc_config
  1437  03CE                     u707:
  1438  03CE  0BF2               	decfsz	??_adc_config,f
  1439  03CF  2BCE               	goto	u707
  1440  03D0                     l785:
  1441                           
  1442                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1443  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  1444  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  1445  03D2  141F               	bsf	31,0	;volatile
  1446  03D3                     l125:
  1447  03D3  0008               	return
  1448  03D4                     __end_of_adc_config:
  1449                           
  1450                           	psect	text7
  1451  0362                     __ptext7:	
  1452 ;; *************** function _recepcion_uart *****************
  1453 ;; Defined at:
  1454 ;;		line 185 in file "main_lab2.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          2       0       0       0       0
  1471 ;;      Totals:         2       0       0       0       0
  1472 ;;Total ram usage:        2 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _recepcion_uart
  1484  0362                     _recepcion_uart:
  1485  0362                     l1025:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  1488                           
  1489                           
  1490                           ;main_lab2.c: 187:     switch(dato_recibido)
  1491  0362  2B6B               	goto	l1033
  1492  0363                     l1027:
  1493                           
  1494                           ;main_lab2.c: 190:             cuenta_uart++;
  1495  0363  3001               	movlw	1
  1496  0364  00F2               	movwf	??_recepcion_uart
  1497  0365  0872               	movf	??_recepcion_uart,w
  1498  0366  07FA               	addwf	_cuenta_uart,f
  1499                           
  1500                           ;main_lab2.c: 191:             break;
  1501  0367  2B7B               	goto	l97
  1502  0368                     l1029:
  1503                           
  1504                           ;main_lab2.c: 194:             cuenta_uart--;
  1505  0368  3001               	movlw	1
  1506  0369  02FA               	subwf	_cuenta_uart,f
  1507                           
  1508                           ;main_lab2.c: 195:             break;
  1509  036A  2B7B               	goto	l97
  1510  036B                     l1033:
  1511  036B  087B               	movf	_dato_recibido,w
  1512  036C  00F2               	movwf	??_recepcion_uart
  1513  036D  01F3               	clrf	??_recepcion_uart+1
  1514                           
  1515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1516                           ; Switch size 1, requested type "simple"
  1517                           ; Number of cases is 1, Range of values is 0 to 0
  1518                           ; switch strategies available:
  1519                           ; Name         Instructions Cycles
  1520                           ; simple_byte            4     3 (average)
  1521                           ; direct_byte           11     8 (fixed)
  1522                           ; jumptable            260     6 (fixed)
  1523                           ;	Chosen strategy is simple_byte
  1524  036E  0873               	movf	??_recepcion_uart+1,w
  1525  036F  3A00               	xorlw	0	; case 0
  1526  0370  1903               	skipnz
  1527  0371  2B73               	goto	l1671
  1528  0372  2B7B               	goto	l97
  1529  0373                     l1671:
  1530                           
  1531                           ; Switch size 1, requested type "simple"
  1532                           ; Number of cases is 2, Range of values is 1 to 2
  1533                           ; switch strategies available:
  1534                           ; Name         Instructions Cycles
  1535                           ; simple_byte            7     4 (average)
  1536                           ; direct_byte           17    11 (fixed)
  1537                           ; jumptable            263     9 (fixed)
  1538                           ;	Chosen strategy is simple_byte
  1539  0373  0872               	movf	??_recepcion_uart,w
  1540  0374  3A01               	xorlw	1	; case 1
  1541  0375  1903               	skipnz
  1542  0376  2B63               	goto	l1027
  1543  0377  3A03               	xorlw	3	; case 2
  1544  0378  1903               	skipnz
  1545  0379  2B68               	goto	l1029
  1546  037A  2B7B               	goto	l97
  1547  037B                     l97:
  1548  037B  0008               	return
  1549  037C                     __end_of_recepcion_uart:
  1550                           
  1551                           	psect	text8
  1552  02C8                     __ptext8:	
  1553 ;; *************** function _lcd_linea *****************
  1554 ;; Defined at:
  1555 ;;		line 67 in file "LCD.c"
  1556 ;; Parameters:    Size  Location     Type
  1557 ;;  a               1    wreg     unsigned char 
  1558 ;;  b               1    5[COMMON] unsigned char 
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;  a               1    7[COMMON] unsigned char 
  1561 ;;  z               1    9[COMMON] unsigned char 
  1562 ;;  temp            1    8[COMMON] unsigned char 
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         1       0       0       0       0
  1573 ;;      Locals:         3       0       0       0       0
  1574 ;;      Temps:          1       0       0       0       0
  1575 ;;      Totals:         5       0       0       0       0
  1576 ;;Total ram usage:        5 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    2
  1579 ;; This function calls:
  1580 ;;		_cmd
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           
  1586                           
  1587                           ;psect for function _lcd_linea
  1588  02C8                     _lcd_linea:
  1589                           
  1590                           ;incstack = 0
  1591                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1592                           ;lcd_linea@a stored from wreg
  1593  02C8  00F7               	movwf	lcd_linea@a
  1594  02C9                     l1359:
  1595                           
  1596                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1597  02C9  0377               	decf	lcd_linea@a,w
  1598  02CA  1D03               	btfss	3,2
  1599  02CB  2ACD               	goto	u451
  1600  02CC  2ACE               	goto	u450
  1601  02CD                     u451:
  1602  02CD  2ADE               	goto	l1367
  1603  02CE                     u450:
  1604  02CE                     l1361:
  1605                           
  1606                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1607  02CE  0875               	movf	lcd_linea@b,w
  1608  02CF  3E7F               	addlw	127
  1609  02D0  00F6               	movwf	??_lcd_linea
  1610  02D1  0876               	movf	??_lcd_linea,w
  1611  02D2  00F8               	movwf	lcd_linea@temp
  1612  02D3                     l1363:
  1613                           
  1614                           ;LCD.c: 71:         z = temp;
  1615  02D3  0878               	movf	lcd_linea@temp,w
  1616  02D4  00F6               	movwf	??_lcd_linea
  1617  02D5  0876               	movf	??_lcd_linea,w
  1618  02D6  00F9               	movwf	lcd_linea@z
  1619  02D7                     l1365:
  1620                           
  1621                           ;LCD.c: 72:         cmd(z);
  1622  02D7  0879               	movf	lcd_linea@z,w
  1623  02D8  120A  118A  23D4  120A  118A  	fcall	_cmd
  1624                           
  1625                           ;LCD.c: 74:     } else if (a == 2) {
  1626  02DD  2AF3               	goto	l158
  1627  02DE                     l1367:
  1628  02DE  3002               	movlw	2
  1629  02DF  0677               	xorwf	lcd_linea@a,w
  1630  02E0  1D03               	btfss	3,2
  1631  02E1  2AE3               	goto	u461
  1632  02E2  2AE4               	goto	u460
  1633  02E3                     u461:
  1634  02E3  2AF3               	goto	l158
  1635  02E4                     u460:
  1636  02E4                     l1369:
  1637                           
  1638                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1639  02E4  0875               	movf	lcd_linea@b,w
  1640  02E5  3EBF               	addlw	191
  1641  02E6  00F6               	movwf	??_lcd_linea
  1642  02E7  0876               	movf	??_lcd_linea,w
  1643  02E8  00F8               	movwf	lcd_linea@temp
  1644  02E9                     l1371:
  1645                           
  1646                           ;LCD.c: 76:         z = temp;
  1647  02E9  0878               	movf	lcd_linea@temp,w
  1648  02EA  00F6               	movwf	??_lcd_linea
  1649  02EB  0876               	movf	??_lcd_linea,w
  1650  02EC  00F9               	movwf	lcd_linea@z
  1651  02ED                     l1373:
  1652                           
  1653                           ;LCD.c: 77:         cmd(z);
  1654  02ED  0879               	movf	lcd_linea@z,w
  1655  02EE  120A  118A  23D4  120A  118A  	fcall	_cmd
  1656  02F3                     l158:
  1657  02F3  0008               	return
  1658  02F4                     __end_of_lcd_linea:
  1659                           
  1660                           	psect	text9
  1661  037C                     __ptext9:	
  1662 ;; *************** function _lcd_init *****************
  1663 ;; Defined at:
  1664 ;;		line 28 in file "LCD.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;		None
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;		None
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0
  1681 ;;      Totals:         0       0       0       0       0
  1682 ;;Total ram usage:        0 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    2
  1685 ;; This function calls:
  1686 ;;		_cmd
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;; This function uses a non-reentrant model
  1690 ;;
  1691                           
  1692                           
  1693                           ;psect for function _lcd_init
  1694  037C                     _lcd_init:
  1695  037C                     l997:	
  1696                           ;incstack = 0
  1697                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1698                           
  1699                           
  1700                           ;LCD.c: 30:  cmd(0x38);
  1701  037C  3038               	movlw	56
  1702  037D  120A  118A  23D4  120A  118A  	fcall	_cmd
  1703                           
  1704                           ;LCD.c: 31:  cmd(0x0c);
  1705  0382  300C               	movlw	12
  1706  0383  120A  118A  23D4  120A  118A  	fcall	_cmd
  1707                           
  1708                           ;LCD.c: 32:  cmd(0x06);
  1709  0388  3006               	movlw	6
  1710  0389  120A  118A  23D4  120A  118A  	fcall	_cmd
  1711                           
  1712                           ;LCD.c: 33:  cmd(0x80);
  1713  038E  3080               	movlw	128
  1714  038F  120A  118A  23D4  120A  118A  	fcall	_cmd
  1715  0394                     l140:
  1716  0394  0008               	return
  1717  0395                     __end_of_lcd_init:
  1718                           
  1719                           	psect	text10
  1720  03D4                     __ptext10:	
  1721 ;; *************** function _cmd *****************
  1722 ;; Defined at:
  1723 ;;		line 37 in file "LCD.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;  a               1    wreg     unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;  a               1    4[COMMON] unsigned char 
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         0       0       0       0       0
  1738 ;;      Locals:         1       0       0       0       0
  1739 ;;      Temps:          2       0       0       0       0
  1740 ;;      Totals:         3       0       0       0       0
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;;		_lcd_init
  1749 ;;		_lcd_linea
  1750 ;;		_lcd_mov_derecha
  1751 ;;		_lcd_mov_izquierda
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           
  1756                           ;psect for function _cmd
  1757  03D4                     _cmd:
  1758                           
  1759                           ;incstack = 0
  1760                           ; Regs used in _cmd: [wreg]
  1761                           ;cmd@a stored from wreg
  1762  03D4  00F4               	movwf	cmd@a
  1763  03D5                     l769:
  1764                           
  1765                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1766  03D5  0874               	movf	cmd@a,w
  1767  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  1768  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  1769  03D8  0086               	movwf	6	;volatile
  1770  03D9                     l771:
  1771                           
  1772                           ;LCD.c: 40:  RD5=0;
  1773  03D9  1288               	bcf	8,5	;volatile
  1774  03DA                     l773:
  1775                           
  1776                           ;LCD.c: 41:  RD6=0;
  1777  03DA  1308               	bcf	8,6	;volatile
  1778  03DB                     l775:
  1779                           
  1780                           ;LCD.c: 42:  RD7=1;
  1781  03DB  1788               	bsf	8,7	;volatile
  1782                           
  1783                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1784  03DC  3003               	movlw	3
  1785  03DD  00F3               	movwf	??_cmd+1
  1786  03DE  3097               	movlw	151
  1787  03DF  00F2               	movwf	??_cmd
  1788  03E0                     u717:
  1789  03E0  0BF2               	decfsz	??_cmd,f
  1790  03E1  2BE0               	goto	u717
  1791  03E2  0BF3               	decfsz	??_cmd+1,f
  1792  03E3  2BE0               	goto	u717
  1793  03E4  2BE5               	nop2
  1794  03E5                     l777:
  1795                           
  1796                           ;LCD.c: 44:  RD7=0;
  1797  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  1798  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  1799  03E7  1388               	bcf	8,7	;volatile
  1800  03E8                     l143:
  1801  03E8  0008               	return
  1802  03E9                     __end_of_cmd:
  1803                           
  1804                           	psect	text11
  1805  001C                     __ptext11:	
  1806 ;; *************** function _lcd_ascii *****************
  1807 ;; Defined at:
  1808 ;;		line 272 in file "main_lab2.c"
  1809 ;; Parameters:    Size  Location     Type
  1810 ;;		None
  1811 ;; Auto vars:     Size  Location     Type
  1812 ;;  random         16   11[BANK0 ] unsigned char [16]
  1813 ;; Return value:  Size  Location     Type
  1814 ;;                  1    wreg      unsigned char 
  1815 ;; Registers used:
  1816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1817 ;; Tracked objects:
  1818 ;;		On entry : 0/0
  1819 ;;		On exit  : 0/0
  1820 ;;		Unchanged: 0/0
  1821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1822 ;;      Params:         0       0       0       0       0
  1823 ;;      Locals:         0      16       0       0       0
  1824 ;;      Temps:          0       3       0       0       0
  1825 ;;      Totals:         0      19       0       0       0
  1826 ;;Total ram usage:       19 bytes
  1827 ;; Hardware stack levels used:    1
  1828 ;; Hardware stack levels required when called:    2
  1829 ;; This function calls:
  1830 ;;		___awdiv
  1831 ;;		___awmod
  1832 ;;		_datos_ascii
  1833 ;; This function is called by:
  1834 ;;		_main
  1835 ;; This function uses a non-reentrant model
  1836 ;;
  1837                           
  1838                           
  1839                           ;psect for function _lcd_ascii
  1840  001C                     _lcd_ascii:
  1841  001C                     l1567:	
  1842                           ;incstack = 0
  1843                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1844                           
  1845                           
  1846                           ;main_lab2.c: 274:     uint8_t random[16];;main_lab2.c: 275:     random[0]=datos_ascii((
      +                          (2*(conversion1)/100)%10));
  1847  001C  300A               	movlw	10
  1848  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1849  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1850  001F  00A4               	movwf	___awmod@divisor
  1851  0020  3000               	movlw	0
  1852  0021  00A5               	movwf	___awmod@divisor+1
  1853  0022  3064               	movlw	100
  1854  0023  00F2               	movwf	___awdiv@divisor
  1855  0024  3000               	movlw	0
  1856  0025  00F3               	movwf	___awdiv@divisor+1
  1857  0026  0843               	movf	_conversion1,w
  1858  0027  00A8               	movwf	??_lcd_ascii
  1859  0028  01A9               	clrf	??_lcd_ascii+1
  1860  0029  1003               	clrc
  1861  002A  0D28               	rlf	??_lcd_ascii,w
  1862  002B  00F4               	movwf	___awdiv@dividend
  1863  002C  0D29               	rlf	??_lcd_ascii+1,w
  1864  002D  00F5               	movwf	___awdiv@dividend+1
  1865  002E  120A  118A  213F  120A  118A  	fcall	___awdiv
  1866  0033  0873               	movf	?___awdiv+1,w
  1867  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1868  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1869  0036  00A7               	movwf	___awmod@dividend+1
  1870  0037  0872               	movf	?___awdiv,w
  1871  0038  00A6               	movwf	___awmod@dividend
  1872  0039  120A  118A  21A8  120A  118A  	fcall	___awmod
  1873  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1874  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1875  0040  0824               	movf	?___awmod,w
  1876  0041  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1877  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1878  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0048  00AA               	movwf	??_lcd_ascii+2
  1880  0049  082A               	movf	??_lcd_ascii+2,w
  1881  004A  00AB               	movwf	lcd_ascii@random
  1882  004B                     l1569:
  1883                           
  1884                           ;main_lab2.c: 276:     random[1]=0x2E;
  1885  004B  302E               	movlw	46
  1886  004C  00A8               	movwf	??_lcd_ascii
  1887  004D  0828               	movf	??_lcd_ascii,w
  1888  004E  00AC               	movwf	lcd_ascii@random+1
  1889  004F                     l1571:
  1890                           
  1891                           ;main_lab2.c: 277:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1892  004F  300A               	movlw	10
  1893  0050  00A4               	movwf	___awmod@divisor
  1894  0051  3000               	movlw	0
  1895  0052  00A5               	movwf	___awmod@divisor+1
  1896  0053  3064               	movlw	100
  1897  0054  00F2               	movwf	___awdiv@divisor
  1898  0055  3000               	movlw	0
  1899  0056  00F3               	movwf	___awdiv@divisor+1
  1900  0057  0843               	movf	_conversion1,w
  1901  0058  00A8               	movwf	??_lcd_ascii
  1902  0059  01A9               	clrf	??_lcd_ascii+1
  1903  005A  1003               	clrc
  1904  005B  0D28               	rlf	??_lcd_ascii,w
  1905  005C  00F4               	movwf	___awdiv@dividend
  1906  005D  0D29               	rlf	??_lcd_ascii+1,w
  1907  005E  00F5               	movwf	___awdiv@dividend+1
  1908  005F  120A  118A  213F  120A  118A  	fcall	___awdiv
  1909  0064  0873               	movf	?___awdiv+1,w
  1910  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1911  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1912  0067  00A7               	movwf	___awmod@dividend+1
  1913  0068  0872               	movf	?___awdiv,w
  1914  0069  00A6               	movwf	___awmod@dividend
  1915  006A  120A  118A  21A8  120A  118A  	fcall	___awmod
  1916  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1917  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1918  0071  0824               	movf	?___awmod,w
  1919  0072  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1920  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0079  00AA               	movwf	??_lcd_ascii+2
  1923  007A  082A               	movf	??_lcd_ascii+2,w
  1924  007B  00AD               	movwf	lcd_ascii@random+2
  1925  007C                     l1573:
  1926                           
  1927                           ;main_lab2.c: 278:     random[3]=datos_ascii((2*conversion1)%10);
  1928  007C  300A               	movlw	10
  1929  007D  00A4               	movwf	___awmod@divisor
  1930  007E  3000               	movlw	0
  1931  007F  00A5               	movwf	___awmod@divisor+1
  1932  0080  0843               	movf	_conversion1,w
  1933  0081  00A8               	movwf	??_lcd_ascii
  1934  0082  01A9               	clrf	??_lcd_ascii+1
  1935  0083  1003               	clrc
  1936  0084  0D28               	rlf	??_lcd_ascii,w
  1937  0085  00A6               	movwf	___awmod@dividend
  1938  0086  0D29               	rlf	??_lcd_ascii+1,w
  1939  0087  00A7               	movwf	___awmod@dividend+1
  1940  0088  120A  118A  21A8  120A  118A  	fcall	___awmod
  1941  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1942  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1943  008F  0824               	movf	?___awmod,w
  1944  0090  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1945  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1946  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1947  0097  00AA               	movwf	??_lcd_ascii+2
  1948  0098  082A               	movf	??_lcd_ascii+2,w
  1949  0099  00AE               	movwf	lcd_ascii@random+3
  1950  009A                     l1575:
  1951                           
  1952                           ;main_lab2.c: 279:     random[4]=32;
  1953  009A  3020               	movlw	32
  1954  009B  00A8               	movwf	??_lcd_ascii
  1955  009C  0828               	movf	??_lcd_ascii,w
  1956  009D  00AF               	movwf	lcd_ascii@random+4
  1957                           
  1958                           ;main_lab2.c: 280:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1959  009E  300A               	movlw	10
  1960  009F  00A4               	movwf	___awmod@divisor
  1961  00A0  3000               	movlw	0
  1962  00A1  00A5               	movwf	___awmod@divisor+1
  1963  00A2  3064               	movlw	100
  1964  00A3  00F2               	movwf	___awdiv@divisor
  1965  00A4  3000               	movlw	0
  1966  00A5  00F3               	movwf	___awdiv@divisor+1
  1967  00A6  0842               	movf	_conversion2,w
  1968  00A7  00A8               	movwf	??_lcd_ascii
  1969  00A8  01A9               	clrf	??_lcd_ascii+1
  1970  00A9  1003               	clrc
  1971  00AA  0D28               	rlf	??_lcd_ascii,w
  1972  00AB  00F4               	movwf	___awdiv@dividend
  1973  00AC  0D29               	rlf	??_lcd_ascii+1,w
  1974  00AD  00F5               	movwf	___awdiv@dividend+1
  1975  00AE  120A  118A  213F  120A  118A  	fcall	___awdiv
  1976  00B3  0873               	movf	?___awdiv+1,w
  1977  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1978  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1979  00B6  00A7               	movwf	___awmod@dividend+1
  1980  00B7  0872               	movf	?___awdiv,w
  1981  00B8  00A6               	movwf	___awmod@dividend
  1982  00B9  120A  118A  21A8  120A  118A  	fcall	___awmod
  1983  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1984  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1985  00C0  0824               	movf	?___awmod,w
  1986  00C1  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1987  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1988  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1989  00C8  00AA               	movwf	??_lcd_ascii+2
  1990  00C9  082A               	movf	??_lcd_ascii+2,w
  1991  00CA  00B0               	movwf	lcd_ascii@random+5
  1992  00CB                     l1577:
  1993                           
  1994                           ;main_lab2.c: 281:     random[6]=0x2E;
  1995  00CB  302E               	movlw	46
  1996  00CC  00A8               	movwf	??_lcd_ascii
  1997  00CD  0828               	movf	??_lcd_ascii,w
  1998  00CE  00B1               	movwf	lcd_ascii@random+6
  1999  00CF                     l1579:
  2000                           
  2001                           ;main_lab2.c: 282:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  2002  00CF  300A               	movlw	10
  2003  00D0  00A4               	movwf	___awmod@divisor
  2004  00D1  3000               	movlw	0
  2005  00D2  00A5               	movwf	___awmod@divisor+1
  2006  00D3  3064               	movlw	100
  2007  00D4  00F2               	movwf	___awdiv@divisor
  2008  00D5  3000               	movlw	0
  2009  00D6  00F3               	movwf	___awdiv@divisor+1
  2010  00D7  0842               	movf	_conversion2,w
  2011  00D8  00A8               	movwf	??_lcd_ascii
  2012  00D9  01A9               	clrf	??_lcd_ascii+1
  2013  00DA  1003               	clrc
  2014  00DB  0D28               	rlf	??_lcd_ascii,w
  2015  00DC  00F4               	movwf	___awdiv@dividend
  2016  00DD  0D29               	rlf	??_lcd_ascii+1,w
  2017  00DE  00F5               	movwf	___awdiv@dividend+1
  2018  00DF  120A  118A  213F  120A  118A  	fcall	___awdiv
  2019  00E4  0873               	movf	?___awdiv+1,w
  2020  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2021  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2022  00E7  00A7               	movwf	___awmod@dividend+1
  2023  00E8  0872               	movf	?___awdiv,w
  2024  00E9  00A6               	movwf	___awmod@dividend
  2025  00EA  120A  118A  21A8  120A  118A  	fcall	___awmod
  2026  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2027  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2028  00F1  0824               	movf	?___awmod,w
  2029  00F2  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2030  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2031  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2032  00F9  00AA               	movwf	??_lcd_ascii+2
  2033  00FA  082A               	movf	??_lcd_ascii+2,w
  2034  00FB  00B2               	movwf	lcd_ascii@random+7
  2035  00FC                     l1581:
  2036                           
  2037                           ;main_lab2.c: 283:     random[8]=datos_ascii((2*conversion2)%10);
  2038  00FC  300A               	movlw	10
  2039  00FD  00A4               	movwf	___awmod@divisor
  2040  00FE  3000               	movlw	0
  2041  00FF  00A5               	movwf	___awmod@divisor+1
  2042  0100  0842               	movf	_conversion2,w
  2043  0101  00A8               	movwf	??_lcd_ascii
  2044  0102  01A9               	clrf	??_lcd_ascii+1
  2045  0103  1003               	clrc
  2046  0104  0D28               	rlf	??_lcd_ascii,w
  2047  0105  00A6               	movwf	___awmod@dividend
  2048  0106  0D29               	rlf	??_lcd_ascii+1,w
  2049  0107  00A7               	movwf	___awmod@dividend+1
  2050  0108  120A  118A  21A8  120A  118A  	fcall	___awmod
  2051  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2052  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2053  010F  0824               	movf	?___awmod,w
  2054  0110  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2055  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2056  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2057  0117  00AA               	movwf	??_lcd_ascii+2
  2058  0118  082A               	movf	??_lcd_ascii+2,w
  2059  0119  00B3               	movwf	lcd_ascii@random+8
  2060  011A                     l1583:
  2061                           
  2062                           ;main_lab2.c: 284:     random[9]=32;
  2063  011A  3020               	movlw	32
  2064  011B  00A8               	movwf	??_lcd_ascii
  2065  011C  0828               	movf	??_lcd_ascii,w
  2066  011D  00B4               	movwf	lcd_ascii@random+9
  2067                           
  2068                           ;main_lab2.c: 285:     random[10]=datos_ascii(RCREG);
  2069  011E  081A               	movf	26,w	;volatile
  2070  011F  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2071  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0126  00A8               	movwf	??_lcd_ascii
  2074  0127  0828               	movf	??_lcd_ascii,w
  2075  0128  00B5               	movwf	lcd_ascii@random+10
  2076  0129                     l1585:
  2077                           
  2078                           ;main_lab2.c: 286:     random[11]=0x2E;
  2079  0129  302E               	movlw	46
  2080  012A  00A8               	movwf	??_lcd_ascii
  2081  012B  0828               	movf	??_lcd_ascii,w
  2082  012C  00B6               	movwf	lcd_ascii@random+11
  2083  012D                     l1587:
  2084                           
  2085                           ;main_lab2.c: 287:     random[12]=32;
  2086  012D  3020               	movlw	32
  2087  012E  00A8               	movwf	??_lcd_ascii
  2088  012F  0828               	movf	??_lcd_ascii,w
  2089  0130  00B7               	movwf	lcd_ascii@random+12
  2090  0131                     l1589:
  2091                           
  2092                           ;main_lab2.c: 288:     random[13]=32;
  2093  0131  3020               	movlw	32
  2094  0132  00A8               	movwf	??_lcd_ascii
  2095  0133  0828               	movf	??_lcd_ascii,w
  2096  0134  00B8               	movwf	lcd_ascii@random+13
  2097  0135                     l1591:
  2098                           
  2099                           ;main_lab2.c: 289:     random[14]=32;
  2100  0135  3020               	movlw	32
  2101  0136  00A8               	movwf	??_lcd_ascii
  2102  0137  0828               	movf	??_lcd_ascii,w
  2103  0138  00B9               	movwf	lcd_ascii@random+14
  2104  0139                     l1593:
  2105                           
  2106                           ;main_lab2.c: 290:     random[15]=32;
  2107  0139  3020               	movlw	32
  2108  013A  00A8               	movwf	??_lcd_ascii
  2109  013B  0828               	movf	??_lcd_ascii,w
  2110  013C  00BA               	movwf	lcd_ascii@random+15
  2111  013D                     l1595:
  2112                           
  2113                           ;main_lab2.c: 291:     return random;
  2114  013D  302B               	movlw	(low lcd_ascii@random)& (0+255)
  2115  013E                     l116:
  2116  013E  0008               	return
  2117  013F                     __end_of_lcd_ascii:
  2118                           
  2119                           	psect	text12
  2120  024E                     __ptext12:	
  2121 ;; *************** function _datos_ascii *****************
  2122 ;; Defined at:
  2123 ;;		line 204 in file "main_lab2.c"
  2124 ;; Parameters:    Size  Location     Type
  2125 ;;  numero          1    wreg     unsigned char 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  numero          1    4[COMMON] unsigned char 
  2128 ;; Return value:  Size  Location     Type
  2129 ;;                  1    wreg      unsigned char 
  2130 ;; Registers used:
  2131 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2132 ;; Tracked objects:
  2133 ;;		On entry : 0/0
  2134 ;;		On exit  : 0/0
  2135 ;;		Unchanged: 0/0
  2136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2137 ;;      Params:         0       0       0       0       0
  2138 ;;      Locals:         1       0       0       0       0
  2139 ;;      Temps:          2       0       0       0       0
  2140 ;;      Totals:         3       0       0       0       0
  2141 ;;Total ram usage:        3 bytes
  2142 ;; Hardware stack levels used:    1
  2143 ;; Hardware stack levels required when called:    1
  2144 ;; This function calls:
  2145 ;;		Nothing
  2146 ;; This function is called by:
  2147 ;;		_lcd_ascii
  2148 ;; This function uses a non-reentrant model
  2149 ;;
  2150                           
  2151                           
  2152                           ;psect for function _datos_ascii
  2153  024E                     _datos_ascii:
  2154                           
  2155                           ;incstack = 0
  2156                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2157                           ;datos_ascii@numero stored from wreg
  2158  024E  00F4               	movwf	datos_ascii@numero
  2159  024F                     l1175:
  2160                           
  2161                           ;main_lab2.c: 204: unsigned char datos_ascii(uint8_t numero);main_lab2.c: 205: {;main_la
      +                          b2.c: 206:     switch(numero)
  2162  024F  2A64               	goto	l1245
  2163  0250                     l1177:
  2164                           
  2165                           ;main_lab2.c: 209:             return 0x30;
  2166  0250  3030               	movlw	48
  2167  0251  2A8C               	goto	l102
  2168  0252                     l1189:
  2169                           
  2170                           ;main_lab2.c: 216:             return 0x31;
  2171  0252  3031               	movlw	49
  2172  0253  2A8C               	goto	l102
  2173  0254                     l1195:
  2174                           
  2175                           ;main_lab2.c: 220:             return 0x32;
  2176  0254  3032               	movlw	50
  2177  0255  2A8C               	goto	l102
  2178  0256                     l1201:
  2179                           
  2180                           ;main_lab2.c: 224:             return 0x33;
  2181  0256  3033               	movlw	51
  2182  0257  2A8C               	goto	l102
  2183  0258                     l1207:
  2184                           
  2185                           ;main_lab2.c: 228:             return 0x34;
  2186  0258  3034               	movlw	52
  2187  0259  2A8C               	goto	l102
  2188  025A                     l1213:
  2189                           
  2190                           ;main_lab2.c: 232:             return 0x35;
  2191  025A  3035               	movlw	53
  2192  025B  2A8C               	goto	l102
  2193  025C                     l1219:
  2194                           
  2195                           ;main_lab2.c: 236:             return 0x36;
  2196  025C  3036               	movlw	54
  2197  025D  2A8C               	goto	l102
  2198  025E                     l1225:
  2199                           
  2200                           ;main_lab2.c: 240:             return 0x37;
  2201  025E  3037               	movlw	55
  2202  025F  2A8C               	goto	l102
  2203  0260                     l1231:
  2204                           
  2205                           ;main_lab2.c: 244:             return 0x38;
  2206  0260  3038               	movlw	56
  2207  0261  2A8C               	goto	l102
  2208  0262                     l1237:
  2209                           
  2210                           ;main_lab2.c: 248:             return 0x39;
  2211  0262  3039               	movlw	57
  2212  0263  2A8C               	goto	l102
  2213  0264                     l1245:
  2214  0264  0874               	movf	datos_ascii@numero,w
  2215  0265  00F2               	movwf	??_datos_ascii
  2216  0266  01F3               	clrf	??_datos_ascii+1
  2217                           
  2218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2219                           ; Switch size 1, requested type "simple"
  2220                           ; Number of cases is 1, Range of values is 0 to 0
  2221                           ; switch strategies available:
  2222                           ; Name         Instructions Cycles
  2223                           ; simple_byte            4     3 (average)
  2224                           ; direct_byte           11     8 (fixed)
  2225                           ; jumptable            260     6 (fixed)
  2226                           ;	Chosen strategy is simple_byte
  2227  0267  0873               	movf	??_datos_ascii+1,w
  2228  0268  3A00               	xorlw	0	; case 0
  2229  0269  1903               	skipnz
  2230  026A  2A6C               	goto	l1673
  2231  026B  2A50               	goto	l1177
  2232  026C                     l1673:
  2233                           
  2234                           ; Switch size 1, requested type "simple"
  2235                           ; Number of cases is 10, Range of values is 0 to 9
  2236                           ; switch strategies available:
  2237                           ; Name         Instructions Cycles
  2238                           ; simple_byte           31    16 (average)
  2239                           ; direct_byte           38     8 (fixed)
  2240                           ; jumptable            260     6 (fixed)
  2241                           ;	Chosen strategy is simple_byte
  2242  026C  0872               	movf	??_datos_ascii,w
  2243  026D  3A00               	xorlw	0	; case 0
  2244  026E  1903               	skipnz
  2245  026F  2A50               	goto	l1177
  2246  0270  3A01               	xorlw	1	; case 1
  2247  0271  1903               	skipnz
  2248  0272  2A52               	goto	l1189
  2249  0273  3A03               	xorlw	3	; case 2
  2250  0274  1903               	skipnz
  2251  0275  2A54               	goto	l1195
  2252  0276  3A01               	xorlw	1	; case 3
  2253  0277  1903               	skipnz
  2254  0278  2A56               	goto	l1201
  2255  0279  3A07               	xorlw	7	; case 4
  2256  027A  1903               	skipnz
  2257  027B  2A58               	goto	l1207
  2258  027C  3A01               	xorlw	1	; case 5
  2259  027D  1903               	skipnz
  2260  027E  2A5A               	goto	l1213
  2261  027F  3A03               	xorlw	3	; case 6
  2262  0280  1903               	skipnz
  2263  0281  2A5C               	goto	l1219
  2264  0282  3A01               	xorlw	1	; case 7
  2265  0283  1903               	skipnz
  2266  0284  2A5E               	goto	l1225
  2267  0285  3A0F               	xorlw	15	; case 8
  2268  0286  1903               	skipnz
  2269  0287  2A60               	goto	l1231
  2270  0288  3A01               	xorlw	1	; case 9
  2271  0289  1903               	skipnz
  2272  028A  2A62               	goto	l1237
  2273  028B  2A50               	goto	l1177
  2274  028C                     l102:
  2275  028C  0008               	return
  2276  028D                     __end_of_datos_ascii:
  2277                           
  2278                           	psect	text13
  2279  01A8                     __ptext13:	
  2280 ;; *************** function ___awmod *****************
  2281 ;; Defined at:
  2282 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;  divisor         2    4[BANK0 ] int 
  2285 ;;  dividend        2    6[BANK0 ] int 
  2286 ;; Auto vars:     Size  Location     Type
  2287 ;;  sign            1    9[COMMON] unsigned char 
  2288 ;;  counter         1    8[COMMON] unsigned char 
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  2    4[BANK0 ] int 
  2291 ;; Registers used:
  2292 ;;		wreg, status,2, status,0
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       4       0       0       0
  2299 ;;      Locals:         2       0       0       0       0
  2300 ;;      Temps:          1       0       0       0       0
  2301 ;;      Totals:         3       4       0       0       0
  2302 ;;Total ram usage:        7 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; Hardware stack levels required when called:    1
  2305 ;; This function calls:
  2306 ;;		Nothing
  2307 ;; This function is called by:
  2308 ;;		_lcd_ascii
  2309 ;; This function uses a non-reentrant model
  2310 ;;
  2311                           
  2312                           
  2313                           ;psect for function ___awmod
  2314  01A8                     ___awmod:
  2315  01A8                     l1529:	
  2316                           ;incstack = 0
  2317                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2318                           
  2319  01A8  01F9               	clrf	___awmod@sign
  2320  01A9                     l1531:
  2321  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2322  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2323  01AB  1FA7               	btfss	___awmod@dividend+1,7
  2324  01AC  29AE               	goto	u581
  2325  01AD  29AF               	goto	u580
  2326  01AE                     u581:
  2327  01AE  29B6               	goto	l1537
  2328  01AF                     u580:
  2329  01AF                     l1533:
  2330  01AF  09A6               	comf	___awmod@dividend,f
  2331  01B0  09A7               	comf	___awmod@dividend+1,f
  2332  01B1  0AA6               	incf	___awmod@dividend,f
  2333  01B2  1903               	skipnz
  2334  01B3  0AA7               	incf	___awmod@dividend+1,f
  2335  01B4                     l1535:
  2336  01B4  01F9               	clrf	___awmod@sign
  2337  01B5  0AF9               	incf	___awmod@sign,f
  2338  01B6                     l1537:
  2339  01B6  1FA5               	btfss	___awmod@divisor+1,7
  2340  01B7  29B9               	goto	u591
  2341  01B8  29BA               	goto	u590
  2342  01B9                     u591:
  2343  01B9  29BF               	goto	l1541
  2344  01BA                     u590:
  2345  01BA                     l1539:
  2346  01BA  09A4               	comf	___awmod@divisor,f
  2347  01BB  09A5               	comf	___awmod@divisor+1,f
  2348  01BC  0AA4               	incf	___awmod@divisor,f
  2349  01BD  1903               	skipnz
  2350  01BE  0AA5               	incf	___awmod@divisor+1,f
  2351  01BF                     l1541:
  2352  01BF  0824               	movf	___awmod@divisor,w
  2353  01C0  0425               	iorwf	___awmod@divisor+1,w
  2354  01C1  1903               	btfsc	3,2
  2355  01C2  29C4               	goto	u601
  2356  01C3  29C5               	goto	u600
  2357  01C4                     u601:
  2358  01C4  29F4               	goto	l1559
  2359  01C5                     u600:
  2360  01C5                     l1543:
  2361  01C5  01F8               	clrf	___awmod@counter
  2362  01C6  0AF8               	incf	___awmod@counter,f
  2363  01C7  29D3               	goto	l1549
  2364  01C8                     l1545:
  2365  01C8  3001               	movlw	1
  2366  01C9                     u615:
  2367  01C9  1003               	clrc
  2368  01CA  0DA4               	rlf	___awmod@divisor,f
  2369  01CB  0DA5               	rlf	___awmod@divisor+1,f
  2370  01CC  3EFF               	addlw	-1
  2371  01CD  1D03               	skipz
  2372  01CE  29C9               	goto	u615
  2373  01CF                     l1547:
  2374  01CF  3001               	movlw	1
  2375  01D0  00F7               	movwf	??___awmod
  2376  01D1  0877               	movf	??___awmod,w
  2377  01D2  07F8               	addwf	___awmod@counter,f
  2378  01D3                     l1549:
  2379  01D3  1FA5               	btfss	___awmod@divisor+1,7
  2380  01D4  29D6               	goto	u621
  2381  01D5  29D7               	goto	u620
  2382  01D6                     u621:
  2383  01D6  29C8               	goto	l1545
  2384  01D7                     u620:
  2385  01D7                     l1551:
  2386  01D7  0825               	movf	___awmod@divisor+1,w
  2387  01D8  0227               	subwf	___awmod@dividend+1,w
  2388  01D9  1D03               	skipz
  2389  01DA  29DD               	goto	u635
  2390  01DB  0824               	movf	___awmod@divisor,w
  2391  01DC  0226               	subwf	___awmod@dividend,w
  2392  01DD                     u635:
  2393  01DD  1C03               	skipc
  2394  01DE  29E0               	goto	u631
  2395  01DF  29E1               	goto	u630
  2396  01E0                     u631:
  2397  01E0  29E7               	goto	l1555
  2398  01E1                     u630:
  2399  01E1                     l1553:
  2400  01E1  0824               	movf	___awmod@divisor,w
  2401  01E2  02A6               	subwf	___awmod@dividend,f
  2402  01E3  0825               	movf	___awmod@divisor+1,w
  2403  01E4  1C03               	skipc
  2404  01E5  03A7               	decf	___awmod@dividend+1,f
  2405  01E6  02A7               	subwf	___awmod@dividend+1,f
  2406  01E7                     l1555:
  2407  01E7  3001               	movlw	1
  2408  01E8                     u645:
  2409  01E8  1003               	clrc
  2410  01E9  0CA5               	rrf	___awmod@divisor+1,f
  2411  01EA  0CA4               	rrf	___awmod@divisor,f
  2412  01EB  3EFF               	addlw	-1
  2413  01EC  1D03               	skipz
  2414  01ED  29E8               	goto	u645
  2415  01EE                     l1557:
  2416  01EE  3001               	movlw	1
  2417  01EF  02F8               	subwf	___awmod@counter,f
  2418  01F0  1D03               	btfss	3,2
  2419  01F1  29F3               	goto	u651
  2420  01F2  29F4               	goto	u650
  2421  01F3                     u651:
  2422  01F3  29D7               	goto	l1551
  2423  01F4                     u650:
  2424  01F4                     l1559:
  2425  01F4  0879               	movf	___awmod@sign,w
  2426  01F5  1903               	btfsc	3,2
  2427  01F6  29F8               	goto	u661
  2428  01F7  29F9               	goto	u660
  2429  01F8                     u661:
  2430  01F8  29FE               	goto	l1563
  2431  01F9                     u660:
  2432  01F9                     l1561:
  2433  01F9  09A6               	comf	___awmod@dividend,f
  2434  01FA  09A7               	comf	___awmod@dividend+1,f
  2435  01FB  0AA6               	incf	___awmod@dividend,f
  2436  01FC  1903               	skipnz
  2437  01FD  0AA7               	incf	___awmod@dividend+1,f
  2438  01FE                     l1563:
  2439  01FE  0827               	movf	___awmod@dividend+1,w
  2440  01FF  00A5               	movwf	?___awmod+1
  2441  0200  0826               	movf	___awmod@dividend,w
  2442  0201  00A4               	movwf	?___awmod
  2443  0202                     l429:
  2444  0202  0008               	return
  2445  0203                     __end_of___awmod:
  2446                           
  2447                           	psect	text14
  2448  013F                     __ptext14:	
  2449 ;; *************** function ___awdiv *****************
  2450 ;; Defined at:
  2451 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  divisor         2    2[COMMON] int 
  2454 ;;  dividend        2    4[COMMON] int 
  2455 ;; Auto vars:     Size  Location     Type
  2456 ;;  quotient        2    2[BANK0 ] int 
  2457 ;;  sign            1    1[BANK0 ] unsigned char 
  2458 ;;  counter         1    0[BANK0 ] unsigned char 
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  2    2[COMMON] int 
  2461 ;; Registers used:
  2462 ;;		wreg, status,2, status,0
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         4       0       0       0       0
  2469 ;;      Locals:         0       4       0       0       0
  2470 ;;      Temps:          1       0       0       0       0
  2471 ;;      Totals:         5       4       0       0       0
  2472 ;;Total ram usage:        9 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; Hardware stack levels required when called:    1
  2475 ;; This function calls:
  2476 ;;		Nothing
  2477 ;; This function is called by:
  2478 ;;		_lcd_ascii
  2479 ;; This function uses a non-reentrant model
  2480 ;;
  2481                           
  2482                           
  2483                           ;psect for function ___awdiv
  2484  013F                     ___awdiv:
  2485  013F                     l1485:	
  2486                           ;incstack = 0
  2487                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2488                           
  2489  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2490  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2491  0141  01A1               	clrf	___awdiv@sign
  2492  0142                     l1487:
  2493  0142  1FF3               	btfss	___awdiv@divisor+1,7
  2494  0143  2945               	goto	u481
  2495  0144  2946               	goto	u480
  2496  0145                     u481:
  2497  0145  294D               	goto	l1493
  2498  0146                     u480:
  2499  0146                     l1489:
  2500  0146  09F2               	comf	___awdiv@divisor,f
  2501  0147  09F3               	comf	___awdiv@divisor+1,f
  2502  0148  0AF2               	incf	___awdiv@divisor,f
  2503  0149  1903               	skipnz
  2504  014A  0AF3               	incf	___awdiv@divisor+1,f
  2505  014B                     l1491:
  2506  014B  01A1               	clrf	___awdiv@sign
  2507  014C  0AA1               	incf	___awdiv@sign,f
  2508  014D                     l1493:
  2509  014D  1FF5               	btfss	___awdiv@dividend+1,7
  2510  014E  2950               	goto	u491
  2511  014F  2951               	goto	u490
  2512  0150                     u491:
  2513  0150  295A               	goto	l1499
  2514  0151                     u490:
  2515  0151                     l1495:
  2516  0151  09F4               	comf	___awdiv@dividend,f
  2517  0152  09F5               	comf	___awdiv@dividend+1,f
  2518  0153  0AF4               	incf	___awdiv@dividend,f
  2519  0154  1903               	skipnz
  2520  0155  0AF5               	incf	___awdiv@dividend+1,f
  2521  0156                     l1497:
  2522  0156  3001               	movlw	1
  2523  0157  00F6               	movwf	??___awdiv
  2524  0158  0876               	movf	??___awdiv,w
  2525  0159  06A1               	xorwf	___awdiv@sign,f
  2526  015A                     l1499:
  2527  015A  01A2               	clrf	___awdiv@quotient
  2528  015B  01A3               	clrf	___awdiv@quotient+1
  2529  015C                     l1501:
  2530  015C  0872               	movf	___awdiv@divisor,w
  2531  015D  0473               	iorwf	___awdiv@divisor+1,w
  2532  015E  1903               	btfsc	3,2
  2533  015F  2961               	goto	u501
  2534  0160  2962               	goto	u500
  2535  0161                     u501:
  2536  0161  2999               	goto	l1521
  2537  0162                     u500:
  2538  0162                     l1503:
  2539  0162  01A0               	clrf	___awdiv@counter
  2540  0163  0AA0               	incf	___awdiv@counter,f
  2541  0164  2970               	goto	l1509
  2542  0165                     l1505:
  2543  0165  3001               	movlw	1
  2544  0166                     u515:
  2545  0166  1003               	clrc
  2546  0167  0DF2               	rlf	___awdiv@divisor,f
  2547  0168  0DF3               	rlf	___awdiv@divisor+1,f
  2548  0169  3EFF               	addlw	-1
  2549  016A  1D03               	skipz
  2550  016B  2966               	goto	u515
  2551  016C                     l1507:
  2552  016C  3001               	movlw	1
  2553  016D  00F6               	movwf	??___awdiv
  2554  016E  0876               	movf	??___awdiv,w
  2555  016F  07A0               	addwf	___awdiv@counter,f
  2556  0170                     l1509:
  2557  0170  1FF3               	btfss	___awdiv@divisor+1,7
  2558  0171  2973               	goto	u521
  2559  0172  2974               	goto	u520
  2560  0173                     u521:
  2561  0173  2965               	goto	l1505
  2562  0174                     u520:
  2563  0174                     l1511:
  2564  0174  3001               	movlw	1
  2565  0175                     u535:
  2566  0175  1003               	clrc
  2567  0176  0DA2               	rlf	___awdiv@quotient,f
  2568  0177  0DA3               	rlf	___awdiv@quotient+1,f
  2569  0178  3EFF               	addlw	-1
  2570  0179  1D03               	skipz
  2571  017A  2975               	goto	u535
  2572  017B  0873               	movf	___awdiv@divisor+1,w
  2573  017C  0275               	subwf	___awdiv@dividend+1,w
  2574  017D  1D03               	skipz
  2575  017E  2981               	goto	u545
  2576  017F  0872               	movf	___awdiv@divisor,w
  2577  0180  0274               	subwf	___awdiv@dividend,w
  2578  0181                     u545:
  2579  0181  1C03               	skipc
  2580  0182  2984               	goto	u541
  2581  0183  2985               	goto	u540
  2582  0184                     u541:
  2583  0184  298C               	goto	l1517
  2584  0185                     u540:
  2585  0185                     l1513:
  2586  0185  0872               	movf	___awdiv@divisor,w
  2587  0186  02F4               	subwf	___awdiv@dividend,f
  2588  0187  0873               	movf	___awdiv@divisor+1,w
  2589  0188  1C03               	skipc
  2590  0189  03F5               	decf	___awdiv@dividend+1,f
  2591  018A  02F5               	subwf	___awdiv@dividend+1,f
  2592  018B                     l1515:
  2593  018B  1422               	bsf	___awdiv@quotient,0
  2594  018C                     l1517:
  2595  018C  3001               	movlw	1
  2596  018D                     u555:
  2597  018D  1003               	clrc
  2598  018E  0CF3               	rrf	___awdiv@divisor+1,f
  2599  018F  0CF2               	rrf	___awdiv@divisor,f
  2600  0190  3EFF               	addlw	-1
  2601  0191  1D03               	skipz
  2602  0192  298D               	goto	u555
  2603  0193                     l1519:
  2604  0193  3001               	movlw	1
  2605  0194  02A0               	subwf	___awdiv@counter,f
  2606  0195  1D03               	btfss	3,2
  2607  0196  2998               	goto	u561
  2608  0197  2999               	goto	u560
  2609  0198                     u561:
  2610  0198  2974               	goto	l1511
  2611  0199                     u560:
  2612  0199                     l1521:
  2613  0199  0821               	movf	___awdiv@sign,w
  2614  019A  1903               	btfsc	3,2
  2615  019B  299D               	goto	u571
  2616  019C  299E               	goto	u570
  2617  019D                     u571:
  2618  019D  29A3               	goto	l1525
  2619  019E                     u570:
  2620  019E                     l1523:
  2621  019E  09A2               	comf	___awdiv@quotient,f
  2622  019F  09A3               	comf	___awdiv@quotient+1,f
  2623  01A0  0AA2               	incf	___awdiv@quotient,f
  2624  01A1  1903               	skipnz
  2625  01A2  0AA3               	incf	___awdiv@quotient+1,f
  2626  01A3                     l1525:
  2627  01A3  0823               	movf	___awdiv@quotient+1,w
  2628  01A4  00F3               	movwf	?___awdiv+1
  2629  01A5  0822               	movf	___awdiv@quotient,w
  2630  01A6  00F2               	movwf	?___awdiv
  2631  01A7                     l416:
  2632  01A7  0008               	return
  2633  01A8                     __end_of___awdiv:
  2634                           
  2635                           	psect	text15
  2636  03E9                     __ptext15:	
  2637 ;; *************** function _isr *****************
  2638 ;; Defined at:
  2639 ;;		line 78 in file "main_lab2.c"
  2640 ;; Parameters:    Size  Location     Type
  2641 ;;		None
  2642 ;; Auto vars:     Size  Location     Type
  2643 ;;		None
  2644 ;; Return value:  Size  Location     Type
  2645 ;;                  1    wreg      void 
  2646 ;; Registers used:
  2647 ;;		wreg
  2648 ;; Tracked objects:
  2649 ;;		On entry : 0/0
  2650 ;;		On exit  : 0/0
  2651 ;;		Unchanged: 0/0
  2652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2653 ;;      Params:         0       0       0       0       0
  2654 ;;      Locals:         0       0       0       0       0
  2655 ;;      Temps:          2       0       0       0       0
  2656 ;;      Totals:         2       0       0       0       0
  2657 ;;Total ram usage:        2 bytes
  2658 ;; Hardware stack levels used:    1
  2659 ;; This function calls:
  2660 ;;		Nothing
  2661 ;; This function is called by:
  2662 ;;		Interrupt level 1
  2663 ;; This function uses a non-reentrant model
  2664 ;;
  2665                           
  2666                           
  2667                           ;psect for function _isr
  2668  03E9                     _isr:
  2669  03E9                     i1l1095:
  2670                           
  2671                           ;main_lab2.c: 81:      if(PIR1bits.RCIF)
  2672  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  2673  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  2674  03EB  1E8C               	btfss	12,5	;volatile
  2675  03EC  2BEE               	goto	u24_21
  2676  03ED  2BEF               	goto	u24_20
  2677  03EE                     u24_21:
  2678  03EE  2BF2               	goto	i1l70
  2679  03EF                     u24_20:
  2680  03EF                     i1l1097:
  2681                           
  2682                           ;main_lab2.c: 82:     {;main_lab2.c: 83:         RCREG=dato_recibido;
  2683  03EF  087B               	movf	_dato_recibido,w
  2684  03F0  009A               	movwf	26	;volatile
  2685  03F1                     i1l1099:
  2686                           
  2687                           ;main_lab2.c: 84:         PIR1bits.RCIF=0;
  2688  03F1  128C               	bcf	12,5	;volatile
  2689  03F2                     i1l70:
  2690  03F2  0871               	movf	??_isr+1,w
  2691  03F3  008A               	movwf	10
  2692  03F4  0E70               	swapf	??_isr,w
  2693  03F5  0083               	movwf	3
  2694  03F6  0EFE               	swapf	btemp,f
  2695  03F7  0E7E               	swapf	btemp,w
  2696  03F8  0009               	retfie
  2697  03F9                     __end_of_isr:
  2698  007E                     btemp	set	126	;btemp
  2699  007E                     wtemp0	set	126
  2700                           
  2701                           	psect	intentry
  2702  0004                     __pintentry:	
  2703                           ;incstack = 0
  2704                           ; Regs used in _isr: [wreg]
  2705                           
  2706  0004                     interrupt_function:
  2707  007E                     saved_w	set	btemp
  2708  0004  00FE               	movwf	btemp
  2709  0005  0E03               	swapf	3,w
  2710  0006  00F0               	movwf	??_isr
  2711  0007  080A               	movf	10,w
  2712  0008  00F1               	movwf	??_isr+1
  2713  0009  120A  118A  2BE9   	ljmp	_isr
  2714                           
  2715                           	psect	config
  2716                           
  2717                           ;Config register CONFIG1 @ 0x2007
  2718                           ;	Oscillator Selection bits
  2719                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2720                           ;	Watchdog Timer Enable bit
  2721                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2722                           ;	Power-up Timer Enable bit
  2723                           ;	PWRTE = OFF, PWRT disabled
  2724                           ;	RE3/MCLR pin function select bit
  2725                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2726                           ;	Code Protection bit
  2727                           ;	CP = OFF, Program memory code protection is disabled
  2728                           ;	Data Code Protection bit
  2729                           ;	CPD = OFF, Data memory code protection is disabled
  2730                           ;	Brown Out Reset Selection bits
  2731                           ;	BOREN = OFF, BOR disabled
  2732                           ;	Internal External Switchover bit
  2733                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2734                           ;	Fail-Safe Clock Monitor Enabled bit
  2735                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2736                           ;	Low Voltage Programming Enable bit
  2737                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2738                           ;	In-Circuit Debugger Mode bit
  2739                           ;	DEBUG = 0x1, unprogrammed default
  2740  2007                     	org	8199
  2741  2007  20D4               	dw	8404
  2742                           
  2743                           ;Config register CONFIG2 @ 0x2008
  2744                           ;	Brown-out Reset Selection bit
  2745                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2746                           ;	Flash Program Memory Self Write Enable bits
  2747                           ;	WRT = OFF, Write protection off
  2748  2008                     	org	8200
  2749  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     31      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3878
                                             29 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                           _lcd_init
                          _lcd_linea
                     _recepcion_uart
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     212
                                             27 BANK0      2     0      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recepcion_uart                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    3289
                                              8 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              7 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _recepcion_uart
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 15:02:59 2021

                      pc 0002                       l81 0342                       l97 037B  
                     l89 02C7             ___awdiv@sign 0021          ?_recepcion_uart 0070  
                     fsr 0004                      l102 028C                      l116 013E  
                    l140 0394                      l125 03D3                      l143 03E8  
                    l152 031B                      l146 03A9                      l158 02F3  
                    l416 01A7                      l177 03BE                      l429 0202  
                    l771 03D9                      l773 03DA                      l781 03C4  
                    l775 03DB                      l783 03CC                      l791 03B5  
                    l777 03E5                      l769 03D5                      l785 03D0  
                    l793 03B6                      l881 039A                      l779 03BF  
                    l795 03B9                      l787 03AA                      l971 031C  
                    l883 039B                      l797 03BA                      l789 03B1  
                    l981 0327                      l973 0320                      l885 039C  
                    l799 03BB                      l991 033B                      l983 032C  
                    l975 0321                      l887 03A6                      l879 0396  
                    l993 033C                      l985 0330                      l977 0325  
                    l995 033F                      l987 0331                      l979 0326  
                    l997 037C                      l989 0336                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u500 0162  
                    u501 0161                      u520 0174                      u600 01C5  
                    u440 0293                      u521 0173                      u601 01C4  
                    u441 0292                      u450 02CE                      u515 0166  
                    u451 02CD                      u540 0185                      u620 01D7  
                    u460 02E4                      u541 0184                      u621 01D6  
                    u461 02E3                      u630 01E1                      u470 031B  
                    u535 0175                      u631 01E0                      u615 01C9  
                    u471 031A                      u560 0199                      u480 0146  
                    u561 0198                      u545 0181                      u481 0145  
                    u570 019E                      u490 0151                      u650 01F4  
                    u571 019D                      u555 018D                      u491 0150  
                    u651 01F3                      u635 01DD                      u707 03CE  
                    u660 01F9                      u580 01AF                      u661 01F8  
                    u645 01E8                      u581 01AE                      u717 03E0  
                    u590 01BA                      u591 01B9                      u677 029A  
                    u687 02AB                      u697 03A1                      _dat 0395  
                    _cmd 03D4                      _isr 03E9                      fsr0 0004  
                    indf 0000             ___awmod@sign 0079                     l1201 0256  
                   l1033 036B                     l1025 0362                     l1027 0363  
                   l1213 025A                     l1029 0368                     l1231 0260  
                   l1207 0258                     l1225 025E                     l1219 025C  
                   l1501 015C                     l1237 0262                     l1245 0264  
                   l1341 02A3                     l1333 028D                     ?_dat 0070  
                   l1511 0174                     l1503 0162                     l1175 024F  
                   l1343 02A5                     l1513 0185                     l1505 0165  
                   l1521 0199                     l1177 0250                     l1361 02CE  
                   l1345 02AE                     l1337 0294                     l1353 02B4  
                   l1601 0213                     ?_cmd 0070                     l1523 019E  
                   l1515 018B                     l1507 016C                     l1531 01A9  
                   l1195 0254                     l1371 02E9                     l1363 02D3  
                   l1347 02B2                     l1339 029D                     l1603 0218  
                   l1525 01A3                     l1517 018C                     l1509 0170  
                   l1541 01BF                     l1533 01AF                     l1189 0252  
                   l1373 02ED                     l1365 02D7                     l1381 030B  
                   l1605 0225                     l1519 0193                     l1551 01D7  
                   l1543 01C5                     l1535 01B4                     l1367 02DE  
                   l1359 02C9                     l1375 02F4                     l1607 0230  
                   l1561 01F9                     l1553 01E1                     l1545 01C8  
                   l1537 01B6                     l1529 01A8                     l1369 02E4  
                   l1377 02F5                     l1491 014B                     l1563 01FE  
                   l1555 01E7                     l1547 01CF                     l1539 01BA  
                   l1571 004F                     l1379 0303                     l1493 014D  
                   l1485 013F                     l1557 01EE                     l1549 01D3  
                   l1581 00FC                     l1573 007C                     l1495 0151  
                   l1487 0142                     l1559 01F4                     l1591 0135  
                   l1583 011A                     l1575 009A                     l1567 001C  
                   l1671 0373                     l1497 0156                     l1489 0146  
                   l1673 026C                     l1593 0139                     l1585 0129  
                   l1577 00CB                     l1569 004B                     l1499 015A  
                   l1595 013D                     l1587 012D                     l1579 00CF  
                   l1589 0131                     l1669 02BF                     l1599 0203  
                   ?_isr 0070                     STR_1 0353                     i1l70 03F2  
                   dat@b 0074                     cmd@a 0074                     _main 0203  
                   _show 02F4                     btemp 007E                     start 000C  
                  ??_dat 0072                    ??_cmd 0072                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 01A8          __end_of___awmod 0203  
                  ?_show 003B                    _ANSEL 0188          ___awdiv@divisor 0072  
        ___awdiv@counter 0020                    _RCREG 001A                    u24_20 03EF  
                  u24_21 03EE                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _setup 031C  
                  pclath 000A                    show@s 003B            lcd_linea@temp 0078  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 024E             __end_of_show 031C                   ??_main 003D  
                 ??_show 007A     __size_of_datos_ascii 003F                   _ADRESH 001E  
       ___awdiv@dividend 0074                   ?_setup 0070                   _ANSELH 0189  
                 i1l1095 03E9                   i1l1097 03EF                   i1l1099 03F1  
                 _SPBRGH 009A         __end_of_lcd_init 0395          lcd_ascii@random 002B  
              ??___awdiv 0076                ??___awmod 0077         ___awdiv@quotient 0022  
        ___awmod@divisor 0024          ___awmod@counter 0078             ?_uart_config 0070  
                 saved_w 007E  __end_of__initialization 0018         ??_recepcion_uart 0072  
         __pcstackCOMMON 0070               _adc_config 03BF            __end_of_setup 0343  
     __size_of_lcd_ascii 0123       __size_of_lcd_linea 002C                  ??_setup 0073  
             __pbssBANK0 003F               __pmaintext 0203               __pintentry 0004  
              ?_lcd_init 0070               __stringtab 0343        __end_of_lcd_ascii 013F  
      __end_of_lcd_linea 02F4              ?_adc_config 0070                  ___awdiv 013F  
                ___awmod 01A8                _ANSELbits 0188                  __ptext1 028D  
                __ptext2 02F4                  __ptext3 0395                  __ptext4 031C  
                __ptext5 03AA                  __ptext6 03BF                  __ptext7 0362  
                __ptext8 02C8                  __ptext9 037C             __size_of_dat 0015  
           __size_of_cmd 0015             __size_of_isr 0010         ___awmod@dividend 0026  
   __size_of_uart_config 0015               ??_lcd_init 0075     end_of_initialization 0018  
              _RCSTAbits 0018            ??_datos_ascii 0072               _toggle_adc 028D  
              _TRISDbits 0088      __size_of_adc_config 0015               lcd_linea@a 0077  
             lcd_linea@b 0075               lcd_linea@z 0079                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F      __end_of_datos_ascii 028D  
            __end_of_dat 03AA              __end_of_cmd 03E9              __end_of_isr 03F9  
      datos_ascii@numero 0074              ?_toggle_adc 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0019  
              _centenas3 0041             ??_adc_config 0072                 ?___awdiv 0072  
               ?___awmod 0024            _dato_recibido 007B                _lcd_ascii 001C  
            _datos_ascii 024E                _lcd_linea 02C8                __pstrings 0343  
__size_of_recepcion_uart 001A           __size_of_setup 0027       __end_of_adc_config 03D4  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
    __size_of_toggle_adc 003B               ?_lcd_ascii 0070                _unidades3 003F  
             ?_lcd_linea 0075               _ADCON0bits 001F              __stringbase 0352  
             _ADCON1bits 009F            ??_uart_config 0072              _cuenta_uart 007A  
            _conversion1 0043              _conversion2 0042         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 0353                 _decenas3 0040  
               __ptext10 03D4                 __ptext11 001C                 __ptext12 024E  
               __ptext13 01A8                 __ptext14 013F                 __ptext15 03E9  
    __end_of_uart_config 03BF                 _lcd_init 037C            __size_of_main 004B  
          __size_of_show 0028              ??_lcd_ascii 0028              ??_lcd_linea 0076  
         _recepcion_uart 0362               _INTCONbits 000B             ??_toggle_adc 0072  
               intlevel1 0000                stringcode 034D               _OSCCONbits 008F  
     __end_of_toggle_adc 02C8   __end_of_recepcion_uart 037C             ?_datos_ascii 0070  
            _uart_config 03AA                 stringdir 034D                 stringtab 0343  
