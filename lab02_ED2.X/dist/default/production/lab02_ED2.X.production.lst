

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Jul 28 15:40:44 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  008F                     	;# 
   109  0090                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0095                     	;# 
   117  0096                     	;# 
   118  0097                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009A                     	;# 
   122  009B                     	;# 
   123  009C                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  0105                     	;# 
   128  0107                     	;# 
   129  0108                     	;# 
   130  0109                     	;# 
   131  010C                     	;# 
   132  010C                     	;# 
   133  010D                     	;# 
   134  010E                     	;# 
   135  010F                     	;# 
   136  0185                     	;# 
   137  0187                     	;# 
   138  0188                     	;# 
   139  0189                     	;# 
   140  018C                     	;# 
   141  018D                     	;# 
   142  0000                     	;# 
   143  0001                     	;# 
   144  0002                     	;# 
   145  0003                     	;# 
   146  0004                     	;# 
   147  0005                     	;# 
   148  0006                     	;# 
   149  0007                     	;# 
   150  0008                     	;# 
   151  0009                     	;# 
   152  000A                     	;# 
   153  000B                     	;# 
   154  000C                     	;# 
   155  000D                     	;# 
   156  000E                     	;# 
   157  000E                     	;# 
   158  000F                     	;# 
   159  0010                     	;# 
   160  0011                     	;# 
   161  0012                     	;# 
   162  0013                     	;# 
   163  0014                     	;# 
   164  0015                     	;# 
   165  0015                     	;# 
   166  0016                     	;# 
   167  0017                     	;# 
   168  0018                     	;# 
   169  0019                     	;# 
   170  001A                     	;# 
   171  001B                     	;# 
   172  001B                     	;# 
   173  001C                     	;# 
   174  001D                     	;# 
   175  001E                     	;# 
   176  001F                     	;# 
   177  0081                     	;# 
   178  0085                     	;# 
   179  0086                     	;# 
   180  0087                     	;# 
   181  0088                     	;# 
   182  0089                     	;# 
   183  008C                     	;# 
   184  008D                     	;# 
   185  008E                     	;# 
   186  008F                     	;# 
   187  0090                     	;# 
   188  0091                     	;# 
   189  0092                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0093                     	;# 
   193  0094                     	;# 
   194  0095                     	;# 
   195  0096                     	;# 
   196  0097                     	;# 
   197  0098                     	;# 
   198  0099                     	;# 
   199  009A                     	;# 
   200  009B                     	;# 
   201  009C                     	;# 
   202  009D                     	;# 
   203  009E                     	;# 
   204  009F                     	;# 
   205  0105                     	;# 
   206  0107                     	;# 
   207  0108                     	;# 
   208  0109                     	;# 
   209  010C                     	;# 
   210  010C                     	;# 
   211  010D                     	;# 
   212  010E                     	;# 
   213  010F                     	;# 
   214  0185                     	;# 
   215  0187                     	;# 
   216  0188                     	;# 
   217  0189                     	;# 
   218  018C                     	;# 
   219  018D                     	;# 
   220  0000                     	;# 
   221  0001                     	;# 
   222  0002                     	;# 
   223  0003                     	;# 
   224  0004                     	;# 
   225  0005                     	;# 
   226  0006                     	;# 
   227  0007                     	;# 
   228  0008                     	;# 
   229  0009                     	;# 
   230  000A                     	;# 
   231  000B                     	;# 
   232  000C                     	;# 
   233  000D                     	;# 
   234  000E                     	;# 
   235  000E                     	;# 
   236  000F                     	;# 
   237  0010                     	;# 
   238  0011                     	;# 
   239  0012                     	;# 
   240  0013                     	;# 
   241  0014                     	;# 
   242  0015                     	;# 
   243  0015                     	;# 
   244  0016                     	;# 
   245  0017                     	;# 
   246  0018                     	;# 
   247  0019                     	;# 
   248  001A                     	;# 
   249  001B                     	;# 
   250  001B                     	;# 
   251  001C                     	;# 
   252  001D                     	;# 
   253  001E                     	;# 
   254  001F                     	;# 
   255  0081                     	;# 
   256  0085                     	;# 
   257  0086                     	;# 
   258  0087                     	;# 
   259  0088                     	;# 
   260  0089                     	;# 
   261  008C                     	;# 
   262  008D                     	;# 
   263  008E                     	;# 
   264  008F                     	;# 
   265  0090                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0093                     	;# 
   271  0094                     	;# 
   272  0095                     	;# 
   273  0096                     	;# 
   274  0097                     	;# 
   275  0098                     	;# 
   276  0099                     	;# 
   277  009A                     	;# 
   278  009B                     	;# 
   279  009C                     	;# 
   280  009D                     	;# 
   281  009E                     	;# 
   282  009F                     	;# 
   283  0105                     	;# 
   284  0107                     	;# 
   285  0108                     	;# 
   286  0109                     	;# 
   287  010C                     	;# 
   288  010C                     	;# 
   289  010D                     	;# 
   290  010E                     	;# 
   291  010F                     	;# 
   292  0185                     	;# 
   293  0187                     	;# 
   294  0188                     	;# 
   295  0189                     	;# 
   296  018C                     	;# 
   297  018D                     	;# 
   298  0000                     	;# 
   299  0001                     	;# 
   300  0002                     	;# 
   301  0003                     	;# 
   302  0004                     	;# 
   303  0005                     	;# 
   304  0006                     	;# 
   305  0007                     	;# 
   306  0008                     	;# 
   307  0009                     	;# 
   308  000A                     	;# 
   309  000B                     	;# 
   310  000C                     	;# 
   311  000D                     	;# 
   312  000E                     	;# 
   313  000E                     	;# 
   314  000F                     	;# 
   315  0010                     	;# 
   316  0011                     	;# 
   317  0012                     	;# 
   318  0013                     	;# 
   319  0014                     	;# 
   320  0015                     	;# 
   321  0015                     	;# 
   322  0016                     	;# 
   323  0017                     	;# 
   324  0018                     	;# 
   325  0019                     	;# 
   326  001A                     	;# 
   327  001B                     	;# 
   328  001B                     	;# 
   329  001C                     	;# 
   330  001D                     	;# 
   331  001E                     	;# 
   332  001F                     	;# 
   333  0081                     	;# 
   334  0085                     	;# 
   335  0086                     	;# 
   336  0087                     	;# 
   337  0088                     	;# 
   338  0089                     	;# 
   339  008C                     	;# 
   340  008D                     	;# 
   341  008E                     	;# 
   342  008F                     	;# 
   343  0090                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0093                     	;# 
   349  0094                     	;# 
   350  0095                     	;# 
   351  0096                     	;# 
   352  0097                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009A                     	;# 
   356  009B                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  0105                     	;# 
   362  0107                     	;# 
   363  0108                     	;# 
   364  0109                     	;# 
   365  010C                     	;# 
   366  010C                     	;# 
   367  010D                     	;# 
   368  010E                     	;# 
   369  010F                     	;# 
   370  0185                     	;# 
   371  0187                     	;# 
   372  0188                     	;# 
   373  0189                     	;# 
   374  018C                     	;# 
   375  018D                     	;# 
   376  0000                     	;# 
   377  0001                     	;# 
   378  0002                     	;# 
   379  0003                     	;# 
   380  0004                     	;# 
   381  0005                     	;# 
   382  0006                     	;# 
   383  0007                     	;# 
   384  0008                     	;# 
   385  0009                     	;# 
   386  000A                     	;# 
   387  000B                     	;# 
   388  000C                     	;# 
   389  000D                     	;# 
   390  000E                     	;# 
   391  000E                     	;# 
   392  000F                     	;# 
   393  0010                     	;# 
   394  0011                     	;# 
   395  0012                     	;# 
   396  0013                     	;# 
   397  0014                     	;# 
   398  0015                     	;# 
   399  0015                     	;# 
   400  0016                     	;# 
   401  0017                     	;# 
   402  0018                     	;# 
   403  0019                     	;# 
   404  001A                     	;# 
   405  001B                     	;# 
   406  001B                     	;# 
   407  001C                     	;# 
   408  001D                     	;# 
   409  001E                     	;# 
   410  001F                     	;# 
   411  0081                     	;# 
   412  0085                     	;# 
   413  0086                     	;# 
   414  0087                     	;# 
   415  0088                     	;# 
   416  0089                     	;# 
   417  008C                     	;# 
   418  008D                     	;# 
   419  008E                     	;# 
   420  008F                     	;# 
   421  0090                     	;# 
   422  0091                     	;# 
   423  0092                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0093                     	;# 
   427  0094                     	;# 
   428  0095                     	;# 
   429  0096                     	;# 
   430  0097                     	;# 
   431  0098                     	;# 
   432  0099                     	;# 
   433  009A                     	;# 
   434  009B                     	;# 
   435  009C                     	;# 
   436  009D                     	;# 
   437  009E                     	;# 
   438  009F                     	;# 
   439  0105                     	;# 
   440  0107                     	;# 
   441  0108                     	;# 
   442  0109                     	;# 
   443  010C                     	;# 
   444  010C                     	;# 
   445  010D                     	;# 
   446  010E                     	;# 
   447  010F                     	;# 
   448  0185                     	;# 
   449  0187                     	;# 
   450  0188                     	;# 
   451  0189                     	;# 
   452  018C                     	;# 
   453  018D                     	;# 
   454  0018                     _RCSTAbits	set	24
   455  001E                     _ADRESH	set	30
   456  001F                     _ADCON0bits	set	31
   457  000B                     _INTCONbits	set	11
   458  0008                     _PORTD	set	8
   459  0006                     _PORTB	set	6
   460  001A                     _RCREG	set	26
   461  000C                     _PIR1bits	set	12
   462  0047                     _RD7	set	71
   463  0046                     _RD6	set	70
   464  0045                     _RD5	set	69
   465  009A                     _SPBRGH	set	154
   466  0099                     _SPBRG	set	153
   467  0098                     _TXSTAbits	set	152
   468  009F                     _ADCON1bits	set	159
   469  008C                     _PIE1bits	set	140
   470  008F                     _OSCCONbits	set	143
   471  0088                     _TRISDbits	set	136
   472  0086                     _TRISB	set	134
   473  0187                     _BAUDCTLbits	set	391
   474  0188                     _ANSELbits	set	392
   475  0189                     _ANSELH	set	393
   476  0188                     _ANSEL	set	392
   477                           
   478                           	psect	strings
   479  0343                     __pstrings:
   480  0343                     stringtab:
   481  0343                     __stringtab:
   482                           
   483                           ;	String table - string pointers are 1 byte each
   484  0343  1BFF               	btfsc	btemp+1,7
   485  0344  2B4D               	ljmp	stringcode
   486  0345  1383               	bcf	3,7
   487  0346  187F               	btfsc	btemp+1,0
   488  0347  1783               	bsf	3,7
   489  0348  0800               	movf	0,w
   490  0349  0A84               	incf	4,f
   491  034A  1903               	skipnz
   492  034B  0AFF               	incf	btemp+1,f
   493  034C  0008               	return
   494  034D                     stringcode:
   495  034D                     stringdir:
   496  034D  3003               	movlw	high stringdir
   497  034E  008A               	movwf	10
   498  034F  0804               	movf	4,w
   499  0350  0A84               	incf	4,f
   500  0351  0782               	addwf	2,f
   501  0352                     __stringbase:
   502  0352  3400               	retlw	0
   503  0353                     __end_of__stringtab:
   504  0353                     STR_1:
   505  0353  3420               	retlw	32	;' '
   506  0354  3453               	retlw	83	;'S'
   507  0355  3431               	retlw	49	;'1'
   508  0356  3420               	retlw	32	;' '
   509  0357  3420               	retlw	32	;' '
   510  0358  3420               	retlw	32	;' '
   511  0359  3453               	retlw	83	;'S'
   512  035A  3432               	retlw	50	;'2'
   513  035B  3420               	retlw	32	;' '
   514  035C  3420               	retlw	32	;' '
   515  035D  3420               	retlw	32	;' '
   516  035E  3453               	retlw	83	;'S'
   517  035F  3433               	retlw	51	;'3'
   518  0360  3420               	retlw	32	;' '
   519  0361  3400               	retlw	0
   520                           
   521                           	psect	cinit
   522  000F                     start_initialization:	
   523                           ; #config settings
   524                           
   525  000F                     __initialization:
   526                           
   527                           ; Clear objects allocated to COMMON
   528  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   529  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   530                           
   531                           ; Clear objects allocated to BANK0
   532  0011  1283               	bcf	3,5	;RP0=0, select bank0
   533  0012  1303               	bcf	3,6	;RP1=0, select bank0
   534  0013  01BF               	clrf	__pbssBANK0& (0+127)
   535  0014  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   536  0015  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   537  0016  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   538  0017  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   539  0018                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0018                     __end_of__initialization:
   543  0018  0183               	clrf	3
   544  0019  120A  118A  2A03   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssCOMMON
   547  007A                     __pbssCOMMON:
   548  007A                     _centenas3:
   549  007A                     	ds	1
   550  007B                     _dato_recibido:
   551  007B                     	ds	1
   552                           
   553                           	psect	bssBANK0
   554  003F                     __pbssBANK0:
   555  003F                     _unidades3:
   556  003F                     	ds	1
   557  0040                     _decenas3:
   558  0040                     	ds	1
   559  0041                     _cuenta_uart:
   560  0041                     	ds	1
   561  0042                     _conversion2:
   562  0042                     	ds	1
   563  0043                     _conversion1:
   564  0043                     	ds	1
   565                           
   566                           	psect	cstackCOMMON
   567  0070                     __pcstackCOMMON:
   568  0070                     ?_setup:
   569  0070                     ?_lcd_init:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_cmd:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_toggle_adc:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_recepcion_uart:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ?_lcd_ascii:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_adc_config:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_uart_config:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_isr:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ??_isr:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_main:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_datos_ascii:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_dat:	
   603                           ; 1 bytes @ 0x0
   604                           
   605                           
   606                           ; 1 bytes @ 0x0
   607  0070                     	ds	2
   608  0072                     ??_cmd:
   609  0072                     ??_toggle_adc:	
   610                           ; 1 bytes @ 0x2
   611                           
   612  0072                     ??_recepcion_uart:	
   613                           ; 1 bytes @ 0x2
   614                           
   615  0072                     ??_adc_config:	
   616                           ; 1 bytes @ 0x2
   617                           
   618  0072                     ??_uart_config:	
   619                           ; 1 bytes @ 0x2
   620                           
   621  0072                     ??_datos_ascii:	
   622                           ; 1 bytes @ 0x2
   623                           
   624  0072                     ??_dat:	
   625                           ; 1 bytes @ 0x2
   626                           
   627  0072                     ?___awdiv:	
   628                           ; 1 bytes @ 0x2
   629                           
   630  0072                     ___awdiv@divisor:	
   631                           ; 2 bytes @ 0x2
   632                           
   633                           
   634                           ; 2 bytes @ 0x2
   635  0072                     	ds	1
   636  0073                     ??_setup:
   637                           
   638                           ; 1 bytes @ 0x3
   639  0073                     	ds	1
   640  0074                     datos_ascii@numero:
   641  0074                     cmd@a:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     dat@b:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ___awdiv@dividend:	
   648                           ; 1 bytes @ 0x4
   649                           
   650                           
   651                           ; 2 bytes @ 0x4
   652  0074                     	ds	1
   653  0075                     ??_lcd_init:
   654  0075                     ?_lcd_linea:	
   655                           ; 1 bytes @ 0x5
   656                           
   657  0075                     lcd_linea@b:	
   658                           ; 1 bytes @ 0x5
   659                           
   660                           
   661                           ; 1 bytes @ 0x5
   662  0075                     	ds	1
   663  0076                     ??_lcd_linea:
   664  0076                     ??___awdiv:	
   665                           ; 1 bytes @ 0x6
   666                           
   667                           
   668                           ; 1 bytes @ 0x6
   669  0076                     	ds	1
   670  0077                     ??___awmod:
   671  0077                     lcd_linea@a:	
   672                           ; 1 bytes @ 0x7
   673                           
   674                           
   675                           ; 1 bytes @ 0x7
   676  0077                     	ds	1
   677  0078                     lcd_linea@temp:
   678  0078                     ___awmod@counter:	
   679                           ; 1 bytes @ 0x8
   680                           
   681                           
   682                           ; 1 bytes @ 0x8
   683  0078                     	ds	1
   684  0079                     lcd_linea@z:
   685  0079                     ___awmod@sign:	
   686                           ; 1 bytes @ 0x9
   687                           
   688                           
   689                           ; 1 bytes @ 0x9
   690  0079                     	ds	1
   691  007A                     ??_show:
   692                           
   693                           	psect	cstackBANK0
   694  0020                     __pcstackBANK0:	
   695                           ; 1 bytes @ 0xA
   696                           
   697  0020                     ___awdiv@counter:
   698                           
   699                           ; 1 bytes @ 0x0
   700  0020                     	ds	1
   701  0021                     ___awdiv@sign:
   702                           
   703                           ; 1 bytes @ 0x1
   704  0021                     	ds	1
   705  0022                     ___awdiv@quotient:
   706                           
   707                           ; 2 bytes @ 0x2
   708  0022                     	ds	2
   709  0024                     ?___awmod:
   710  0024                     ___awmod@divisor:	
   711                           ; 2 bytes @ 0x4
   712                           
   713                           
   714                           ; 2 bytes @ 0x4
   715  0024                     	ds	2
   716  0026                     ___awmod@dividend:
   717                           
   718                           ; 2 bytes @ 0x6
   719  0026                     	ds	2
   720  0028                     ??_lcd_ascii:
   721                           
   722                           ; 1 bytes @ 0x8
   723  0028                     	ds	3
   724  002B                     lcd_ascii@random:
   725                           
   726                           ; 16 bytes @ 0xB
   727  002B                     	ds	16
   728  003B                     ?_show:
   729  003B                     show@s:	
   730                           ; 1 bytes @ 0x1B
   731                           
   732                           
   733                           ; 2 bytes @ 0x1B
   734  003B                     	ds	2
   735  003D                     ??_main:
   736                           
   737                           ; 1 bytes @ 0x1D
   738  003D                     	ds	2
   739                           
   740                           	psect	maintext
   741  0203                     __pmaintext:	
   742 ;;
   743 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   744 ;;
   745 ;; *************** function _main *****************
   746 ;; Defined at:
   747 ;;		line 92 in file "main_lab2.c"
   748 ;; Parameters:    Size  Location     Type
   749 ;;		None
   750 ;; Auto vars:     Size  Location     Type
   751 ;;		None
   752 ;; Return value:  Size  Location     Type
   753 ;;                  1    wreg      void 
   754 ;; Registers used:
   755 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   756 ;; Tracked objects:
   757 ;;		On entry : B00/0
   758 ;;		On exit  : 0/0
   759 ;;		Unchanged: 0/0
   760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   761 ;;      Params:         0       0       0       0       0
   762 ;;      Locals:         0       0       0       0       0
   763 ;;      Temps:          0       2       0       0       0
   764 ;;      Totals:         0       2       0       0       0
   765 ;;Total ram usage:        2 bytes
   766 ;; Hardware stack levels required when called:    3
   767 ;; This function calls:
   768 ;;		_cmd
   769 ;;		_lcd_ascii
   770 ;;		_lcd_init
   771 ;;		_lcd_linea
   772 ;;		_recepcion_uart
   773 ;;		_setup
   774 ;;		_show
   775 ;;		_toggle_adc
   776 ;; This function is called by:
   777 ;;		Startup code after reset
   778 ;; This function uses a non-reentrant model
   779 ;;
   780                           
   781                           
   782                           ;psect for function _main
   783  0203                     _main:
   784  0203                     l1613:	
   785                           ;incstack = 0
   786                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   787                           
   788                           
   789                           ;main_lab2.c: 94:     setup();
   790  0203  120A  118A  231C  120A  118A  	fcall	_setup
   791                           
   792                           ;main_lab2.c: 95:     lcd_init();
   793  0208  120A  118A  2380  120A  118A  	fcall	_lcd_init
   794                           
   795                           ;main_lab2.c: 96:  cmd(0x90);
   796  020D  3090               	movlw	144
   797  020E  120A  118A  23D8  120A  118A  	fcall	_cmd
   798  0213                     l1615:
   799                           
   800                           ;main_lab2.c: 99:     {;main_lab2.c: 101:         toggle_adc();
   801  0213  120A  118A  228D  120A  118A  	fcall	_toggle_adc
   802  0218                     l1617:
   803                           
   804                           ;main_lab2.c: 102:         recepcion_uart();
   805  0218  120A  118A  2362  120A  118A  	fcall	_recepcion_uart
   806                           
   807                           ;main_lab2.c: 106:         lcd_linea(1,1);
   808  021D  01F5               	clrf	lcd_linea@b
   809  021E  0AF5               	incf	lcd_linea@b,f
   810  021F  3001               	movlw	1
   811  0220  120A  118A  22C8  120A  118A  	fcall	_lcd_linea
   812  0225                     l1619:
   813                           
   814                           ;main_lab2.c: 107:         show(" S1   S2   S3 ");
   815  0225  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   816  0226  1283               	bcf	3,5	;RP0=0, select bank0
   817  0227  1303               	bcf	3,6	;RP1=0, select bank0
   818  0228  00BB               	movwf	show@s
   819  0229  3080               	movlw	128
   820  022A  00BC               	movwf	show@s+1
   821  022B  120A  118A  22F4  120A  118A  	fcall	_show
   822  0230                     l1621:
   823                           
   824                           ;main_lab2.c: 108:         lcd_linea(2,1);
   825  0230  01F5               	clrf	lcd_linea@b
   826  0231  0AF5               	incf	lcd_linea@b,f
   827  0232  3002               	movlw	2
   828  0233  120A  118A  22C8  120A  118A  	fcall	_lcd_linea
   829                           
   830                           ;main_lab2.c: 109:         show(lcd_ascii());
   831  0238  120A  118A  201C  120A  118A  	fcall	_lcd_ascii
   832  023D  1283               	bcf	3,5	;RP0=0, select bank0
   833  023E  1303               	bcf	3,6	;RP1=0, select bank0
   834  023F  00BD               	movwf	??_main
   835  0240  01BE               	clrf	??_main+1
   836  0241  083D               	movf	??_main,w
   837  0242  00BB               	movwf	show@s
   838  0243  083E               	movf	??_main+1,w
   839  0244  00BC               	movwf	show@s+1
   840  0245  120A  118A  22F4  120A  118A  	fcall	_show
   841  024A  2A13               	goto	l1615
   842  024B  120A  118A  280C   	ljmp	start
   843  024E                     __end_of_main:
   844                           
   845                           	psect	text1
   846  028D                     __ptext1:	
   847 ;; *************** function _toggle_adc *****************
   848 ;; Defined at:
   849 ;;		line 158 in file "main_lab2.c"
   850 ;; Parameters:    Size  Location     Type
   851 ;;		None
   852 ;; Auto vars:     Size  Location     Type
   853 ;;		None
   854 ;; Return value:  Size  Location     Type
   855 ;;                  1    wreg      void 
   856 ;; Registers used:
   857 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   858 ;; Tracked objects:
   859 ;;		On entry : 0/0
   860 ;;		On exit  : 0/0
   861 ;;		Unchanged: 0/0
   862 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   863 ;;      Params:         0       0       0       0       0
   864 ;;      Locals:         0       0       0       0       0
   865 ;;      Temps:          3       0       0       0       0
   866 ;;      Totals:         3       0       0       0       0
   867 ;;Total ram usage:        3 bytes
   868 ;; Hardware stack levels used:    1
   869 ;; Hardware stack levels required when called:    1
   870 ;; This function calls:
   871 ;;		Nothing
   872 ;; This function is called by:
   873 ;;		_main
   874 ;; This function uses a non-reentrant model
   875 ;;
   876                           
   877                           
   878                           ;psect for function _toggle_adc
   879  028D                     _toggle_adc:
   880  028D                     l1333:	
   881                           ;incstack = 0
   882                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   883                           
   884                           
   885                           ;main_lab2.c: 160:     if (ADCON0bits.GO==0)
   886  028D  1283               	bcf	3,5	;RP0=0, select bank0
   887  028E  1303               	bcf	3,6	;RP1=0, select bank0
   888  028F  189F               	btfsc	31,1	;volatile
   889  0290  2A92               	goto	u441
   890  0291  2A93               	goto	u440
   891  0292                     u441:
   892  0292  2AC7               	goto	l89
   893  0293                     u440:
   894  0293  2AB4               	goto	l1353
   895  0294                     l1337:
   896                           
   897                           ;main_lab2.c: 165:                 conversion1=ADRESH;
   898  0294  081E               	movf	30,w	;volatile
   899  0295  00F2               	movwf	??_toggle_adc
   900  0296  0872               	movf	??_toggle_adc,w
   901  0297  00C3               	movwf	_conversion1
   902                           
   903                           ;main_lab2.c: 166:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   904  0298  3042               	movlw	66
   905  0299  00F2               	movwf	??_toggle_adc
   906  029A                     u677:
   907  029A  0BF2               	decfsz	??_toggle_adc,f
   908  029B  2A9A               	goto	u677
   909  029C  0000               	nop
   910  029D                     l1339:
   911                           
   912                           ;main_lab2.c: 167:                 ADCON0bits.CHS=1;
   913  029D  1283               	bcf	3,5	;RP0=0, select bank0
   914  029E  1303               	bcf	3,6	;RP1=0, select bank0
   915  029F  081F               	movf	31,w	;volatile
   916  02A0  39C3               	andlw	-61
   917  02A1  3804               	iorlw	4
   918  02A2  009F               	movwf	31	;volatile
   919  02A3                     l1341:
   920                           
   921                           ;main_lab2.c: 168:                 ADCON0bits.GO=1;
   922  02A3  149F               	bsf	31,1	;volatile
   923                           
   924                           ;main_lab2.c: 169:                 break;
   925  02A4  2AC7               	goto	l89
   926  02A5                     l1343:
   927                           
   928                           ;main_lab2.c: 172:                 conversion2=ADRESH;
   929  02A5  081E               	movf	30,w	;volatile
   930  02A6  00F2               	movwf	??_toggle_adc
   931  02A7  0872               	movf	??_toggle_adc,w
   932  02A8  00C2               	movwf	_conversion2
   933                           
   934                           ;main_lab2.c: 173:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   935  02A9  3042               	movlw	66
   936  02AA  00F2               	movwf	??_toggle_adc
   937  02AB                     u687:
   938  02AB  0BF2               	decfsz	??_toggle_adc,f
   939  02AC  2AAB               	goto	u687
   940  02AD  0000               	nop
   941  02AE                     l1345:
   942                           
   943                           ;main_lab2.c: 174:                 ADCON0bits.CHS=0;
   944  02AE  30C3               	movlw	-61
   945  02AF  1283               	bcf	3,5	;RP0=0, select bank0
   946  02B0  1303               	bcf	3,6	;RP1=0, select bank0
   947  02B1  059F               	andwf	31,f	;volatile
   948  02B2                     l1347:
   949                           
   950                           ;main_lab2.c: 175:                 ADCON0bits.GO=1;
   951  02B2  149F               	bsf	31,1	;volatile
   952                           
   953                           ;main_lab2.c: 176:                 break;
   954  02B3  2AC7               	goto	l89
   955  02B4                     l1353:
   956  02B4  0C1F               	rrf	31,w	;volatile
   957  02B5  00F2               	movwf	??_toggle_adc
   958  02B6  0C72               	rrf	??_toggle_adc,w
   959  02B7  390F               	andlw	15
   960  02B8  00F3               	movwf	??_toggle_adc+1
   961  02B9  01F4               	clrf	??_toggle_adc+2
   962                           
   963                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   964                           ; Switch size 1, requested type "simple"
   965                           ; Number of cases is 1, Range of values is 0 to 0
   966                           ; switch strategies available:
   967                           ; Name         Instructions Cycles
   968                           ; simple_byte            4     3 (average)
   969                           ; direct_byte           11     8 (fixed)
   970                           ; jumptable            260     6 (fixed)
   971                           ;	Chosen strategy is simple_byte
   972  02BA  0874               	movf	??_toggle_adc+2,w
   973  02BB  3A00               	xorlw	0	; case 0
   974  02BC  1903               	skipnz
   975  02BD  2ABF               	goto	l1683
   976  02BE  2AC7               	goto	l89
   977  02BF                     l1683:
   978                           
   979                           ; Switch size 1, requested type "simple"
   980                           ; Number of cases is 2, Range of values is 0 to 1
   981                           ; switch strategies available:
   982                           ; Name         Instructions Cycles
   983                           ; simple_byte            7     4 (average)
   984                           ; direct_byte           14     8 (fixed)
   985                           ; jumptable            260     6 (fixed)
   986                           ;	Chosen strategy is simple_byte
   987  02BF  0873               	movf	??_toggle_adc+1,w
   988  02C0  3A00               	xorlw	0	; case 0
   989  02C1  1903               	skipnz
   990  02C2  2A94               	goto	l1337
   991  02C3  3A01               	xorlw	1	; case 1
   992  02C4  1903               	skipnz
   993  02C5  2AA5               	goto	l1343
   994  02C6  2AC7               	goto	l89
   995  02C7                     l89:
   996  02C7  0008               	return
   997  02C8                     __end_of_toggle_adc:
   998                           
   999                           	psect	text2
  1000  02F4                     __ptext2:	
  1001 ;; *************** function _show *****************
  1002 ;; Defined at:
  1003 ;;		line 59 in file "LCD.c"
  1004 ;; Parameters:    Size  Location     Type
  1005 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1006 ;;		 -> RAM(512), STR_1(15), 
  1007 ;; Auto vars:     Size  Location     Type
  1008 ;;		None
  1009 ;; Return value:  Size  Location     Type
  1010 ;;                  1    wreg      void 
  1011 ;; Registers used:
  1012 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1013 ;; Tracked objects:
  1014 ;;		On entry : 0/0
  1015 ;;		On exit  : 0/0
  1016 ;;		Unchanged: 0/0
  1017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1018 ;;      Params:         0       2       0       0       0
  1019 ;;      Locals:         0       0       0       0       0
  1020 ;;      Temps:          0       0       0       0       0
  1021 ;;      Totals:         0       2       0       0       0
  1022 ;;Total ram usage:        2 bytes
  1023 ;; Hardware stack levels used:    1
  1024 ;; Hardware stack levels required when called:    2
  1025 ;; This function calls:
  1026 ;;		_dat
  1027 ;; This function is called by:
  1028 ;;		_main
  1029 ;; This function uses a non-reentrant model
  1030 ;;
  1031                           
  1032                           
  1033                           ;psect for function _show
  1034  02F4                     _show:
  1035  02F4                     l1389:	
  1036                           ;incstack = 0
  1037                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1038                           
  1039                           
  1040                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
  1041  02F4  2B0B               	goto	l1395
  1042  02F5                     l1391:
  1043                           
  1044                           ;LCD.c: 62:   dat(*s++);
  1045  02F5  083C               	movf	show@s+1,w
  1046  02F6  00FF               	movwf	btemp+1
  1047  02F7  083B               	movf	show@s,w
  1048  02F8  0084               	movwf	4
  1049  02F9  120A  118A  2343  120A  118A  	fcall	stringtab
  1050  02FE  120A  118A  2399  120A  118A  	fcall	_dat
  1051  0303                     l1393:
  1052  0303  3001               	movlw	1
  1053  0304  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0305  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0306  07BB               	addwf	show@s,f
  1056  0307  1803               	skipnc
  1057  0308  0ABC               	incf	show@s+1,f
  1058  0309  3000               	movlw	0
  1059  030A  07BC               	addwf	show@s+1,f
  1060  030B                     l1395:
  1061                           
  1062                           ;LCD.c: 61:  while(*s) {
  1063  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1064  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1065  030D  083C               	movf	show@s+1,w
  1066  030E  00FF               	movwf	btemp+1
  1067  030F  083B               	movf	show@s,w
  1068  0310  0084               	movwf	4
  1069  0311  120A  118A  2343  120A  118A  	fcall	stringtab
  1070  0316  3A00               	xorlw	0
  1071  0317  1D03               	skipz
  1072  0318  2B1A               	goto	u471
  1073  0319  2B1B               	goto	u470
  1074  031A                     u471:
  1075  031A  2AF5               	goto	l1391
  1076  031B                     u470:
  1077  031B                     l152:
  1078  031B  0008               	return
  1079  031C                     __end_of_show:
  1080                           
  1081                           	psect	text3
  1082  0399                     __ptext3:	
  1083 ;; *************** function _dat *****************
  1084 ;; Defined at:
  1085 ;;		line 48 in file "LCD.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  b               1    wreg     unsigned char 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;  b               1    4[COMMON] unsigned char 
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1099 ;;      Params:         0       0       0       0       0
  1100 ;;      Locals:         1       0       0       0       0
  1101 ;;      Temps:          2       0       0       0       0
  1102 ;;      Totals:         3       0       0       0       0
  1103 ;;Total ram usage:        3 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; Hardware stack levels required when called:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_show
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _dat
  1115  0399                     _dat:
  1116                           
  1117                           ;incstack = 0
  1118                           ; Regs used in _dat: [wreg]
  1119                           ;dat@b stored from wreg
  1120  0399  00F4               	movwf	dat@b
  1121  039A                     l879:
  1122                           
  1123                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
  1124  039A  0874               	movf	dat@b,w
  1125  039B  1283               	bcf	3,5	;RP0=0, select bank0
  1126  039C  1303               	bcf	3,6	;RP1=0, select bank0
  1127  039D  0086               	movwf	6	;volatile
  1128  039E                     l881:
  1129                           
  1130                           ;LCD.c: 51:  RD5=1;
  1131  039E  1688               	bsf	8,5	;volatile
  1132  039F                     l883:
  1133                           
  1134                           ;LCD.c: 52:  RD6=0;
  1135  039F  1308               	bcf	8,6	;volatile
  1136  03A0                     l885:
  1137                           
  1138                           ;LCD.c: 53:  RD7=1;
  1139  03A0  1788               	bsf	8,7	;volatile
  1140                           
  1141                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1142  03A1  3003               	movlw	3
  1143  03A2  00F3               	movwf	??_dat+1
  1144  03A3  3097               	movlw	151
  1145  03A4  00F2               	movwf	??_dat
  1146  03A5                     u697:
  1147  03A5  0BF2               	decfsz	??_dat,f
  1148  03A6  2BA5               	goto	u697
  1149  03A7  0BF3               	decfsz	??_dat+1,f
  1150  03A8  2BA5               	goto	u697
  1151  03A9  2BAA               	nop2
  1152  03AA                     l887:
  1153                           
  1154                           ;LCD.c: 55:  RD7=0;
  1155  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  1156  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  1157  03AC  1388               	bcf	8,7	;volatile
  1158  03AD                     l146:
  1159  03AD  0008               	return
  1160  03AE                     __end_of_dat:
  1161                           
  1162                           	psect	text4
  1163  031C                     __ptext4:	
  1164 ;; *************** function _setup *****************
  1165 ;; Defined at:
  1166 ;;		line 116 in file "main_lab2.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;		None
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;		None
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  1    wreg      void 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, pclath, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1180 ;;      Params:         0       0       0       0       0
  1181 ;;      Locals:         0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0
  1183 ;;      Totals:         0       0       0       0       0
  1184 ;;Total ram usage:        0 bytes
  1185 ;; Hardware stack levels used:    1
  1186 ;; Hardware stack levels required when called:    2
  1187 ;; This function calls:
  1188 ;;		_adc_config
  1189 ;;		_uart_config
  1190 ;; This function is called by:
  1191 ;;		_main
  1192 ;; This function uses a non-reentrant model
  1193 ;;
  1194                           
  1195                           
  1196                           ;psect for function _setup
  1197  031C                     _setup:
  1198  031C                     l971:	
  1199                           ;incstack = 0
  1200                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1201                           
  1202                           
  1203                           ;main_lab2.c: 119:     ANSEL=0;
  1204  031C  1683               	bsf	3,5	;RP0=1, select bank3
  1205  031D  1703               	bsf	3,6	;RP1=1, select bank3
  1206  031E  0188               	clrf	8	;volatile
  1207                           
  1208                           ;main_lab2.c: 120:     ANSELH=0;
  1209  031F  0189               	clrf	9	;volatile
  1210  0320                     l973:
  1211                           
  1212                           ;main_lab2.c: 121:     ANSELbits.ANS0=1;
  1213  0320  1408               	bsf	8,0	;volatile
  1214  0321                     l975:
  1215                           
  1216                           ;main_lab2.c: 122:     ANSELbits.ANS1=1;
  1217  0321  1488               	bsf	8,1	;volatile
  1218                           
  1219                           ;main_lab2.c: 125:     TRISB=0;
  1220  0322  1683               	bsf	3,5	;RP0=1, select bank1
  1221  0323  1303               	bcf	3,6	;RP1=0, select bank1
  1222  0324  0186               	clrf	6	;volatile
  1223  0325                     l977:
  1224                           
  1225                           ;main_lab2.c: 128:     TRISDbits.TRISD5=0;
  1226  0325  1288               	bcf	8,5	;volatile
  1227  0326                     l979:
  1228                           
  1229                           ;main_lab2.c: 129:     TRISDbits.TRISD6=0;
  1230  0326  1308               	bcf	8,6	;volatile
  1231  0327                     l981:
  1232                           
  1233                           ;main_lab2.c: 130:     TRISDbits.TRISD7=0;
  1234  0327  1388               	bcf	8,7	;volatile
  1235                           
  1236                           ;main_lab2.c: 133:     PORTB=0;
  1237  0328  1283               	bcf	3,5	;RP0=0, select bank0
  1238  0329  1303               	bcf	3,6	;RP1=0, select bank0
  1239  032A  0186               	clrf	6	;volatile
  1240                           
  1241                           ;main_lab2.c: 134:     PORTD=0;
  1242  032B  0188               	clrf	8	;volatile
  1243  032C                     l983:
  1244                           
  1245                           ;main_lab2.c: 138:     OSCCONbits.IRCF = 0b111;
  1246  032C  3070               	movlw	112
  1247  032D  1683               	bsf	3,5	;RP0=1, select bank1
  1248  032E  1303               	bcf	3,6	;RP1=0, select bank1
  1249  032F  048F               	iorwf	15,f	;volatile
  1250  0330                     l985:
  1251                           
  1252                           ;main_lab2.c: 139:     OSCCONbits.SCS = 1;
  1253  0330  140F               	bsf	15,0	;volatile
  1254  0331                     l987:
  1255                           
  1256                           ;main_lab2.c: 142:     adc_config();
  1257  0331  120A  118A  23C3  120A  118A  	fcall	_adc_config
  1258  0336                     l989:
  1259                           
  1260                           ;main_lab2.c: 144:     uart_config();
  1261  0336  120A  118A  23AE  120A  118A  	fcall	_uart_config
  1262  033B                     l991:
  1263                           
  1264                           ;main_lab2.c: 147:     INTCONbits.GIE=1;
  1265  033B  178B               	bsf	11,7	;volatile
  1266  033C                     l993:
  1267                           
  1268                           ;main_lab2.c: 148:     PIE1bits.RCIE=1;
  1269  033C  1683               	bsf	3,5	;RP0=1, select bank1
  1270  033D  1303               	bcf	3,6	;RP1=0, select bank1
  1271  033E  168C               	bsf	12,5	;volatile
  1272  033F                     l995:
  1273                           
  1274                           ;main_lab2.c: 149:     PIR1bits.RCIF=0;
  1275  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1276  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1277  0341  128C               	bcf	12,5	;volatile
  1278  0342                     l81:
  1279  0342  0008               	return
  1280  0343                     __end_of_setup:
  1281                           
  1282                           	psect	text5
  1283  03AE                     __ptext5:	
  1284 ;; *************** function _uart_config *****************
  1285 ;; Defined at:
  1286 ;;		line 19 in file "uart_config.c"
  1287 ;; Parameters:    Size  Location     Type
  1288 ;;		None
  1289 ;; Auto vars:     Size  Location     Type
  1290 ;;		None
  1291 ;; Return value:  Size  Location     Type
  1292 ;;                  1    wreg      void 
  1293 ;; Registers used:
  1294 ;;		wreg, status,2
  1295 ;; Tracked objects:
  1296 ;;		On entry : 0/0
  1297 ;;		On exit  : 0/0
  1298 ;;		Unchanged: 0/0
  1299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1300 ;;      Params:         0       0       0       0       0
  1301 ;;      Locals:         0       0       0       0       0
  1302 ;;      Temps:          0       0       0       0       0
  1303 ;;      Totals:         0       0       0       0       0
  1304 ;;Total ram usage:        0 bytes
  1305 ;; Hardware stack levels used:    1
  1306 ;; Hardware stack levels required when called:    1
  1307 ;; This function calls:
  1308 ;;		Nothing
  1309 ;; This function is called by:
  1310 ;;		_setup
  1311 ;; This function uses a non-reentrant model
  1312 ;;
  1313                           
  1314                           
  1315                           ;psect for function _uart_config
  1316  03AE                     _uart_config:
  1317  03AE                     l787:	
  1318                           ;incstack = 0
  1319                           ; Regs used in _uart_config: [wreg+status,2]
  1320                           
  1321                           
  1322                           ;uart_config.c: 23:     TXSTAbits.SYNC = 0;
  1323  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  1324  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  1325  03B0  1218               	bcf	24,4	;volatile
  1326                           
  1327                           ;uart_config.c: 24:     TXSTAbits.BRGH = 1;
  1328  03B1  1518               	bsf	24,2	;volatile
  1329                           
  1330                           ;uart_config.c: 26:     BAUDCTLbits.BRG16 = 1;
  1331  03B2  1683               	bsf	3,5	;RP0=1, select bank3
  1332  03B3  1703               	bsf	3,6	;RP1=1, select bank3
  1333  03B4  1587               	bsf	7,3	;volatile
  1334  03B5                     l789:
  1335                           
  1336                           ;uart_config.c: 27:     SPBRG = 25;
  1337  03B5  3019               	movlw	25
  1338  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  1339  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  1340  03B8  0099               	movwf	25	;volatile
  1341  03B9                     l791:
  1342                           
  1343                           ;uart_config.c: 28:     SPBRGH = 0;
  1344  03B9  019A               	clrf	26	;volatile
  1345  03BA                     l793:
  1346                           
  1347                           ;uart_config.c: 30:     RCSTAbits.SPEN = 1;
  1348  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  1349  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  1350  03BC  1798               	bsf	24,7	;volatile
  1351  03BD                     l795:
  1352                           
  1353                           ;uart_config.c: 31:     RCSTAbits.RX9 = 0;
  1354  03BD  1318               	bcf	24,6	;volatile
  1355  03BE                     l797:
  1356                           
  1357                           ;uart_config.c: 33:     RCSTAbits.CREN = 1;
  1358  03BE  1618               	bsf	24,4	;volatile
  1359  03BF                     l799:
  1360                           
  1361                           ;uart_config.c: 34:     TXSTAbits.TXEN = 1;
  1362  03BF  1683               	bsf	3,5	;RP0=1, select bank1
  1363  03C0  1303               	bcf	3,6	;RP1=0, select bank1
  1364  03C1  1698               	bsf	24,5	;volatile
  1365  03C2                     l177:
  1366  03C2  0008               	return
  1367  03C3                     __end_of_uart_config:
  1368                           
  1369                           	psect	text6
  1370  03C3                     __ptext6:	
  1371 ;; *************** function _adc_config *****************
  1372 ;; Defined at:
  1373 ;;		line 20 in file "adc_config.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2, status,0
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1387 ;;      Params:         0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0
  1389 ;;      Temps:          1       0       0       0       0
  1390 ;;      Totals:         1       0       0       0       0
  1391 ;;Total ram usage:        1 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    1
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_setup
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           
  1402                           ;psect for function _adc_config
  1403  03C3                     _adc_config:
  1404  03C3                     l779:	
  1405                           ;incstack = 0
  1406                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1407                           
  1408                           
  1409                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1410  03C3  1683               	bsf	3,5	;RP0=1, select bank1
  1411  03C4  1303               	bcf	3,6	;RP1=0, select bank1
  1412  03C5  139F               	bcf	31,7	;volatile
  1413                           
  1414                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1415  03C6  121F               	bcf	31,4	;volatile
  1416                           
  1417                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1418  03C7  129F               	bcf	31,5	;volatile
  1419  03C8                     l781:
  1420                           
  1421                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1422  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  1423  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  1424  03CA  081F               	movf	31,w	;volatile
  1425  03CB  393F               	andlw	-193
  1426  03CC  3840               	iorlw	64
  1427  03CD  009F               	movwf	31	;volatile
  1428                           
  1429                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1430  03CE  30C3               	movlw	-61
  1431  03CF  059F               	andwf	31,f	;volatile
  1432  03D0                     l783:
  1433                           
  1434                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1435  03D0  3021               	movlw	33
  1436  03D1  00F2               	movwf	??_adc_config
  1437  03D2                     u707:
  1438  03D2  0BF2               	decfsz	??_adc_config,f
  1439  03D3  2BD2               	goto	u707
  1440  03D4                     l785:
  1441                           
  1442                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1443  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1444  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1445  03D6  141F               	bsf	31,0	;volatile
  1446  03D7                     l125:
  1447  03D7  0008               	return
  1448  03D8                     __end_of_adc_config:
  1449                           
  1450                           	psect	text7
  1451  0362                     __ptext7:	
  1452 ;; *************** function _recepcion_uart *****************
  1453 ;; Defined at:
  1454 ;;		line 185 in file "main_lab2.c"
  1455 ;; Parameters:    Size  Location     Type
  1456 ;;		None
  1457 ;; Auto vars:     Size  Location     Type
  1458 ;;		None
  1459 ;; Return value:  Size  Location     Type
  1460 ;;                  1    wreg      void 
  1461 ;; Registers used:
  1462 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1463 ;; Tracked objects:
  1464 ;;		On entry : 0/0
  1465 ;;		On exit  : 0/0
  1466 ;;		Unchanged: 0/0
  1467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1468 ;;      Params:         0       0       0       0       0
  1469 ;;      Locals:         0       0       0       0       0
  1470 ;;      Temps:          2       0       0       0       0
  1471 ;;      Totals:         2       0       0       0       0
  1472 ;;Total ram usage:        2 bytes
  1473 ;; Hardware stack levels used:    1
  1474 ;; Hardware stack levels required when called:    1
  1475 ;; This function calls:
  1476 ;;		Nothing
  1477 ;; This function is called by:
  1478 ;;		_main
  1479 ;; This function uses a non-reentrant model
  1480 ;;
  1481                           
  1482                           
  1483                           ;psect for function _recepcion_uart
  1484  0362                     _recepcion_uart:
  1485  0362                     l1359:	
  1486                           ;incstack = 0
  1487                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  1488                           
  1489                           
  1490                           ;main_lab2.c: 187:     switch(dato_recibido)
  1491  0362  2B6F               	goto	l1367
  1492  0363                     l1361:
  1493                           
  1494                           ;main_lab2.c: 190:             cuenta_uart++;
  1495  0363  3001               	movlw	1
  1496  0364  00F2               	movwf	??_recepcion_uart
  1497  0365  0872               	movf	??_recepcion_uart,w
  1498  0366  1283               	bcf	3,5	;RP0=0, select bank0
  1499  0367  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0368  07C1               	addwf	_cuenta_uart,f
  1501                           
  1502                           ;main_lab2.c: 191:             break;
  1503  0369  2B7F               	goto	l97
  1504  036A                     l1363:
  1505                           
  1506                           ;main_lab2.c: 194:             cuenta_uart--;
  1507  036A  3001               	movlw	1
  1508  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1509  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1510  036D  02C1               	subwf	_cuenta_uart,f
  1511                           
  1512                           ;main_lab2.c: 195:             break;
  1513  036E  2B7F               	goto	l97
  1514  036F                     l1367:
  1515  036F  087B               	movf	_dato_recibido,w
  1516  0370  00F2               	movwf	??_recepcion_uart
  1517  0371  01F3               	clrf	??_recepcion_uart+1
  1518                           
  1519                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1520                           ; Switch size 1, requested type "simple"
  1521                           ; Number of cases is 1, Range of values is 0 to 0
  1522                           ; switch strategies available:
  1523                           ; Name         Instructions Cycles
  1524                           ; simple_byte            4     3 (average)
  1525                           ; direct_byte           11     8 (fixed)
  1526                           ; jumptable            260     6 (fixed)
  1527                           ;	Chosen strategy is simple_byte
  1528  0372  0873               	movf	??_recepcion_uart+1,w
  1529  0373  3A00               	xorlw	0	; case 0
  1530  0374  1903               	skipnz
  1531  0375  2B77               	goto	l1685
  1532  0376  2B7F               	goto	l97
  1533  0377                     l1685:
  1534                           
  1535                           ; Switch size 1, requested type "simple"
  1536                           ; Number of cases is 2, Range of values is 49 to 50
  1537                           ; switch strategies available:
  1538                           ; Name         Instructions Cycles
  1539                           ; simple_byte            7     4 (average)
  1540                           ; direct_byte           17    11 (fixed)
  1541                           ; jumptable            263     9 (fixed)
  1542                           ;	Chosen strategy is simple_byte
  1543  0377  0872               	movf	??_recepcion_uart,w
  1544  0378  3A31               	xorlw	49	; case 49
  1545  0379  1903               	skipnz
  1546  037A  2B63               	goto	l1361
  1547  037B  3A03               	xorlw	3	; case 50
  1548  037C  1903               	skipnz
  1549  037D  2B6A               	goto	l1363
  1550  037E  2B7F               	goto	l97
  1551  037F                     l97:
  1552  037F  0008               	return
  1553  0380                     __end_of_recepcion_uart:
  1554                           
  1555                           	psect	text8
  1556  02C8                     __ptext8:	
  1557 ;; *************** function _lcd_linea *****************
  1558 ;; Defined at:
  1559 ;;		line 67 in file "LCD.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;  a               1    wreg     unsigned char 
  1562 ;;  b               1    5[COMMON] unsigned char 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;  a               1    7[COMMON] unsigned char 
  1565 ;;  z               1    9[COMMON] unsigned char 
  1566 ;;  temp            1    8[COMMON] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0, pclath, cstack
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1576 ;;      Params:         1       0       0       0       0
  1577 ;;      Locals:         3       0       0       0       0
  1578 ;;      Temps:          1       0       0       0       0
  1579 ;;      Totals:         5       0       0       0       0
  1580 ;;Total ram usage:        5 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    2
  1583 ;; This function calls:
  1584 ;;		_cmd
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           
  1591                           ;psect for function _lcd_linea
  1592  02C8                     _lcd_linea:
  1593                           
  1594                           ;incstack = 0
  1595                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1596                           ;lcd_linea@a stored from wreg
  1597  02C8  00F7               	movwf	lcd_linea@a
  1598  02C9                     l1373:
  1599                           
  1600                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1601  02C9  0377               	decf	lcd_linea@a,w
  1602  02CA  1D03               	btfss	3,2
  1603  02CB  2ACD               	goto	u451
  1604  02CC  2ACE               	goto	u450
  1605  02CD                     u451:
  1606  02CD  2ADE               	goto	l1381
  1607  02CE                     u450:
  1608  02CE                     l1375:
  1609                           
  1610                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1611  02CE  0875               	movf	lcd_linea@b,w
  1612  02CF  3E7F               	addlw	127
  1613  02D0  00F6               	movwf	??_lcd_linea
  1614  02D1  0876               	movf	??_lcd_linea,w
  1615  02D2  00F8               	movwf	lcd_linea@temp
  1616  02D3                     l1377:
  1617                           
  1618                           ;LCD.c: 71:         z = temp;
  1619  02D3  0878               	movf	lcd_linea@temp,w
  1620  02D4  00F6               	movwf	??_lcd_linea
  1621  02D5  0876               	movf	??_lcd_linea,w
  1622  02D6  00F9               	movwf	lcd_linea@z
  1623  02D7                     l1379:
  1624                           
  1625                           ;LCD.c: 72:         cmd(z);
  1626  02D7  0879               	movf	lcd_linea@z,w
  1627  02D8  120A  118A  23D8  120A  118A  	fcall	_cmd
  1628                           
  1629                           ;LCD.c: 74:     } else if (a == 2) {
  1630  02DD  2AF3               	goto	l158
  1631  02DE                     l1381:
  1632  02DE  3002               	movlw	2
  1633  02DF  0677               	xorwf	lcd_linea@a,w
  1634  02E0  1D03               	btfss	3,2
  1635  02E1  2AE3               	goto	u461
  1636  02E2  2AE4               	goto	u460
  1637  02E3                     u461:
  1638  02E3  2AF3               	goto	l158
  1639  02E4                     u460:
  1640  02E4                     l1383:
  1641                           
  1642                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1643  02E4  0875               	movf	lcd_linea@b,w
  1644  02E5  3EBF               	addlw	191
  1645  02E6  00F6               	movwf	??_lcd_linea
  1646  02E7  0876               	movf	??_lcd_linea,w
  1647  02E8  00F8               	movwf	lcd_linea@temp
  1648  02E9                     l1385:
  1649                           
  1650                           ;LCD.c: 76:         z = temp;
  1651  02E9  0878               	movf	lcd_linea@temp,w
  1652  02EA  00F6               	movwf	??_lcd_linea
  1653  02EB  0876               	movf	??_lcd_linea,w
  1654  02EC  00F9               	movwf	lcd_linea@z
  1655  02ED                     l1387:
  1656                           
  1657                           ;LCD.c: 77:         cmd(z);
  1658  02ED  0879               	movf	lcd_linea@z,w
  1659  02EE  120A  118A  23D8  120A  118A  	fcall	_cmd
  1660  02F3                     l158:
  1661  02F3  0008               	return
  1662  02F4                     __end_of_lcd_linea:
  1663                           
  1664                           	psect	text9
  1665  0380                     __ptext9:	
  1666 ;; *************** function _lcd_init *****************
  1667 ;; Defined at:
  1668 ;;		line 28 in file "LCD.c"
  1669 ;; Parameters:    Size  Location     Type
  1670 ;;		None
  1671 ;; Auto vars:     Size  Location     Type
  1672 ;;		None
  1673 ;; Return value:  Size  Location     Type
  1674 ;;                  1    wreg      void 
  1675 ;; Registers used:
  1676 ;;		wreg, status,2, status,0, pclath, cstack
  1677 ;; Tracked objects:
  1678 ;;		On entry : 0/0
  1679 ;;		On exit  : 0/0
  1680 ;;		Unchanged: 0/0
  1681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1682 ;;      Params:         0       0       0       0       0
  1683 ;;      Locals:         0       0       0       0       0
  1684 ;;      Temps:          0       0       0       0       0
  1685 ;;      Totals:         0       0       0       0       0
  1686 ;;Total ram usage:        0 bytes
  1687 ;; Hardware stack levels used:    1
  1688 ;; Hardware stack levels required when called:    2
  1689 ;; This function calls:
  1690 ;;		_cmd
  1691 ;; This function is called by:
  1692 ;;		_main
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           
  1696                           
  1697                           ;psect for function _lcd_init
  1698  0380                     _lcd_init:
  1699  0380                     l997:	
  1700                           ;incstack = 0
  1701                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1702                           
  1703                           
  1704                           ;LCD.c: 30:  cmd(0x38);
  1705  0380  3038               	movlw	56
  1706  0381  120A  118A  23D8  120A  118A  	fcall	_cmd
  1707                           
  1708                           ;LCD.c: 31:  cmd(0x0c);
  1709  0386  300C               	movlw	12
  1710  0387  120A  118A  23D8  120A  118A  	fcall	_cmd
  1711                           
  1712                           ;LCD.c: 32:  cmd(0x06);
  1713  038C  3006               	movlw	6
  1714  038D  120A  118A  23D8  120A  118A  	fcall	_cmd
  1715                           
  1716                           ;LCD.c: 33:  cmd(0x80);
  1717  0392  3080               	movlw	128
  1718  0393  120A  118A  23D8  120A  118A  	fcall	_cmd
  1719  0398                     l140:
  1720  0398  0008               	return
  1721  0399                     __end_of_lcd_init:
  1722                           
  1723                           	psect	text10
  1724  03D8                     __ptext10:	
  1725 ;; *************** function _cmd *****************
  1726 ;; Defined at:
  1727 ;;		line 37 in file "LCD.c"
  1728 ;; Parameters:    Size  Location     Type
  1729 ;;  a               1    wreg     unsigned char 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  a               1    4[COMMON] unsigned char 
  1732 ;; Return value:  Size  Location     Type
  1733 ;;                  1    wreg      void 
  1734 ;; Registers used:
  1735 ;;		wreg
  1736 ;; Tracked objects:
  1737 ;;		On entry : 0/0
  1738 ;;		On exit  : 0/0
  1739 ;;		Unchanged: 0/0
  1740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1741 ;;      Params:         0       0       0       0       0
  1742 ;;      Locals:         1       0       0       0       0
  1743 ;;      Temps:          2       0       0       0       0
  1744 ;;      Totals:         3       0       0       0       0
  1745 ;;Total ram usage:        3 bytes
  1746 ;; Hardware stack levels used:    1
  1747 ;; Hardware stack levels required when called:    1
  1748 ;; This function calls:
  1749 ;;		Nothing
  1750 ;; This function is called by:
  1751 ;;		_main
  1752 ;;		_lcd_init
  1753 ;;		_lcd_linea
  1754 ;;		_lcd_mov_derecha
  1755 ;;		_lcd_mov_izquierda
  1756 ;; This function uses a non-reentrant model
  1757 ;;
  1758                           
  1759                           
  1760                           ;psect for function _cmd
  1761  03D8                     _cmd:
  1762                           
  1763                           ;incstack = 0
  1764                           ; Regs used in _cmd: [wreg]
  1765                           ;cmd@a stored from wreg
  1766  03D8  00F4               	movwf	cmd@a
  1767  03D9                     l769:
  1768                           
  1769                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1770  03D9  0874               	movf	cmd@a,w
  1771  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  1772  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  1773  03DC  0086               	movwf	6	;volatile
  1774  03DD                     l771:
  1775                           
  1776                           ;LCD.c: 40:  RD5=0;
  1777  03DD  1288               	bcf	8,5	;volatile
  1778  03DE                     l773:
  1779                           
  1780                           ;LCD.c: 41:  RD6=0;
  1781  03DE  1308               	bcf	8,6	;volatile
  1782  03DF                     l775:
  1783                           
  1784                           ;LCD.c: 42:  RD7=1;
  1785  03DF  1788               	bsf	8,7	;volatile
  1786                           
  1787                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1788  03E0  3003               	movlw	3
  1789  03E1  00F3               	movwf	??_cmd+1
  1790  03E2  3097               	movlw	151
  1791  03E3  00F2               	movwf	??_cmd
  1792  03E4                     u717:
  1793  03E4  0BF2               	decfsz	??_cmd,f
  1794  03E5  2BE4               	goto	u717
  1795  03E6  0BF3               	decfsz	??_cmd+1,f
  1796  03E7  2BE4               	goto	u717
  1797  03E8  2BE9               	nop2
  1798  03E9                     l777:
  1799                           
  1800                           ;LCD.c: 44:  RD7=0;
  1801  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  1802  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  1803  03EB  1388               	bcf	8,7	;volatile
  1804  03EC                     l143:
  1805  03EC  0008               	return
  1806  03ED                     __end_of_cmd:
  1807                           
  1808                           	psect	text11
  1809  001C                     __ptext11:	
  1810 ;; *************** function _lcd_ascii *****************
  1811 ;; Defined at:
  1812 ;;		line 272 in file "main_lab2.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  random         16   11[BANK0 ] unsigned char [16]
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      unsigned char 
  1819 ;; Registers used:
  1820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0      16       0       0       0
  1828 ;;      Temps:          0       3       0       0       0
  1829 ;;      Totals:         0      19       0       0       0
  1830 ;;Total ram usage:       19 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    2
  1833 ;; This function calls:
  1834 ;;		___awdiv
  1835 ;;		___awmod
  1836 ;;		_datos_ascii
  1837 ;; This function is called by:
  1838 ;;		_main
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842                           
  1843                           ;psect for function _lcd_ascii
  1844  001C                     _lcd_ascii:
  1845  001C                     l1581:	
  1846                           ;incstack = 0
  1847                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1848                           
  1849                           
  1850                           ;main_lab2.c: 274:     uint8_t random[16];;main_lab2.c: 275:     random[0]=datos_ascii((
      +                          (2*(conversion1)/100)%10));
  1851  001C  300A               	movlw	10
  1852  001D  1283               	bcf	3,5	;RP0=0, select bank0
  1853  001E  1303               	bcf	3,6	;RP1=0, select bank0
  1854  001F  00A4               	movwf	___awmod@divisor
  1855  0020  3000               	movlw	0
  1856  0021  00A5               	movwf	___awmod@divisor+1
  1857  0022  3064               	movlw	100
  1858  0023  00F2               	movwf	___awdiv@divisor
  1859  0024  3000               	movlw	0
  1860  0025  00F3               	movwf	___awdiv@divisor+1
  1861  0026  0843               	movf	_conversion1,w
  1862  0027  00A8               	movwf	??_lcd_ascii
  1863  0028  01A9               	clrf	??_lcd_ascii+1
  1864  0029  1003               	clrc
  1865  002A  0D28               	rlf	??_lcd_ascii,w
  1866  002B  00F4               	movwf	___awdiv@dividend
  1867  002C  0D29               	rlf	??_lcd_ascii+1,w
  1868  002D  00F5               	movwf	___awdiv@dividend+1
  1869  002E  120A  118A  213F  120A  118A  	fcall	___awdiv
  1870  0033  0873               	movf	?___awdiv+1,w
  1871  0034  1283               	bcf	3,5	;RP0=0, select bank0
  1872  0035  1303               	bcf	3,6	;RP1=0, select bank0
  1873  0036  00A7               	movwf	___awmod@dividend+1
  1874  0037  0872               	movf	?___awdiv,w
  1875  0038  00A6               	movwf	___awmod@dividend
  1876  0039  120A  118A  21A8  120A  118A  	fcall	___awmod
  1877  003E  1283               	bcf	3,5	;RP0=0, select bank0
  1878  003F  1303               	bcf	3,6	;RP1=0, select bank0
  1879  0040  0824               	movf	?___awmod,w
  1880  0041  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1881  0046  1283               	bcf	3,5	;RP0=0, select bank0
  1882  0047  1303               	bcf	3,6	;RP1=0, select bank0
  1883  0048  00AA               	movwf	??_lcd_ascii+2
  1884  0049  082A               	movf	??_lcd_ascii+2,w
  1885  004A  00AB               	movwf	lcd_ascii@random
  1886  004B                     l1583:
  1887                           
  1888                           ;main_lab2.c: 276:     random[1]=0x2E;
  1889  004B  302E               	movlw	46
  1890  004C  00A8               	movwf	??_lcd_ascii
  1891  004D  0828               	movf	??_lcd_ascii,w
  1892  004E  00AC               	movwf	lcd_ascii@random+1
  1893  004F                     l1585:
  1894                           
  1895                           ;main_lab2.c: 277:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1896  004F  300A               	movlw	10
  1897  0050  00A4               	movwf	___awmod@divisor
  1898  0051  3000               	movlw	0
  1899  0052  00A5               	movwf	___awmod@divisor+1
  1900  0053  3064               	movlw	100
  1901  0054  00F2               	movwf	___awdiv@divisor
  1902  0055  3000               	movlw	0
  1903  0056  00F3               	movwf	___awdiv@divisor+1
  1904  0057  0843               	movf	_conversion1,w
  1905  0058  00A8               	movwf	??_lcd_ascii
  1906  0059  01A9               	clrf	??_lcd_ascii+1
  1907  005A  1003               	clrc
  1908  005B  0D28               	rlf	??_lcd_ascii,w
  1909  005C  00F4               	movwf	___awdiv@dividend
  1910  005D  0D29               	rlf	??_lcd_ascii+1,w
  1911  005E  00F5               	movwf	___awdiv@dividend+1
  1912  005F  120A  118A  213F  120A  118A  	fcall	___awdiv
  1913  0064  0873               	movf	?___awdiv+1,w
  1914  0065  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0066  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0067  00A7               	movwf	___awmod@dividend+1
  1917  0068  0872               	movf	?___awdiv,w
  1918  0069  00A6               	movwf	___awmod@dividend
  1919  006A  120A  118A  21A8  120A  118A  	fcall	___awmod
  1920  006F  1283               	bcf	3,5	;RP0=0, select bank0
  1921  0070  1303               	bcf	3,6	;RP1=0, select bank0
  1922  0071  0824               	movf	?___awmod,w
  1923  0072  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1924  0077  1283               	bcf	3,5	;RP0=0, select bank0
  1925  0078  1303               	bcf	3,6	;RP1=0, select bank0
  1926  0079  00AA               	movwf	??_lcd_ascii+2
  1927  007A  082A               	movf	??_lcd_ascii+2,w
  1928  007B  00AD               	movwf	lcd_ascii@random+2
  1929  007C                     l1587:
  1930                           
  1931                           ;main_lab2.c: 278:     random[3]=datos_ascii((2*conversion1)%10);
  1932  007C  300A               	movlw	10
  1933  007D  00A4               	movwf	___awmod@divisor
  1934  007E  3000               	movlw	0
  1935  007F  00A5               	movwf	___awmod@divisor+1
  1936  0080  0843               	movf	_conversion1,w
  1937  0081  00A8               	movwf	??_lcd_ascii
  1938  0082  01A9               	clrf	??_lcd_ascii+1
  1939  0083  1003               	clrc
  1940  0084  0D28               	rlf	??_lcd_ascii,w
  1941  0085  00A6               	movwf	___awmod@dividend
  1942  0086  0D29               	rlf	??_lcd_ascii+1,w
  1943  0087  00A7               	movwf	___awmod@dividend+1
  1944  0088  120A  118A  21A8  120A  118A  	fcall	___awmod
  1945  008D  1283               	bcf	3,5	;RP0=0, select bank0
  1946  008E  1303               	bcf	3,6	;RP1=0, select bank0
  1947  008F  0824               	movf	?___awmod,w
  1948  0090  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1949  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1950  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1951  0097  00AA               	movwf	??_lcd_ascii+2
  1952  0098  082A               	movf	??_lcd_ascii+2,w
  1953  0099  00AE               	movwf	lcd_ascii@random+3
  1954  009A                     l1589:
  1955                           
  1956                           ;main_lab2.c: 279:     random[4]=32;
  1957  009A  3020               	movlw	32
  1958  009B  00A8               	movwf	??_lcd_ascii
  1959  009C  0828               	movf	??_lcd_ascii,w
  1960  009D  00AF               	movwf	lcd_ascii@random+4
  1961                           
  1962                           ;main_lab2.c: 280:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1963  009E  300A               	movlw	10
  1964  009F  00A4               	movwf	___awmod@divisor
  1965  00A0  3000               	movlw	0
  1966  00A1  00A5               	movwf	___awmod@divisor+1
  1967  00A2  3064               	movlw	100
  1968  00A3  00F2               	movwf	___awdiv@divisor
  1969  00A4  3000               	movlw	0
  1970  00A5  00F3               	movwf	___awdiv@divisor+1
  1971  00A6  0842               	movf	_conversion2,w
  1972  00A7  00A8               	movwf	??_lcd_ascii
  1973  00A8  01A9               	clrf	??_lcd_ascii+1
  1974  00A9  1003               	clrc
  1975  00AA  0D28               	rlf	??_lcd_ascii,w
  1976  00AB  00F4               	movwf	___awdiv@dividend
  1977  00AC  0D29               	rlf	??_lcd_ascii+1,w
  1978  00AD  00F5               	movwf	___awdiv@dividend+1
  1979  00AE  120A  118A  213F  120A  118A  	fcall	___awdiv
  1980  00B3  0873               	movf	?___awdiv+1,w
  1981  00B4  1283               	bcf	3,5	;RP0=0, select bank0
  1982  00B5  1303               	bcf	3,6	;RP1=0, select bank0
  1983  00B6  00A7               	movwf	___awmod@dividend+1
  1984  00B7  0872               	movf	?___awdiv,w
  1985  00B8  00A6               	movwf	___awmod@dividend
  1986  00B9  120A  118A  21A8  120A  118A  	fcall	___awmod
  1987  00BE  1283               	bcf	3,5	;RP0=0, select bank0
  1988  00BF  1303               	bcf	3,6	;RP1=0, select bank0
  1989  00C0  0824               	movf	?___awmod,w
  1990  00C1  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  1991  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1992  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1993  00C8  00AA               	movwf	??_lcd_ascii+2
  1994  00C9  082A               	movf	??_lcd_ascii+2,w
  1995  00CA  00B0               	movwf	lcd_ascii@random+5
  1996  00CB                     l1591:
  1997                           
  1998                           ;main_lab2.c: 281:     random[6]=0x2E;
  1999  00CB  302E               	movlw	46
  2000  00CC  00A8               	movwf	??_lcd_ascii
  2001  00CD  0828               	movf	??_lcd_ascii,w
  2002  00CE  00B1               	movwf	lcd_ascii@random+6
  2003  00CF                     l1593:
  2004                           
  2005                           ;main_lab2.c: 282:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  2006  00CF  300A               	movlw	10
  2007  00D0  00A4               	movwf	___awmod@divisor
  2008  00D1  3000               	movlw	0
  2009  00D2  00A5               	movwf	___awmod@divisor+1
  2010  00D3  3064               	movlw	100
  2011  00D4  00F2               	movwf	___awdiv@divisor
  2012  00D5  3000               	movlw	0
  2013  00D6  00F3               	movwf	___awdiv@divisor+1
  2014  00D7  0842               	movf	_conversion2,w
  2015  00D8  00A8               	movwf	??_lcd_ascii
  2016  00D9  01A9               	clrf	??_lcd_ascii+1
  2017  00DA  1003               	clrc
  2018  00DB  0D28               	rlf	??_lcd_ascii,w
  2019  00DC  00F4               	movwf	___awdiv@dividend
  2020  00DD  0D29               	rlf	??_lcd_ascii+1,w
  2021  00DE  00F5               	movwf	___awdiv@dividend+1
  2022  00DF  120A  118A  213F  120A  118A  	fcall	___awdiv
  2023  00E4  0873               	movf	?___awdiv+1,w
  2024  00E5  1283               	bcf	3,5	;RP0=0, select bank0
  2025  00E6  1303               	bcf	3,6	;RP1=0, select bank0
  2026  00E7  00A7               	movwf	___awmod@dividend+1
  2027  00E8  0872               	movf	?___awdiv,w
  2028  00E9  00A6               	movwf	___awmod@dividend
  2029  00EA  120A  118A  21A8  120A  118A  	fcall	___awmod
  2030  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  2031  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  2032  00F1  0824               	movf	?___awmod,w
  2033  00F2  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2034  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  2035  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  2036  00F9  00AA               	movwf	??_lcd_ascii+2
  2037  00FA  082A               	movf	??_lcd_ascii+2,w
  2038  00FB  00B2               	movwf	lcd_ascii@random+7
  2039  00FC                     l1595:
  2040                           
  2041                           ;main_lab2.c: 283:     random[8]=datos_ascii((2*conversion2)%10);
  2042  00FC  300A               	movlw	10
  2043  00FD  00A4               	movwf	___awmod@divisor
  2044  00FE  3000               	movlw	0
  2045  00FF  00A5               	movwf	___awmod@divisor+1
  2046  0100  0842               	movf	_conversion2,w
  2047  0101  00A8               	movwf	??_lcd_ascii
  2048  0102  01A9               	clrf	??_lcd_ascii+1
  2049  0103  1003               	clrc
  2050  0104  0D28               	rlf	??_lcd_ascii,w
  2051  0105  00A6               	movwf	___awmod@dividend
  2052  0106  0D29               	rlf	??_lcd_ascii+1,w
  2053  0107  00A7               	movwf	___awmod@dividend+1
  2054  0108  120A  118A  21A8  120A  118A  	fcall	___awmod
  2055  010D  1283               	bcf	3,5	;RP0=0, select bank0
  2056  010E  1303               	bcf	3,6	;RP1=0, select bank0
  2057  010F  0824               	movf	?___awmod,w
  2058  0110  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2059  0115  1283               	bcf	3,5	;RP0=0, select bank0
  2060  0116  1303               	bcf	3,6	;RP1=0, select bank0
  2061  0117  00AA               	movwf	??_lcd_ascii+2
  2062  0118  082A               	movf	??_lcd_ascii+2,w
  2063  0119  00B3               	movwf	lcd_ascii@random+8
  2064  011A                     l1597:
  2065                           
  2066                           ;main_lab2.c: 284:     random[9]=32;
  2067  011A  3020               	movlw	32
  2068  011B  00A8               	movwf	??_lcd_ascii
  2069  011C  0828               	movf	??_lcd_ascii,w
  2070  011D  00B4               	movwf	lcd_ascii@random+9
  2071                           
  2072                           ;main_lab2.c: 285:     random[10]=datos_ascii(cuenta_uart);
  2073  011E  0841               	movf	_cuenta_uart,w
  2074  011F  120A  118A  224E  120A  118A  	fcall	_datos_ascii
  2075  0124  1283               	bcf	3,5	;RP0=0, select bank0
  2076  0125  1303               	bcf	3,6	;RP1=0, select bank0
  2077  0126  00A8               	movwf	??_lcd_ascii
  2078  0127  0828               	movf	??_lcd_ascii,w
  2079  0128  00B5               	movwf	lcd_ascii@random+10
  2080  0129                     l1599:
  2081                           
  2082                           ;main_lab2.c: 286:     random[11]=0x2E;
  2083  0129  302E               	movlw	46
  2084  012A  00A8               	movwf	??_lcd_ascii
  2085  012B  0828               	movf	??_lcd_ascii,w
  2086  012C  00B6               	movwf	lcd_ascii@random+11
  2087  012D                     l1601:
  2088                           
  2089                           ;main_lab2.c: 287:     random[12]=32;
  2090  012D  3020               	movlw	32
  2091  012E  00A8               	movwf	??_lcd_ascii
  2092  012F  0828               	movf	??_lcd_ascii,w
  2093  0130  00B7               	movwf	lcd_ascii@random+12
  2094  0131                     l1603:
  2095                           
  2096                           ;main_lab2.c: 288:     random[13]=32;
  2097  0131  3020               	movlw	32
  2098  0132  00A8               	movwf	??_lcd_ascii
  2099  0133  0828               	movf	??_lcd_ascii,w
  2100  0134  00B8               	movwf	lcd_ascii@random+13
  2101  0135                     l1605:
  2102                           
  2103                           ;main_lab2.c: 289:     random[14]=32;
  2104  0135  3020               	movlw	32
  2105  0136  00A8               	movwf	??_lcd_ascii
  2106  0137  0828               	movf	??_lcd_ascii,w
  2107  0138  00B9               	movwf	lcd_ascii@random+14
  2108  0139                     l1607:
  2109                           
  2110                           ;main_lab2.c: 290:     random[15]=32;
  2111  0139  3020               	movlw	32
  2112  013A  00A8               	movwf	??_lcd_ascii
  2113  013B  0828               	movf	??_lcd_ascii,w
  2114  013C  00BA               	movwf	lcd_ascii@random+15
  2115  013D                     l1609:
  2116                           
  2117                           ;main_lab2.c: 291:     return random;
  2118  013D  302B               	movlw	(low lcd_ascii@random)& (0+255)
  2119  013E                     l116:
  2120  013E  0008               	return
  2121  013F                     __end_of_lcd_ascii:
  2122                           
  2123                           	psect	text12
  2124  024E                     __ptext12:	
  2125 ;; *************** function _datos_ascii *****************
  2126 ;; Defined at:
  2127 ;;		line 204 in file "main_lab2.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  numero          1    wreg     unsigned char 
  2130 ;; Auto vars:     Size  Location     Type
  2131 ;;  numero          1    4[COMMON] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      unsigned char 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2141 ;;      Params:         0       0       0       0       0
  2142 ;;      Locals:         1       0       0       0       0
  2143 ;;      Temps:          2       0       0       0       0
  2144 ;;      Totals:         3       0       0       0       0
  2145 ;;Total ram usage:        3 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    1
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_lcd_ascii
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _datos_ascii
  2157  024E                     _datos_ascii:
  2158                           
  2159                           ;incstack = 0
  2160                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2161                           ;datos_ascii@numero stored from wreg
  2162  024E  00F4               	movwf	datos_ascii@numero
  2163  024F                     l1175:
  2164                           
  2165                           ;main_lab2.c: 204: unsigned char datos_ascii(uint8_t numero);main_lab2.c: 205: {;main_la
      +                          b2.c: 206:     switch(numero)
  2166  024F  2A64               	goto	l1245
  2167  0250                     l1177:
  2168                           
  2169                           ;main_lab2.c: 209:             return 0x30;
  2170  0250  3030               	movlw	48
  2171  0251  2A8C               	goto	l102
  2172  0252                     l1189:
  2173                           
  2174                           ;main_lab2.c: 216:             return 0x31;
  2175  0252  3031               	movlw	49
  2176  0253  2A8C               	goto	l102
  2177  0254                     l1195:
  2178                           
  2179                           ;main_lab2.c: 220:             return 0x32;
  2180  0254  3032               	movlw	50
  2181  0255  2A8C               	goto	l102
  2182  0256                     l1201:
  2183                           
  2184                           ;main_lab2.c: 224:             return 0x33;
  2185  0256  3033               	movlw	51
  2186  0257  2A8C               	goto	l102
  2187  0258                     l1207:
  2188                           
  2189                           ;main_lab2.c: 228:             return 0x34;
  2190  0258  3034               	movlw	52
  2191  0259  2A8C               	goto	l102
  2192  025A                     l1213:
  2193                           
  2194                           ;main_lab2.c: 232:             return 0x35;
  2195  025A  3035               	movlw	53
  2196  025B  2A8C               	goto	l102
  2197  025C                     l1219:
  2198                           
  2199                           ;main_lab2.c: 236:             return 0x36;
  2200  025C  3036               	movlw	54
  2201  025D  2A8C               	goto	l102
  2202  025E                     l1225:
  2203                           
  2204                           ;main_lab2.c: 240:             return 0x37;
  2205  025E  3037               	movlw	55
  2206  025F  2A8C               	goto	l102
  2207  0260                     l1231:
  2208                           
  2209                           ;main_lab2.c: 244:             return 0x38;
  2210  0260  3038               	movlw	56
  2211  0261  2A8C               	goto	l102
  2212  0262                     l1237:
  2213                           
  2214                           ;main_lab2.c: 248:             return 0x39;
  2215  0262  3039               	movlw	57
  2216  0263  2A8C               	goto	l102
  2217  0264                     l1245:
  2218  0264  0874               	movf	datos_ascii@numero,w
  2219  0265  00F2               	movwf	??_datos_ascii
  2220  0266  01F3               	clrf	??_datos_ascii+1
  2221                           
  2222                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2223                           ; Switch size 1, requested type "simple"
  2224                           ; Number of cases is 1, Range of values is 0 to 0
  2225                           ; switch strategies available:
  2226                           ; Name         Instructions Cycles
  2227                           ; simple_byte            4     3 (average)
  2228                           ; direct_byte           11     8 (fixed)
  2229                           ; jumptable            260     6 (fixed)
  2230                           ;	Chosen strategy is simple_byte
  2231  0267  0873               	movf	??_datos_ascii+1,w
  2232  0268  3A00               	xorlw	0	; case 0
  2233  0269  1903               	skipnz
  2234  026A  2A6C               	goto	l1687
  2235  026B  2A50               	goto	l1177
  2236  026C                     l1687:
  2237                           
  2238                           ; Switch size 1, requested type "simple"
  2239                           ; Number of cases is 10, Range of values is 0 to 9
  2240                           ; switch strategies available:
  2241                           ; Name         Instructions Cycles
  2242                           ; simple_byte           31    16 (average)
  2243                           ; direct_byte           38     8 (fixed)
  2244                           ; jumptable            260     6 (fixed)
  2245                           ;	Chosen strategy is simple_byte
  2246  026C  0872               	movf	??_datos_ascii,w
  2247  026D  3A00               	xorlw	0	; case 0
  2248  026E  1903               	skipnz
  2249  026F  2A50               	goto	l1177
  2250  0270  3A01               	xorlw	1	; case 1
  2251  0271  1903               	skipnz
  2252  0272  2A52               	goto	l1189
  2253  0273  3A03               	xorlw	3	; case 2
  2254  0274  1903               	skipnz
  2255  0275  2A54               	goto	l1195
  2256  0276  3A01               	xorlw	1	; case 3
  2257  0277  1903               	skipnz
  2258  0278  2A56               	goto	l1201
  2259  0279  3A07               	xorlw	7	; case 4
  2260  027A  1903               	skipnz
  2261  027B  2A58               	goto	l1207
  2262  027C  3A01               	xorlw	1	; case 5
  2263  027D  1903               	skipnz
  2264  027E  2A5A               	goto	l1213
  2265  027F  3A03               	xorlw	3	; case 6
  2266  0280  1903               	skipnz
  2267  0281  2A5C               	goto	l1219
  2268  0282  3A01               	xorlw	1	; case 7
  2269  0283  1903               	skipnz
  2270  0284  2A5E               	goto	l1225
  2271  0285  3A0F               	xorlw	15	; case 8
  2272  0286  1903               	skipnz
  2273  0287  2A60               	goto	l1231
  2274  0288  3A01               	xorlw	1	; case 9
  2275  0289  1903               	skipnz
  2276  028A  2A62               	goto	l1237
  2277  028B  2A50               	goto	l1177
  2278  028C                     l102:
  2279  028C  0008               	return
  2280  028D                     __end_of_datos_ascii:
  2281                           
  2282                           	psect	text13
  2283  01A8                     __ptext13:	
  2284 ;; *************** function ___awmod *****************
  2285 ;; Defined at:
  2286 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2287 ;; Parameters:    Size  Location     Type
  2288 ;;  divisor         2    4[BANK0 ] int 
  2289 ;;  dividend        2    6[BANK0 ] int 
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;  sign            1    9[COMMON] unsigned char 
  2292 ;;  counter         1    8[COMMON] unsigned char 
  2293 ;; Return value:  Size  Location     Type
  2294 ;;                  2    4[BANK0 ] int 
  2295 ;; Registers used:
  2296 ;;		wreg, status,2, status,0
  2297 ;; Tracked objects:
  2298 ;;		On entry : 0/0
  2299 ;;		On exit  : 0/0
  2300 ;;		Unchanged: 0/0
  2301 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2302 ;;      Params:         0       4       0       0       0
  2303 ;;      Locals:         2       0       0       0       0
  2304 ;;      Temps:          1       0       0       0       0
  2305 ;;      Totals:         3       4       0       0       0
  2306 ;;Total ram usage:        7 bytes
  2307 ;; Hardware stack levels used:    1
  2308 ;; Hardware stack levels required when called:    1
  2309 ;; This function calls:
  2310 ;;		Nothing
  2311 ;; This function is called by:
  2312 ;;		_lcd_ascii
  2313 ;; This function uses a non-reentrant model
  2314 ;;
  2315                           
  2316                           
  2317                           ;psect for function ___awmod
  2318  01A8                     ___awmod:
  2319  01A8                     l1543:	
  2320                           ;incstack = 0
  2321                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2322                           
  2323  01A8  01F9               	clrf	___awmod@sign
  2324  01A9                     l1545:
  2325  01A9  1283               	bcf	3,5	;RP0=0, select bank0
  2326  01AA  1303               	bcf	3,6	;RP1=0, select bank0
  2327  01AB  1FA7               	btfss	___awmod@dividend+1,7
  2328  01AC  29AE               	goto	u581
  2329  01AD  29AF               	goto	u580
  2330  01AE                     u581:
  2331  01AE  29B6               	goto	l1551
  2332  01AF                     u580:
  2333  01AF                     l1547:
  2334  01AF  09A6               	comf	___awmod@dividend,f
  2335  01B0  09A7               	comf	___awmod@dividend+1,f
  2336  01B1  0AA6               	incf	___awmod@dividend,f
  2337  01B2  1903               	skipnz
  2338  01B3  0AA7               	incf	___awmod@dividend+1,f
  2339  01B4                     l1549:
  2340  01B4  01F9               	clrf	___awmod@sign
  2341  01B5  0AF9               	incf	___awmod@sign,f
  2342  01B6                     l1551:
  2343  01B6  1FA5               	btfss	___awmod@divisor+1,7
  2344  01B7  29B9               	goto	u591
  2345  01B8  29BA               	goto	u590
  2346  01B9                     u591:
  2347  01B9  29BF               	goto	l1555
  2348  01BA                     u590:
  2349  01BA                     l1553:
  2350  01BA  09A4               	comf	___awmod@divisor,f
  2351  01BB  09A5               	comf	___awmod@divisor+1,f
  2352  01BC  0AA4               	incf	___awmod@divisor,f
  2353  01BD  1903               	skipnz
  2354  01BE  0AA5               	incf	___awmod@divisor+1,f
  2355  01BF                     l1555:
  2356  01BF  0824               	movf	___awmod@divisor,w
  2357  01C0  0425               	iorwf	___awmod@divisor+1,w
  2358  01C1  1903               	btfsc	3,2
  2359  01C2  29C4               	goto	u601
  2360  01C3  29C5               	goto	u600
  2361  01C4                     u601:
  2362  01C4  29F4               	goto	l1573
  2363  01C5                     u600:
  2364  01C5                     l1557:
  2365  01C5  01F8               	clrf	___awmod@counter
  2366  01C6  0AF8               	incf	___awmod@counter,f
  2367  01C7  29D3               	goto	l1563
  2368  01C8                     l1559:
  2369  01C8  3001               	movlw	1
  2370  01C9                     u615:
  2371  01C9  1003               	clrc
  2372  01CA  0DA4               	rlf	___awmod@divisor,f
  2373  01CB  0DA5               	rlf	___awmod@divisor+1,f
  2374  01CC  3EFF               	addlw	-1
  2375  01CD  1D03               	skipz
  2376  01CE  29C9               	goto	u615
  2377  01CF                     l1561:
  2378  01CF  3001               	movlw	1
  2379  01D0  00F7               	movwf	??___awmod
  2380  01D1  0877               	movf	??___awmod,w
  2381  01D2  07F8               	addwf	___awmod@counter,f
  2382  01D3                     l1563:
  2383  01D3  1FA5               	btfss	___awmod@divisor+1,7
  2384  01D4  29D6               	goto	u621
  2385  01D5  29D7               	goto	u620
  2386  01D6                     u621:
  2387  01D6  29C8               	goto	l1559
  2388  01D7                     u620:
  2389  01D7                     l1565:
  2390  01D7  0825               	movf	___awmod@divisor+1,w
  2391  01D8  0227               	subwf	___awmod@dividend+1,w
  2392  01D9  1D03               	skipz
  2393  01DA  29DD               	goto	u635
  2394  01DB  0824               	movf	___awmod@divisor,w
  2395  01DC  0226               	subwf	___awmod@dividend,w
  2396  01DD                     u635:
  2397  01DD  1C03               	skipc
  2398  01DE  29E0               	goto	u631
  2399  01DF  29E1               	goto	u630
  2400  01E0                     u631:
  2401  01E0  29E7               	goto	l1569
  2402  01E1                     u630:
  2403  01E1                     l1567:
  2404  01E1  0824               	movf	___awmod@divisor,w
  2405  01E2  02A6               	subwf	___awmod@dividend,f
  2406  01E3  0825               	movf	___awmod@divisor+1,w
  2407  01E4  1C03               	skipc
  2408  01E5  03A7               	decf	___awmod@dividend+1,f
  2409  01E6  02A7               	subwf	___awmod@dividend+1,f
  2410  01E7                     l1569:
  2411  01E7  3001               	movlw	1
  2412  01E8                     u645:
  2413  01E8  1003               	clrc
  2414  01E9  0CA5               	rrf	___awmod@divisor+1,f
  2415  01EA  0CA4               	rrf	___awmod@divisor,f
  2416  01EB  3EFF               	addlw	-1
  2417  01EC  1D03               	skipz
  2418  01ED  29E8               	goto	u645
  2419  01EE                     l1571:
  2420  01EE  3001               	movlw	1
  2421  01EF  02F8               	subwf	___awmod@counter,f
  2422  01F0  1D03               	btfss	3,2
  2423  01F1  29F3               	goto	u651
  2424  01F2  29F4               	goto	u650
  2425  01F3                     u651:
  2426  01F3  29D7               	goto	l1565
  2427  01F4                     u650:
  2428  01F4                     l1573:
  2429  01F4  0879               	movf	___awmod@sign,w
  2430  01F5  1903               	btfsc	3,2
  2431  01F6  29F8               	goto	u661
  2432  01F7  29F9               	goto	u660
  2433  01F8                     u661:
  2434  01F8  29FE               	goto	l1577
  2435  01F9                     u660:
  2436  01F9                     l1575:
  2437  01F9  09A6               	comf	___awmod@dividend,f
  2438  01FA  09A7               	comf	___awmod@dividend+1,f
  2439  01FB  0AA6               	incf	___awmod@dividend,f
  2440  01FC  1903               	skipnz
  2441  01FD  0AA7               	incf	___awmod@dividend+1,f
  2442  01FE                     l1577:
  2443  01FE  0827               	movf	___awmod@dividend+1,w
  2444  01FF  00A5               	movwf	?___awmod+1
  2445  0200  0826               	movf	___awmod@dividend,w
  2446  0201  00A4               	movwf	?___awmod
  2447  0202                     l429:
  2448  0202  0008               	return
  2449  0203                     __end_of___awmod:
  2450                           
  2451                           	psect	text14
  2452  013F                     __ptext14:	
  2453 ;; *************** function ___awdiv *****************
  2454 ;; Defined at:
  2455 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2456 ;; Parameters:    Size  Location     Type
  2457 ;;  divisor         2    2[COMMON] int 
  2458 ;;  dividend        2    4[COMMON] int 
  2459 ;; Auto vars:     Size  Location     Type
  2460 ;;  quotient        2    2[BANK0 ] int 
  2461 ;;  sign            1    1[BANK0 ] unsigned char 
  2462 ;;  counter         1    0[BANK0 ] unsigned char 
  2463 ;; Return value:  Size  Location     Type
  2464 ;;                  2    2[COMMON] int 
  2465 ;; Registers used:
  2466 ;;		wreg, status,2, status,0
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         4       0       0       0       0
  2473 ;;      Locals:         0       4       0       0       0
  2474 ;;      Temps:          1       0       0       0       0
  2475 ;;      Totals:         5       4       0       0       0
  2476 ;;Total ram usage:        9 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; Hardware stack levels required when called:    1
  2479 ;; This function calls:
  2480 ;;		Nothing
  2481 ;; This function is called by:
  2482 ;;		_lcd_ascii
  2483 ;; This function uses a non-reentrant model
  2484 ;;
  2485                           
  2486                           
  2487                           ;psect for function ___awdiv
  2488  013F                     ___awdiv:
  2489  013F                     l1499:	
  2490                           ;incstack = 0
  2491                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2492                           
  2493  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2494  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2495  0141  01A1               	clrf	___awdiv@sign
  2496  0142                     l1501:
  2497  0142  1FF3               	btfss	___awdiv@divisor+1,7
  2498  0143  2945               	goto	u481
  2499  0144  2946               	goto	u480
  2500  0145                     u481:
  2501  0145  294D               	goto	l1507
  2502  0146                     u480:
  2503  0146                     l1503:
  2504  0146  09F2               	comf	___awdiv@divisor,f
  2505  0147  09F3               	comf	___awdiv@divisor+1,f
  2506  0148  0AF2               	incf	___awdiv@divisor,f
  2507  0149  1903               	skipnz
  2508  014A  0AF3               	incf	___awdiv@divisor+1,f
  2509  014B                     l1505:
  2510  014B  01A1               	clrf	___awdiv@sign
  2511  014C  0AA1               	incf	___awdiv@sign,f
  2512  014D                     l1507:
  2513  014D  1FF5               	btfss	___awdiv@dividend+1,7
  2514  014E  2950               	goto	u491
  2515  014F  2951               	goto	u490
  2516  0150                     u491:
  2517  0150  295A               	goto	l1513
  2518  0151                     u490:
  2519  0151                     l1509:
  2520  0151  09F4               	comf	___awdiv@dividend,f
  2521  0152  09F5               	comf	___awdiv@dividend+1,f
  2522  0153  0AF4               	incf	___awdiv@dividend,f
  2523  0154  1903               	skipnz
  2524  0155  0AF5               	incf	___awdiv@dividend+1,f
  2525  0156                     l1511:
  2526  0156  3001               	movlw	1
  2527  0157  00F6               	movwf	??___awdiv
  2528  0158  0876               	movf	??___awdiv,w
  2529  0159  06A1               	xorwf	___awdiv@sign,f
  2530  015A                     l1513:
  2531  015A  01A2               	clrf	___awdiv@quotient
  2532  015B  01A3               	clrf	___awdiv@quotient+1
  2533  015C                     l1515:
  2534  015C  0872               	movf	___awdiv@divisor,w
  2535  015D  0473               	iorwf	___awdiv@divisor+1,w
  2536  015E  1903               	btfsc	3,2
  2537  015F  2961               	goto	u501
  2538  0160  2962               	goto	u500
  2539  0161                     u501:
  2540  0161  2999               	goto	l1535
  2541  0162                     u500:
  2542  0162                     l1517:
  2543  0162  01A0               	clrf	___awdiv@counter
  2544  0163  0AA0               	incf	___awdiv@counter,f
  2545  0164  2970               	goto	l1523
  2546  0165                     l1519:
  2547  0165  3001               	movlw	1
  2548  0166                     u515:
  2549  0166  1003               	clrc
  2550  0167  0DF2               	rlf	___awdiv@divisor,f
  2551  0168  0DF3               	rlf	___awdiv@divisor+1,f
  2552  0169  3EFF               	addlw	-1
  2553  016A  1D03               	skipz
  2554  016B  2966               	goto	u515
  2555  016C                     l1521:
  2556  016C  3001               	movlw	1
  2557  016D  00F6               	movwf	??___awdiv
  2558  016E  0876               	movf	??___awdiv,w
  2559  016F  07A0               	addwf	___awdiv@counter,f
  2560  0170                     l1523:
  2561  0170  1FF3               	btfss	___awdiv@divisor+1,7
  2562  0171  2973               	goto	u521
  2563  0172  2974               	goto	u520
  2564  0173                     u521:
  2565  0173  2965               	goto	l1519
  2566  0174                     u520:
  2567  0174                     l1525:
  2568  0174  3001               	movlw	1
  2569  0175                     u535:
  2570  0175  1003               	clrc
  2571  0176  0DA2               	rlf	___awdiv@quotient,f
  2572  0177  0DA3               	rlf	___awdiv@quotient+1,f
  2573  0178  3EFF               	addlw	-1
  2574  0179  1D03               	skipz
  2575  017A  2975               	goto	u535
  2576  017B  0873               	movf	___awdiv@divisor+1,w
  2577  017C  0275               	subwf	___awdiv@dividend+1,w
  2578  017D  1D03               	skipz
  2579  017E  2981               	goto	u545
  2580  017F  0872               	movf	___awdiv@divisor,w
  2581  0180  0274               	subwf	___awdiv@dividend,w
  2582  0181                     u545:
  2583  0181  1C03               	skipc
  2584  0182  2984               	goto	u541
  2585  0183  2985               	goto	u540
  2586  0184                     u541:
  2587  0184  298C               	goto	l1531
  2588  0185                     u540:
  2589  0185                     l1527:
  2590  0185  0872               	movf	___awdiv@divisor,w
  2591  0186  02F4               	subwf	___awdiv@dividend,f
  2592  0187  0873               	movf	___awdiv@divisor+1,w
  2593  0188  1C03               	skipc
  2594  0189  03F5               	decf	___awdiv@dividend+1,f
  2595  018A  02F5               	subwf	___awdiv@dividend+1,f
  2596  018B                     l1529:
  2597  018B  1422               	bsf	___awdiv@quotient,0
  2598  018C                     l1531:
  2599  018C  3001               	movlw	1
  2600  018D                     u555:
  2601  018D  1003               	clrc
  2602  018E  0CF3               	rrf	___awdiv@divisor+1,f
  2603  018F  0CF2               	rrf	___awdiv@divisor,f
  2604  0190  3EFF               	addlw	-1
  2605  0191  1D03               	skipz
  2606  0192  298D               	goto	u555
  2607  0193                     l1533:
  2608  0193  3001               	movlw	1
  2609  0194  02A0               	subwf	___awdiv@counter,f
  2610  0195  1D03               	btfss	3,2
  2611  0196  2998               	goto	u561
  2612  0197  2999               	goto	u560
  2613  0198                     u561:
  2614  0198  2974               	goto	l1525
  2615  0199                     u560:
  2616  0199                     l1535:
  2617  0199  0821               	movf	___awdiv@sign,w
  2618  019A  1903               	btfsc	3,2
  2619  019B  299D               	goto	u571
  2620  019C  299E               	goto	u570
  2621  019D                     u571:
  2622  019D  29A3               	goto	l1539
  2623  019E                     u570:
  2624  019E                     l1537:
  2625  019E  09A2               	comf	___awdiv@quotient,f
  2626  019F  09A3               	comf	___awdiv@quotient+1,f
  2627  01A0  0AA2               	incf	___awdiv@quotient,f
  2628  01A1  1903               	skipnz
  2629  01A2  0AA3               	incf	___awdiv@quotient+1,f
  2630  01A3                     l1539:
  2631  01A3  0823               	movf	___awdiv@quotient+1,w
  2632  01A4  00F3               	movwf	?___awdiv+1
  2633  01A5  0822               	movf	___awdiv@quotient,w
  2634  01A6  00F2               	movwf	?___awdiv
  2635  01A7                     l416:
  2636  01A7  0008               	return
  2637  01A8                     __end_of___awdiv:
  2638                           
  2639                           	psect	text15
  2640  03ED                     __ptext15:	
  2641 ;; *************** function _isr *****************
  2642 ;; Defined at:
  2643 ;;		line 78 in file "main_lab2.c"
  2644 ;; Parameters:    Size  Location     Type
  2645 ;;		None
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;		None
  2648 ;; Return value:  Size  Location     Type
  2649 ;;                  1    wreg      void 
  2650 ;; Registers used:
  2651 ;;		wreg
  2652 ;; Tracked objects:
  2653 ;;		On entry : 0/0
  2654 ;;		On exit  : 0/0
  2655 ;;		Unchanged: 0/0
  2656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2657 ;;      Params:         0       0       0       0       0
  2658 ;;      Locals:         0       0       0       0       0
  2659 ;;      Temps:          2       0       0       0       0
  2660 ;;      Totals:         2       0       0       0       0
  2661 ;;Total ram usage:        2 bytes
  2662 ;; Hardware stack levels used:    1
  2663 ;; This function calls:
  2664 ;;		Nothing
  2665 ;; This function is called by:
  2666 ;;		Interrupt level 1
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           
  2671                           ;psect for function _isr
  2672  03ED                     _isr:
  2673  03ED                     i1l1095:
  2674                           
  2675                           ;main_lab2.c: 81:      if(PIR1bits.RCIF)
  2676  03ED  1283               	bcf	3,5	;RP0=0, select bank0
  2677  03EE  1303               	bcf	3,6	;RP1=0, select bank0
  2678  03EF  1E8C               	btfss	12,5	;volatile
  2679  03F0  2BF2               	goto	u24_21
  2680  03F1  2BF3               	goto	u24_20
  2681  03F2                     u24_21:
  2682  03F2  2BF6               	goto	i1l70
  2683  03F3                     u24_20:
  2684  03F3                     i1l1097:
  2685                           
  2686                           ;main_lab2.c: 82:     {;main_lab2.c: 83:         RCREG=dato_recibido;
  2687  03F3  087B               	movf	_dato_recibido,w
  2688  03F4  009A               	movwf	26	;volatile
  2689  03F5                     i1l1099:
  2690                           
  2691                           ;main_lab2.c: 84:         PIR1bits.RCIF=0;
  2692  03F5  128C               	bcf	12,5	;volatile
  2693  03F6                     i1l70:
  2694  03F6  0871               	movf	??_isr+1,w
  2695  03F7  008A               	movwf	10
  2696  03F8  0E70               	swapf	??_isr,w
  2697  03F9  0083               	movwf	3
  2698  03FA  0EFE               	swapf	btemp,f
  2699  03FB  0E7E               	swapf	btemp,w
  2700  03FC  0009               	retfie
  2701  03FD                     __end_of_isr:
  2702  007E                     btemp	set	126	;btemp
  2703  007E                     wtemp0	set	126
  2704                           
  2705                           	psect	intentry
  2706  0004                     __pintentry:	
  2707                           ;incstack = 0
  2708                           ; Regs used in _isr: [wreg]
  2709                           
  2710  0004                     interrupt_function:
  2711  007E                     saved_w	set	btemp
  2712  0004  00FE               	movwf	btemp
  2713  0005  0E03               	swapf	3,w
  2714  0006  00F0               	movwf	??_isr
  2715  0007  080A               	movf	10,w
  2716  0008  00F1               	movwf	??_isr+1
  2717  0009  120A  118A  2BED   	ljmp	_isr
  2718                           
  2719                           	psect	config
  2720                           
  2721                           ;Config register CONFIG1 @ 0x2007
  2722                           ;	Oscillator Selection bits
  2723                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2724                           ;	Watchdog Timer Enable bit
  2725                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2726                           ;	Power-up Timer Enable bit
  2727                           ;	PWRTE = OFF, PWRT disabled
  2728                           ;	RE3/MCLR pin function select bit
  2729                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2730                           ;	Code Protection bit
  2731                           ;	CP = OFF, Program memory code protection is disabled
  2732                           ;	Data Code Protection bit
  2733                           ;	CPD = OFF, Data memory code protection is disabled
  2734                           ;	Brown Out Reset Selection bits
  2735                           ;	BOREN = OFF, BOR disabled
  2736                           ;	Internal External Switchover bit
  2737                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2738                           ;	Fail-Safe Clock Monitor Enabled bit
  2739                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2740                           ;	Low Voltage Programming Enable bit
  2741                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2742                           ;	In-Circuit Debugger Mode bit
  2743                           ;	DEBUG = 0x1, unprogrammed default
  2744  2007                     	org	8199
  2745  2007  20D4               	dw	8404
  2746                           
  2747                           ;Config register CONFIG2 @ 0x2008
  2748                           ;	Brown-out Reset Selection bit
  2749                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2750                           ;	Flash Program Memory Self Write Enable bits
  2751                           ;	WRT = OFF, Write protection off
  2752  2008                     	org	8200
  2753  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     31      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3878
                                             29 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                           _lcd_init
                          _lcd_linea
                     _recepcion_uart
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     212
                                             27 BANK0      2     0      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
                        _uart_config
 ---------------------------------------------------------------------------------
 (2) _uart_config                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recepcion_uart                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    3289
                                              8 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1513
                                              7 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    1165
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _recepcion_uart
   _setup
     _adc_config
     _uart_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      30       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      30      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Jul 28 15:40:44 2021

                      pc 0002                       l81 0342                       l97 037F  
                     l89 02C7             ___awdiv@sign 0021          ?_recepcion_uart 0070  
                     fsr 0004                      l102 028C                      l116 013E  
                    l140 0398                      l125 03D7                      l143 03EC  
                    l152 031B                      l146 03AD                      l158 02F3  
                    l416 01A7                      l177 03C2                      l429 0202  
                    l771 03DD                      l773 03DE                      l781 03C8  
                    l775 03DF                      l783 03D0                      l791 03B9  
                    l777 03E9                      l769 03D9                      l785 03D4  
                    l793 03BA                      l881 039E                      l779 03C3  
                    l795 03BD                      l787 03AE                      l971 031C  
                    l883 039F                      l797 03BE                      l789 03B5  
                    l981 0327                      l973 0320                      l885 03A0  
                    l799 03BF                      l991 033B                      l983 032C  
                    l975 0321                      l887 03AA                      l879 039A  
                    l993 033C                      l985 0330                      l977 0325  
                    l995 033F                      l987 0331                      l979 0326  
                    l997 0380                      l989 0336                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u500 0162  
                    u501 0161                      u520 0174                      u600 01C5  
                    u440 0293                      u521 0173                      u601 01C4  
                    u441 0292                      u450 02CE                      u515 0166  
                    u451 02CD                      u540 0185                      u620 01D7  
                    u460 02E4                      u541 0184                      u621 01D6  
                    u461 02E3                      u630 01E1                      u470 031B  
                    u535 0175                      u631 01E0                      u615 01C9  
                    u471 031A                      u560 0199                      u480 0146  
                    u561 0198                      u545 0181                      u481 0145  
                    u570 019E                      u490 0151                      u650 01F4  
                    u571 019D                      u555 018D                      u491 0150  
                    u651 01F3                      u635 01DD                      u707 03D2  
                    u660 01F9                      u580 01AF                      u661 01F8  
                    u645 01E8                      u581 01AE                      u717 03E4  
                    u590 01BA                      u591 01B9                      u677 029A  
                    u687 02AB                      u697 03A5                      _dat 0399  
                    _cmd 03D8                      _isr 03ED                      fsr0 0004  
                    indf 0000             ___awmod@sign 0079                     l1201 0256  
                   l1213 025A                     l1231 0260                     l1207 0258  
                   l1225 025E                     l1219 025C                     l1501 0142  
                   l1237 0262                     l1245 0264                     l1341 02A3  
                   l1333 028D                     ?_dat 0070                     l1511 0156  
                   l1503 0146                     l1175 024F                     l1343 02A5  
                   l1521 016C                     l1513 015A                     l1505 014B  
                   l1177 0250                     l1601 012D                     l1361 0363  
                   l1345 02AE                     l1337 0294                     l1353 02B4  
                   ?_cmd 0070                     l1531 018C                     l1523 0170  
                   l1515 015C                     l1507 014D                     l1195 0254  
                   l1603 0131                     l1363 036A                     l1347 02B2  
                   l1339 029D                     l1533 0193                     l1525 0174  
                   l1517 0162                     l1509 0151                     l1189 0252  
                   l1605 0135                     l1381 02DE                     l1373 02C9  
                   l1621 0230                     l1613 0203                     l1527 0185  
                   l1519 0165                     l1535 0199                     l1551 01B6  
                   l1543 01A8                     l1607 0139                     l1383 02E4  
                   l1375 02CE                     l1367 036F                     l1359 0362  
                   l1391 02F5                     l1615 0213                     l1537 019E  
                   l1529 018B                     l1561 01CF                     l1553 01BA  
                   l1545 01A9                     l1609 013D                     l1385 02E9  
                   l1377 02D3                     l1393 0303                     l1617 0218  
                   l1539 01A3                     l1571 01EE                     l1563 01D3  
                   l1555 01BF                     l1547 01AF                     l1387 02ED  
                   l1379 02D7                     l1395 030B                     l1619 0225  
                   l1565 01D7                     l1557 01C5                     l1573 01F4  
                   l1549 01B4                     l1581 001C                     l1389 02F4  
                   l1575 01F9                     l1567 01E1                     l1559 01C8  
                   l1591 00CB                     l1583 004B                     l1577 01FE  
                   l1569 01E7                     l1593 00CF                     l1585 004F  
                   l1499 013F                     l1595 00FC                     l1587 007C  
                   l1683 02BF                     l1597 011A                     l1589 009A  
                   l1685 0377                     l1687 026C                     l1599 0129  
                   ?_isr 0070                     STR_1 0353                     i1l70 03F6  
                   dat@b 0074                     cmd@a 0074                     _main 0203  
                   _show 02F4                     btemp 007E                     start 000C  
                  ??_dat 0072                    ??_cmd 0072                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 01A8          __end_of___awmod 0203  
                  ?_show 003B                    _ANSEL 0188          ___awdiv@divisor 0072  
        ___awdiv@counter 0020                    _RCREG 001A                    u24_20 03F3  
                  u24_21 03F2                    _SPBRG 0099                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _setup 031C  
                  pclath 000A                    show@s 003B            lcd_linea@temp 0078  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 024E             __end_of_show 031C                   ??_main 003D  
                 ??_show 007A     __size_of_datos_ascii 003F                   _ADRESH 001E  
       ___awdiv@dividend 0074                   ?_setup 0070                   _ANSELH 0189  
                 i1l1095 03ED                   i1l1097 03F3                   i1l1099 03F5  
                 _SPBRGH 009A         __end_of_lcd_init 0399          lcd_ascii@random 002B  
              ??___awdiv 0076                ??___awmod 0077         ___awdiv@quotient 0022  
        ___awmod@divisor 0024          ___awmod@counter 0078             ?_uart_config 0070  
                 saved_w 007E  __end_of__initialization 0018         ??_recepcion_uart 0072  
         __pcstackCOMMON 0070               _adc_config 03C3            __end_of_setup 0343  
     __size_of_lcd_ascii 0123       __size_of_lcd_linea 002C                  ??_setup 0073  
             __pbssBANK0 003F               __pmaintext 0203               __pintentry 0004  
              ?_lcd_init 0070               __stringtab 0343        __end_of_lcd_ascii 013F  
      __end_of_lcd_linea 02F4              ?_adc_config 0070                  ___awdiv 013F  
                ___awmod 01A8                _ANSELbits 0188                  __ptext1 028D  
                __ptext2 02F4                  __ptext3 0399                  __ptext4 031C  
                __ptext5 03AE                  __ptext6 03C3                  __ptext7 0362  
                __ptext8 02C8                  __ptext9 0380             __size_of_dat 0015  
           __size_of_cmd 0015             __size_of_isr 0010         ___awmod@dividend 0026  
   __size_of_uart_config 0015               ??_lcd_init 0075     end_of_initialization 0018  
              _RCSTAbits 0018            ??_datos_ascii 0072               _toggle_adc 028D  
              _TRISDbits 0088      __size_of_adc_config 0015               lcd_linea@a 0077  
             lcd_linea@b 0075               lcd_linea@z 0079                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F      __end_of_datos_ascii 028D  
            __end_of_dat 03AE              __end_of_cmd 03ED              __end_of_isr 03FD  
      datos_ascii@numero 0074              ?_toggle_adc 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0019  
              _centenas3 007A             ??_adc_config 0072                 ?___awdiv 0072  
               ?___awmod 0024            _dato_recibido 007B                _lcd_ascii 001C  
            _datos_ascii 024E                _lcd_linea 02C8                __pstrings 0343  
__size_of_recepcion_uart 001E           __size_of_setup 0027       __end_of_adc_config 03D8  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
    __size_of_toggle_adc 003B               ?_lcd_ascii 0070                _unidades3 003F  
             ?_lcd_linea 0075               _ADCON0bits 001F              __stringbase 0352  
             _ADCON1bits 009F            ??_uart_config 0072              _cuenta_uart 0041  
            _conversion1 0043              _conversion2 0042         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 0353                 _decenas3 0040  
               __ptext10 03D8                 __ptext11 001C                 __ptext12 024E  
               __ptext13 01A8                 __ptext14 013F                 __ptext15 03ED  
    __end_of_uart_config 03C3                 _lcd_init 0380            __size_of_main 004B  
          __size_of_show 0028              ??_lcd_ascii 0028              ??_lcd_linea 0076  
         _recepcion_uart 0362               _INTCONbits 000B             ??_toggle_adc 0072  
               intlevel1 0000                stringcode 034D               _OSCCONbits 008F  
     __end_of_toggle_adc 02C8   __end_of_recepcion_uart 0380             ?_datos_ascii 0070  
            _uart_config 03AE                 stringdir 034D                 stringtab 0343  
