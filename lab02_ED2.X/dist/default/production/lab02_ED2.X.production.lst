

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jul 24 23:02:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	intentry,global,class=CODE,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0007                     _PORTCbits	set	7
   368  0006                     _PORTB	set	6
   369  001E                     _ADRESH	set	30
   370  001F                     _ADCON0bits	set	31
   371  000C                     _PIR1bits	set	12
   372  000B                     _INTCONbits	set	11
   373  0039                     _RC1	set	57
   374  0038                     _RC0	set	56
   375  009F                     _ADCON1bits	set	159
   376  008C                     _PIE1bits	set	140
   377  008F                     _OSCCONbits	set	143
   378  0087                     _TRISCbits	set	135
   379  0086                     _TRISB	set	134
   380  0188                     _ANSELbits	set	392
   381  0189                     _ANSELH	set	393
   382  0188                     _ANSEL	set	392
   383                           
   384                           	psect	strings
   385  0091                     __pstrings:
   386  0091                     stringtab:
   387  0091                     __stringtab:
   388  0091                     stringcode:	
   389                           ;	String table - string pointers are 1 byte each
   390                           
   391  0091                     stringdir:
   392  0091  3000               	movlw	high stringdir
   393  0092  008A               	movwf	10
   394  0093  0804               	movf	4,w
   395  0094  0A84               	incf	4,f
   396  0095  0782               	addwf	2,f
   397  0096                     __stringbase:
   398  0096  3400               	retlw	0
   399  0097                     __end_of__stringtab:
   400  0097                     STR_1:
   401  0097  3420               	retlw	32	;' '
   402  0098  3473               	retlw	115	;'s'
   403  0099  3465               	retlw	101	;'e'
   404  009A  346E               	retlw	110	;'n'
   405  009B  3431               	retlw	49	;'1'
   406  009C  3420               	retlw	32	;' '
   407  009D  3473               	retlw	115	;'s'
   408  009E  3465               	retlw	101	;'e'
   409  009F  346E               	retlw	110	;'n'
   410  00A0  3432               	retlw	50	;'2'
   411  00A1  3420               	retlw	32	;' '
   412  00A2  3473               	retlw	115	;'s'
   413  00A3  3465               	retlw	101	;'e'
   414  00A4  346E               	retlw	110	;'n'
   415  00A5  3433               	retlw	51	;'3'
   416  00A6  3400               	retlw	0
   417  00A7                     STR_2:
   418  00A7  3470               	retlw	112	;'p'
   419  00A8  3472               	retlw	114	;'r'
   420  00A9  346F               	retlw	111	;'o'
   421  00AA  3462               	retlw	98	;'b'
   422  00AB  3465               	retlw	101	;'e'
   423  00AC  346D               	retlw	109	;'m'
   424  00AD  346F               	retlw	111	;'o'
   425  00AE  3473               	retlw	115	;'s'
   426  00AF  3400               	retlw	0
   427                           
   428                           	psect	cinit
   429  000F                     start_initialization:	
   430                           ; #config settings
   431                           
   432  000F                     __initialization:
   433                           
   434                           ; Clear objects allocated to COMMON
   435  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   436  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   437  0011                     end_of_initialization:	
   438                           ;End of C runtime variable initialization code
   439                           
   440  0011                     __end_of__initialization:
   441  0011  0183               	clrf	3
   442  0012  120A  118A  2815   	ljmp	_main	;jump to C main() function
   443                           
   444                           	psect	bssCOMMON
   445  007A                     __pbssCOMMON:
   446  007A                     _conversion2:
   447  007A                     	ds	1
   448  007B                     _conversion1:
   449  007B                     	ds	1
   450                           
   451                           	psect	cstackCOMMON
   452  0070                     __pcstackCOMMON:
   453  0070                     ?_setup:
   454  0070                     ?_lcd_init:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     ?_cmd:	
   458                           ; 1 bytes @ 0x0
   459                           
   460  0070                     ?_show:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     ?_adc_config:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ?_isr:	
   467                           ; 1 bytes @ 0x0
   468                           
   469  0070                     ??_isr:	
   470                           ; 1 bytes @ 0x0
   471                           
   472  0070                     ?_main:	
   473                           ; 1 bytes @ 0x0
   474                           
   475  0070                     ?_dat:	
   476                           ; 1 bytes @ 0x0
   477                           
   478                           
   479                           ; 1 bytes @ 0x0
   480  0070                     	ds	2
   481  0072                     ??_cmd:
   482  0072                     ??_adc_config:	
   483                           ; 1 bytes @ 0x2
   484                           
   485  0072                     ??_dat:	
   486                           ; 1 bytes @ 0x2
   487                           
   488                           
   489                           ; 1 bytes @ 0x2
   490  0072                     	ds	1
   491  0073                     ??_setup:
   492                           
   493                           ; 1 bytes @ 0x3
   494  0073                     	ds	1
   495  0074                     cmd@a:
   496  0074                     dat@b:	
   497                           ; 1 bytes @ 0x4
   498                           
   499                           
   500                           ; 1 bytes @ 0x4
   501  0074                     	ds	1
   502  0075                     ??_lcd_init:
   503  0075                     ?_lcd_linea:	
   504                           ; 1 bytes @ 0x5
   505                           
   506  0075                     ??_show:	
   507                           ; 1 bytes @ 0x5
   508                           
   509  0075                     lcd_linea@b:	
   510                           ; 1 bytes @ 0x5
   511                           
   512                           
   513                           ; 1 bytes @ 0x5
   514  0075                     	ds	1
   515  0076                     ??_lcd_linea:
   516  0076                     show@s:	
   517                           ; 1 bytes @ 0x6
   518                           
   519                           
   520                           ; 1 bytes @ 0x6
   521  0076                     	ds	1
   522  0077                     lcd_linea@a:
   523                           
   524                           ; 1 bytes @ 0x7
   525  0077                     	ds	1
   526  0078                     lcd_linea@temp:
   527                           
   528                           ; 1 bytes @ 0x8
   529  0078                     	ds	1
   530  0079                     lcd_linea@z:
   531                           
   532                           ; 1 bytes @ 0x9
   533  0079                     	ds	1
   534  007A                     ??_main:
   535                           
   536                           	psect	maintext
   537  0015                     __pmaintext:	
   538                           ; 1 bytes @ 0xA
   539 ;;
   540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   541 ;;
   542 ;; *************** function _main *****************
   543 ;; Defined at:
   544 ;;		line 71 in file "main_lab2.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;		None
   547 ;; Auto vars:     Size  Location     Type
   548 ;;		None
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : B00/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         0       0       0       0       0
   559 ;;      Locals:         0       0       0       0       0
   560 ;;      Temps:          0       0       0       0       0
   561 ;;      Totals:         0       0       0       0       0
   562 ;;Total ram usage:        0 bytes
   563 ;; Hardware stack levels required when called:    3
   564 ;; This function calls:
   565 ;;		_cmd
   566 ;;		_lcd_init
   567 ;;		_lcd_linea
   568 ;;		_setup
   569 ;;		_show
   570 ;; This function is called by:
   571 ;;		Startup code after reset
   572 ;; This function uses a non-reentrant model
   573 ;;
   574                           
   575                           
   576                           ;psect for function _main
   577  0015                     _main:
   578  0015                     l854:	
   579                           ;incstack = 0
   580                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   581                           
   582                           
   583                           ;main_lab2.c: 73:     setup();
   584  0015  120A  118A  2071  120A  118A  	fcall	_setup
   585                           
   586                           ;main_lab2.c: 74:     lcd_init();
   587  001A  120A  118A  20CF  120A  118A  	fcall	_lcd_init
   588                           
   589                           ;main_lab2.c: 75:  cmd(0x90);
   590  001F  3090               	movlw	144
   591  0020  120A  118A  2113  120A  118A  	fcall	_cmd
   592  0025                     l50:	
   593                           ;main_lab2.c: 78:     while(1)
   594                           
   595                           
   596                           ;main_lab2.c: 79:     {;main_lab2.c: 80:         lcd_linea(1,1);
   597  0025  01F5               	clrf	lcd_linea@b
   598  0026  0AF5               	incf	lcd_linea@b,f
   599  0027  3001               	movlw	1
   600  0028  120A  118A  2045  120A  118A  	fcall	_lcd_linea
   601  002D                     l856:
   602                           
   603                           ;main_lab2.c: 81:         show(" sen1 sen2 sen3");
   604  002D  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   605  002E  120A  118A  20B0  120A  118A  	fcall	_show
   606  0033                     l858:
   607                           
   608                           ;main_lab2.c: 82:         lcd_linea(2,1);
   609  0033  01F5               	clrf	lcd_linea@b
   610  0034  0AF5               	incf	lcd_linea@b,f
   611  0035  3002               	movlw	2
   612  0036  120A  118A  2045  120A  118A  	fcall	_lcd_linea
   613                           
   614                           ;main_lab2.c: 83:         show("probemos");
   615  003B  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   616  003C  120A  118A  20B0  120A  118A  	fcall	_show
   617  0041  2825               	goto	l50
   618  0042  120A  118A  280C   	ljmp	start
   619  0045                     __end_of_main:
   620                           
   621                           	psect	text1
   622  00B0                     __ptext1:	
   623 ;; *************** function _show *****************
   624 ;; Defined at:
   625 ;;		line 59 in file "LCD.c"
   626 ;; Parameters:    Size  Location     Type
   627 ;;  s               1    wreg     PTR unsigned char 
   628 ;;		 -> STR_2(9), STR_1(16), 
   629 ;; Auto vars:     Size  Location     Type
   630 ;;  s               1    6[COMMON] PTR unsigned char 
   631 ;;		 -> STR_2(9), STR_1(16), 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0
   643 ;;      Temps:          1       0       0       0       0
   644 ;;      Totals:         2       0       0       0       0
   645 ;;Total ram usage:        2 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    2
   648 ;; This function calls:
   649 ;;		_dat
   650 ;; This function is called by:
   651 ;;		_main
   652 ;; This function uses a non-reentrant model
   653 ;;
   654                           
   655                           
   656                           ;psect for function _show
   657  00B0                     _show:
   658                           
   659                           ;incstack = 0
   660                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   661                           ;show@s stored from wreg
   662  00B0  00F6               	movwf	show@s
   663  00B1                     l846:
   664                           
   665                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
   666  00B1  28C2               	goto	l852
   667  00B2                     l848:
   668                           
   669                           ;LCD.c: 62:   dat(*s++);
   670  00B2  0876               	movf	show@s,w
   671  00B3  0084               	movwf	4
   672  00B4  120A  118A  2091  120A  118A  	fcall	stringdir
   673  00B9  120A  118A  20FE  120A  118A  	fcall	_dat
   674  00BE                     l850:
   675  00BE  3001               	movlw	1
   676  00BF  00F5               	movwf	??_show
   677  00C0  0875               	movf	??_show,w
   678  00C1  07F6               	addwf	show@s,f
   679  00C2                     l852:
   680                           
   681                           ;LCD.c: 61:  while(*s) {
   682  00C2  0876               	movf	show@s,w
   683  00C3  0084               	movwf	4
   684  00C4  120A  118A  2091  120A  118A  	fcall	stringdir
   685  00C9  3A00               	xorlw	0
   686  00CA  1D03               	skipz
   687  00CB  28CD               	goto	u71
   688  00CC  28CE               	goto	u70
   689  00CD                     u71:
   690  00CD  28B2               	goto	l848
   691  00CE                     u70:
   692  00CE                     l100:
   693  00CE  0008               	return
   694  00CF                     __end_of_show:
   695                           
   696                           	psect	text2
   697  00FE                     __ptext2:	
   698 ;; *************** function _dat *****************
   699 ;; Defined at:
   700 ;;		line 48 in file "LCD.c"
   701 ;; Parameters:    Size  Location     Type
   702 ;;  b               1    wreg     unsigned char 
   703 ;; Auto vars:     Size  Location     Type
   704 ;;  b               1    4[COMMON] unsigned char 
   705 ;; Return value:  Size  Location     Type
   706 ;;                  1    wreg      void 
   707 ;; Registers used:
   708 ;;		wreg
   709 ;; Tracked objects:
   710 ;;		On entry : 0/0
   711 ;;		On exit  : 0/0
   712 ;;		Unchanged: 0/0
   713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   714 ;;      Params:         0       0       0       0       0
   715 ;;      Locals:         1       0       0       0       0
   716 ;;      Temps:          2       0       0       0       0
   717 ;;      Totals:         3       0       0       0       0
   718 ;;Total ram usage:        3 bytes
   719 ;; Hardware stack levels used:    1
   720 ;; Hardware stack levels required when called:    1
   721 ;; This function calls:
   722 ;;		Nothing
   723 ;; This function is called by:
   724 ;;		_show
   725 ;; This function uses a non-reentrant model
   726 ;;
   727                           
   728                           
   729                           ;psect for function _dat
   730  00FE                     _dat:
   731                           
   732                           ;incstack = 0
   733                           ; Regs used in _dat: [wreg]
   734                           ;dat@b stored from wreg
   735  00FE  00F4               	movwf	dat@b
   736  00FF                     l724:
   737                           
   738                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
   739  00FF  0874               	movf	dat@b,w
   740  0100  1283               	bcf	3,5	;RP0=0, select bank0
   741  0101  1303               	bcf	3,6	;RP1=0, select bank0
   742  0102  0086               	movwf	6	;volatile
   743  0103                     l726:
   744                           
   745                           ;LCD.c: 51:  RC0=1;
   746  0103  1407               	bsf	7,0	;volatile
   747  0104                     l728:
   748                           
   749                           ;LCD.c: 52:  RC1=0;
   750  0104  1087               	bcf	7,1	;volatile
   751  0105                     l730:
   752                           
   753                           ;LCD.c: 53:  PORTCbits.RC2=1;
   754  0105  1507               	bsf	7,2	;volatile
   755                           
   756                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
   757  0106  3003               	movlw	3
   758  0107  00F3               	movwf	??_dat+1
   759  0108  3097               	movlw	151
   760  0109  00F2               	movwf	??_dat
   761  010A                     u87:
   762  010A  0BF2               	decfsz	??_dat,f
   763  010B  290A               	goto	u87
   764  010C  0BF3               	decfsz	??_dat+1,f
   765  010D  290A               	goto	u87
   766  010E  290F               	nop2
   767  010F                     l732:
   768                           
   769                           ;LCD.c: 55:  PORTCbits.RC2=0;
   770  010F  1283               	bcf	3,5	;RP0=0, select bank0
   771  0110  1303               	bcf	3,6	;RP1=0, select bank0
   772  0111  1107               	bcf	7,2	;volatile
   773  0112                     l94:
   774  0112  0008               	return
   775  0113                     __end_of_dat:
   776                           
   777                           	psect	text3
   778  0071                     __ptext3:	
   779 ;; *************** function _setup *****************
   780 ;; Defined at:
   781 ;;		line 89 in file "main_lab2.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;		None
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : 0/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   795 ;;      Params:         0       0       0       0       0
   796 ;;      Locals:         0       0       0       0       0
   797 ;;      Temps:          0       0       0       0       0
   798 ;;      Totals:         0       0       0       0       0
   799 ;;Total ram usage:        0 bytes
   800 ;; Hardware stack levels used:    1
   801 ;; Hardware stack levels required when called:    2
   802 ;; This function calls:
   803 ;;		_adc_config
   804 ;; This function is called by:
   805 ;;		_main
   806 ;; This function uses a non-reentrant model
   807 ;;
   808                           
   809                           
   810                           ;psect for function _setup
   811  0071                     _setup:
   812  0071                     l734:	
   813                           ;incstack = 0
   814                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   815                           
   816                           
   817                           ;main_lab2.c: 92:     ANSEL=0;
   818  0071  1683               	bsf	3,5	;RP0=1, select bank3
   819  0072  1703               	bsf	3,6	;RP1=1, select bank3
   820  0073  0188               	clrf	8	;volatile
   821                           
   822                           ;main_lab2.c: 93:     ANSELH=0;
   823  0074  0189               	clrf	9	;volatile
   824  0075                     l736:
   825                           
   826                           ;main_lab2.c: 94:     ANSELbits.ANS0=1;
   827  0075  1408               	bsf	8,0	;volatile
   828  0076                     l738:
   829                           
   830                           ;main_lab2.c: 95:     ANSELbits.ANS1=1;
   831  0076  1488               	bsf	8,1	;volatile
   832                           
   833                           ;main_lab2.c: 98:     TRISB=0;
   834  0077  1683               	bsf	3,5	;RP0=1, select bank1
   835  0078  1303               	bcf	3,6	;RP1=0, select bank1
   836  0079  0186               	clrf	6	;volatile
   837  007A                     l740:
   838                           
   839                           ;main_lab2.c: 99:     TRISCbits.TRISC0=0;
   840  007A  1007               	bcf	7,0	;volatile
   841  007B                     l742:
   842                           
   843                           ;main_lab2.c: 100:     TRISCbits.TRISC1=0;
   844  007B  1087               	bcf	7,1	;volatile
   845  007C                     l744:
   846                           
   847                           ;main_lab2.c: 101:     TRISCbits.TRISC2=0;
   848  007C  1107               	bcf	7,2	;volatile
   849  007D                     l746:
   850                           
   851                           ;main_lab2.c: 104:     OSCCONbits.IRCF = 0b111;
   852  007D  3070               	movlw	112
   853  007E  048F               	iorwf	15,f	;volatile
   854  007F                     l748:
   855                           
   856                           ;main_lab2.c: 105:     OSCCONbits.SCS = 1;
   857  007F  140F               	bsf	15,0	;volatile
   858  0080                     l750:
   859                           
   860                           ;main_lab2.c: 117:     adc_config();
   861  0080  120A  118A  20E8  120A  118A  	fcall	_adc_config
   862  0085                     l752:
   863                           
   864                           ;main_lab2.c: 120:     INTCONbits.GIE=1;
   865  0085  178B               	bsf	11,7	;volatile
   866  0086                     l754:
   867                           
   868                           ;main_lab2.c: 121:     INTCONbits.T0IE=0;
   869  0086  128B               	bcf	11,5	;volatile
   870  0087                     l756:
   871                           
   872                           ;main_lab2.c: 122:     INTCONbits.T0IF=0;
   873  0087  110B               	bcf	11,2	;volatile
   874  0088                     l758:
   875                           
   876                           ;main_lab2.c: 123:     INTCONbits.RBIE=0;
   877  0088  118B               	bcf	11,3	;volatile
   878  0089                     l760:
   879                           
   880                           ;main_lab2.c: 124:     INTCONbits.RBIF=0;
   881  0089  100B               	bcf	11,0	;volatile
   882  008A                     l762:
   883                           
   884                           ;main_lab2.c: 126:     PIE1bits.ADIE = 0 ;
   885  008A  1683               	bsf	3,5	;RP0=1, select bank1
   886  008B  1303               	bcf	3,6	;RP1=0, select bank1
   887  008C  130C               	bcf	12,6	;volatile
   888  008D                     l764:
   889                           
   890                           ;main_lab2.c: 127:     PIR1bits.ADIF = 0;
   891  008D  1283               	bcf	3,5	;RP0=0, select bank0
   892  008E  1303               	bcf	3,6	;RP1=0, select bank0
   893  008F  130C               	bcf	12,6	;volatile
   894  0090                     l56:
   895  0090  0008               	return
   896  0091                     __end_of_setup:
   897                           
   898                           	psect	text4
   899  00E8                     __ptext4:	
   900 ;; *************** function _adc_config *****************
   901 ;; Defined at:
   902 ;;		line 20 in file "adc_config.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      void 
   909 ;; Registers used:
   910 ;;		wreg, status,2, status,0
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   916 ;;      Params:         0       0       0       0       0
   917 ;;      Locals:         0       0       0       0       0
   918 ;;      Temps:          1       0       0       0       0
   919 ;;      Totals:         1       0       0       0       0
   920 ;;Total ram usage:        1 bytes
   921 ;; Hardware stack levels used:    1
   922 ;; Hardware stack levels required when called:    1
   923 ;; This function calls:
   924 ;;		Nothing
   925 ;; This function is called by:
   926 ;;		_setup
   927 ;; This function uses a non-reentrant model
   928 ;;
   929                           
   930                           
   931                           ;psect for function _adc_config
   932  00E8                     _adc_config:
   933  00E8                     l714:	
   934                           ;incstack = 0
   935                           ; Regs used in _adc_config: [wreg+status,2+status,0]
   936                           
   937                           
   938                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
   939  00E8  1683               	bsf	3,5	;RP0=1, select bank1
   940  00E9  1303               	bcf	3,6	;RP1=0, select bank1
   941  00EA  139F               	bcf	31,7	;volatile
   942                           
   943                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
   944  00EB  121F               	bcf	31,4	;volatile
   945                           
   946                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
   947  00EC  129F               	bcf	31,5	;volatile
   948  00ED                     l716:
   949                           
   950                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
   951  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   952  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   953  00EF  081F               	movf	31,w	;volatile
   954  00F0  393F               	andlw	-193
   955  00F1  3840               	iorlw	64
   956  00F2  009F               	movwf	31	;volatile
   957                           
   958                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
   959  00F3  30C3               	movlw	-61
   960  00F4  059F               	andwf	31,f	;volatile
   961  00F5                     l718:
   962                           
   963                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(4000000/4000000.0)));
   964  00F5  3010               	movlw	16
   965  00F6  00F2               	movwf	??_adc_config
   966  00F7                     u97:
   967  00F7  0BF2               	decfsz	??_adc_config,f
   968  00F8  28F7               	goto	u97
   969  00F9  0000               	nop
   970  00FA                     l720:
   971                           
   972                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
   973  00FA  1283               	bcf	3,5	;RP0=0, select bank0
   974  00FB  1303               	bcf	3,6	;RP1=0, select bank0
   975  00FC  141F               	bsf	31,0	;volatile
   976  00FD                     l73:
   977  00FD  0008               	return
   978  00FE                     __end_of_adc_config:
   979                           
   980                           	psect	text5
   981  0045                     __ptext5:	
   982 ;; *************** function _lcd_linea *****************
   983 ;; Defined at:
   984 ;;		line 67 in file "LCD.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  a               1    wreg     unsigned char 
   987 ;;  b               1    5[COMMON] unsigned char 
   988 ;; Auto vars:     Size  Location     Type
   989 ;;  a               1    7[COMMON] unsigned char 
   990 ;;  z               1    9[COMMON] unsigned char 
   991 ;;  temp            1    8[COMMON] unsigned char 
   992 ;; Return value:  Size  Location     Type
   993 ;;                  1    wreg      void 
   994 ;; Registers used:
   995 ;;		wreg, status,2, status,0, pclath, cstack
   996 ;; Tracked objects:
   997 ;;		On entry : 0/0
   998 ;;		On exit  : 0/0
   999 ;;		Unchanged: 0/0
  1000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1001 ;;      Params:         1       0       0       0       0
  1002 ;;      Locals:         3       0       0       0       0
  1003 ;;      Temps:          1       0       0       0       0
  1004 ;;      Totals:         5       0       0       0       0
  1005 ;;Total ram usage:        5 bytes
  1006 ;; Hardware stack levels used:    1
  1007 ;; Hardware stack levels required when called:    2
  1008 ;; This function calls:
  1009 ;;		_cmd
  1010 ;; This function is called by:
  1011 ;;		_main
  1012 ;; This function uses a non-reentrant model
  1013 ;;
  1014                           
  1015                           
  1016                           ;psect for function _lcd_linea
  1017  0045                     _lcd_linea:
  1018                           
  1019                           ;incstack = 0
  1020                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1021                           ;lcd_linea@a stored from wreg
  1022  0045  00F7               	movwf	lcd_linea@a
  1023  0046                     l830:
  1024                           
  1025                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1026  0046  0377               	decf	lcd_linea@a,w
  1027  0047  1D03               	btfss	3,2
  1028  0048  284A               	goto	u51
  1029  0049  284B               	goto	u50
  1030  004A                     u51:
  1031  004A  285B               	goto	l838
  1032  004B                     u50:
  1033  004B                     l832:
  1034                           
  1035                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1036  004B  0875               	movf	lcd_linea@b,w
  1037  004C  3E7F               	addlw	127
  1038  004D  00F6               	movwf	??_lcd_linea
  1039  004E  0876               	movf	??_lcd_linea,w
  1040  004F  00F8               	movwf	lcd_linea@temp
  1041  0050                     l834:
  1042                           
  1043                           ;LCD.c: 71:         z = temp;
  1044  0050  0878               	movf	lcd_linea@temp,w
  1045  0051  00F6               	movwf	??_lcd_linea
  1046  0052  0876               	movf	??_lcd_linea,w
  1047  0053  00F9               	movwf	lcd_linea@z
  1048  0054                     l836:
  1049                           
  1050                           ;LCD.c: 72:         cmd(z);
  1051  0054  0879               	movf	lcd_linea@z,w
  1052  0055  120A  118A  2113  120A  118A  	fcall	_cmd
  1053                           
  1054                           ;LCD.c: 74:     } else if (a == 2) {
  1055  005A  2870               	goto	l106
  1056  005B                     l838:
  1057  005B  3002               	movlw	2
  1058  005C  0677               	xorwf	lcd_linea@a,w
  1059  005D  1D03               	btfss	3,2
  1060  005E  2860               	goto	u61
  1061  005F  2861               	goto	u60
  1062  0060                     u61:
  1063  0060  2870               	goto	l106
  1064  0061                     u60:
  1065  0061                     l840:
  1066                           
  1067                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1068  0061  0875               	movf	lcd_linea@b,w
  1069  0062  3EBF               	addlw	191
  1070  0063  00F6               	movwf	??_lcd_linea
  1071  0064  0876               	movf	??_lcd_linea,w
  1072  0065  00F8               	movwf	lcd_linea@temp
  1073  0066                     l842:
  1074                           
  1075                           ;LCD.c: 76:         z = temp;
  1076  0066  0878               	movf	lcd_linea@temp,w
  1077  0067  00F6               	movwf	??_lcd_linea
  1078  0068  0876               	movf	??_lcd_linea,w
  1079  0069  00F9               	movwf	lcd_linea@z
  1080  006A                     l844:
  1081                           
  1082                           ;LCD.c: 77:         cmd(z);
  1083  006A  0879               	movf	lcd_linea@z,w
  1084  006B  120A  118A  2113  120A  118A  	fcall	_cmd
  1085  0070                     l106:
  1086  0070  0008               	return
  1087  0071                     __end_of_lcd_linea:
  1088                           
  1089                           	psect	text6
  1090  00CF                     __ptext6:	
  1091 ;; *************** function _lcd_init *****************
  1092 ;; Defined at:
  1093 ;;		line 28 in file "LCD.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;		None
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;		None
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, pclath, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         0       0       0       0       0
  1111 ;;Total ram usage:        0 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    2
  1114 ;; This function calls:
  1115 ;;		_cmd
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _lcd_init
  1123  00CF                     _lcd_init:
  1124  00CF                     l768:	
  1125                           ;incstack = 0
  1126                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1127                           
  1128                           
  1129                           ;LCD.c: 30:  cmd(0x38);
  1130  00CF  3038               	movlw	56
  1131  00D0  120A  118A  2113  120A  118A  	fcall	_cmd
  1132                           
  1133                           ;LCD.c: 31:  cmd(0x0c);
  1134  00D5  300C               	movlw	12
  1135  00D6  120A  118A  2113  120A  118A  	fcall	_cmd
  1136                           
  1137                           ;LCD.c: 32:  cmd(0x06);
  1138  00DB  3006               	movlw	6
  1139  00DC  120A  118A  2113  120A  118A  	fcall	_cmd
  1140                           
  1141                           ;LCD.c: 33:  cmd(0x80);
  1142  00E1  3080               	movlw	128
  1143  00E2  120A  118A  2113  120A  118A  	fcall	_cmd
  1144  00E7                     l88:
  1145  00E7  0008               	return
  1146  00E8                     __end_of_lcd_init:
  1147                           
  1148                           	psect	text7
  1149  0113                     __ptext7:	
  1150 ;; *************** function _cmd *****************
  1151 ;; Defined at:
  1152 ;;		line 37 in file "LCD.c"
  1153 ;; Parameters:    Size  Location     Type
  1154 ;;  a               1    wreg     unsigned char 
  1155 ;; Auto vars:     Size  Location     Type
  1156 ;;  a               1    4[COMMON] unsigned char 
  1157 ;; Return value:  Size  Location     Type
  1158 ;;                  1    wreg      void 
  1159 ;; Registers used:
  1160 ;;		wreg
  1161 ;; Tracked objects:
  1162 ;;		On entry : 0/0
  1163 ;;		On exit  : 0/0
  1164 ;;		Unchanged: 0/0
  1165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1166 ;;      Params:         0       0       0       0       0
  1167 ;;      Locals:         1       0       0       0       0
  1168 ;;      Temps:          2       0       0       0       0
  1169 ;;      Totals:         3       0       0       0       0
  1170 ;;Total ram usage:        3 bytes
  1171 ;; Hardware stack levels used:    1
  1172 ;; Hardware stack levels required when called:    1
  1173 ;; This function calls:
  1174 ;;		Nothing
  1175 ;; This function is called by:
  1176 ;;		_main
  1177 ;;		_lcd_init
  1178 ;;		_lcd_linea
  1179 ;;		_lcd_mov_derecha
  1180 ;;		_lcd_mov_izquierda
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _cmd
  1186  0113                     _cmd:
  1187                           
  1188                           ;incstack = 0
  1189                           ; Regs used in _cmd: [wreg]
  1190                           ;cmd@a stored from wreg
  1191  0113  00F4               	movwf	cmd@a
  1192  0114                     l704:
  1193                           
  1194                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1195  0114  0874               	movf	cmd@a,w
  1196  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1198  0117  0086               	movwf	6	;volatile
  1199  0118                     l706:
  1200                           
  1201                           ;LCD.c: 40:  RC0=0;
  1202  0118  1007               	bcf	7,0	;volatile
  1203  0119                     l708:
  1204                           
  1205                           ;LCD.c: 41:  RC1=0;
  1206  0119  1087               	bcf	7,1	;volatile
  1207  011A                     l710:
  1208                           
  1209                           ;LCD.c: 42:  PORTCbits.RC2=1;
  1210  011A  1507               	bsf	7,2	;volatile
  1211                           
  1212                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1213  011B  3003               	movlw	3
  1214  011C  00F3               	movwf	??_cmd+1
  1215  011D  3097               	movlw	151
  1216  011E  00F2               	movwf	??_cmd
  1217  011F                     u107:
  1218  011F  0BF2               	decfsz	??_cmd,f
  1219  0120  291F               	goto	u107
  1220  0121  0BF3               	decfsz	??_cmd+1,f
  1221  0122  291F               	goto	u107
  1222  0123  2924               	nop2
  1223  0124                     l712:
  1224                           
  1225                           ;LCD.c: 44:  PORTCbits.RC2=0;
  1226  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0126  1107               	bcf	7,2	;volatile
  1229  0127                     l91:
  1230  0127  0008               	return
  1231  0128                     __end_of_cmd:
  1232                           
  1233                           	psect	text8
  1234  0128                     __ptext8:	
  1235 ;; *************** function _isr *****************
  1236 ;; Defined at:
  1237 ;;		line 61 in file "main_lab2.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		None
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; This function calls:
  1258 ;;		Nothing
  1259 ;; This function is called by:
  1260 ;;		Interrupt level 1
  1261 ;; This function uses a non-reentrant model
  1262 ;;
  1263                           
  1264                           
  1265                           ;psect for function _isr
  1266  0128                     _isr:
  1267  0128                     i1l45:
  1268  0128  0871               	movf	??_isr+1,w
  1269  0129  008A               	movwf	10
  1270  012A  0E70               	swapf	??_isr,w
  1271  012B  0083               	movwf	3
  1272  012C  0EFE               	swapf	btemp,f
  1273  012D  0E7E               	swapf	btemp,w
  1274  012E  0009               	retfie
  1275  012F                     __end_of_isr:
  1276  007E                     btemp	set	126	;btemp
  1277  007E                     wtemp0	set	126
  1278                           
  1279                           	psect	intentry
  1280  0004                     __pintentry:	
  1281                           ;incstack = 0
  1282                           ; Regs used in _isr: []
  1283                           
  1284  0004                     interrupt_function:
  1285  007E                     saved_w	set	btemp
  1286  0004  00FE               	movwf	btemp
  1287  0005  0E03               	swapf	3,w
  1288  0006  00F0               	movwf	??_isr
  1289  0007  080A               	movf	10,w
  1290  0008  00F1               	movwf	??_isr+1
  1291  0009  120A  118A  2928   	ljmp	_isr
  1292                           
  1293                           	psect	config
  1294                           
  1295                           ;Config register CONFIG1 @ 0x2007
  1296                           ;	Oscillator Selection bits
  1297                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1298                           ;	Watchdog Timer Enable bit
  1299                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1300                           ;	Power-up Timer Enable bit
  1301                           ;	PWRTE = OFF, PWRT disabled
  1302                           ;	RE3/MCLR pin function select bit
  1303                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1304                           ;	Code Protection bit
  1305                           ;	CP = OFF, Program memory code protection is disabled
  1306                           ;	Data Code Protection bit
  1307                           ;	CPD = OFF, Data memory code protection is disabled
  1308                           ;	Brown Out Reset Selection bits
  1309                           ;	BOREN = OFF, BOR disabled
  1310                           ;	Internal External Switchover bit
  1311                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1312                           ;	Fail-Safe Clock Monitor Enabled bit
  1313                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1314                           ;	Low Voltage Programming Enable bit
  1315                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1316                           ;	In-Circuit Debugger Mode bit
  1317                           ;	DEBUG = 0x1, unprogrammed default
  1318  2007                     	org	8199
  1319  2007  20D4               	dw	8404
  1320                           
  1321                           ;Config register CONFIG2 @ 0x2008
  1322                           ;	Brown-out Reset Selection bit
  1323                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1324                           ;	Flash Program Memory Self Write Enable bits
  1325                           ;	WRT = OFF, Write protection off
  1326  2008                     	org	8200
  1327  2008  3FFF               	dw	16383

Data Sizes:
    Strings     25
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 16
		 -> STR_2(CODE[9]), STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _show->_dat
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     503
                                _cmd
                           _lcd_init
                          _lcd_linea
                              _setup
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0     126
                                              5 COMMON     2     2      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     347
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      15
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _setup
     _adc_config
   _show
     _dat

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       C      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jul 24 23:02:47 2021

                      pc 0002                       l50 0025                       l56 0090  
                     l73 00FD                       l91 0127                       l94 0112  
                     l88 00E7                       u50 004B                       u51 004A  
                     u60 0061                       u61 0060                       u70 00CE  
                     u71 00CD                       u87 010A                       u97 00F7  
                     fsr 0004                      l100 00CE                      l106 0070  
                    l710 011A                      l712 0124                      l704 0114  
                    l720 00FA                      l706 0118                      l714 00E8  
                    l730 0105                      l708 0119                      l716 00ED  
                    l740 007A                      l732 010F                      l724 00FF  
                    l830 0046                      l718 00F5                      l750 0080  
                    l742 007B                      l734 0071                      l726 0103  
                    l840 0061                      l832 004B                      l760 0089  
                    l752 0085                      l744 007C                      l736 0075  
                    l728 0104                      l842 0066                      l834 0050  
                    l762 008A                      l754 0086                      l746 007D  
                    l738 0076                      l850 00BE                      l844 006A  
                    l836 0054                      l764 008D                      l756 0087  
                    l748 007F                      l852 00C2                      l838 005B  
                    l758 0088                      l846 00B1                      l854 0015  
                    l768 00CF                      l848 00B2                      l856 002D  
                    l858 0033                      _RC0 0038                      _RC1 0039  
                    u107 011F                      _dat 00FE                      _cmd 0113  
                    _isr 0128                      fsr0 0004                     ?_dat 0070  
                   ?_cmd 0070                     ?_isr 0070                     STR_1 0097  
                   STR_2 00A7                     i1l45 0128                     dat@b 0074  
                   cmd@a 0074                     _main 0015                     _show 00B0  
                   btemp 007E                     start 000C                    ??_dat 0072  
                  ??_cmd 0072                    ??_isr 0070                    ?_main 0070  
                  ?_show 0070                    _ANSEL 0188                    _PORTB 0006  
                  _TRISB 0086                    _setup 0071                    pclath 000A  
                  show@s 0076            lcd_linea@temp 0078                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0045  
           __end_of_show 00CF                   ??_main 007A                   ??_show 0075  
                 _ADRESH 001E                   ?_setup 0070                   _ANSELH 0189  
       __end_of_lcd_init 00E8                   saved_w 007E  __end_of__initialization 0011  
         __pcstackCOMMON 0070               _adc_config 00E8            __end_of_setup 0091  
     __size_of_lcd_linea 002C                  ??_setup 0073               __pmaintext 0015  
             __pintentry 0004                ?_lcd_init 0070               __stringtab 0091  
      __end_of_lcd_linea 0071              ?_adc_config 0070                _ANSELbits 0188  
                __ptext1 00B0                  __ptext2 00FE                  __ptext3 0071  
                __ptext4 00E8                  __ptext5 0045                  __ptext6 00CF  
                __ptext7 0113                  __ptext8 0128             __size_of_dat 0015  
           __size_of_cmd 0015             __size_of_isr 0007               ??_lcd_init 0075  
   end_of_initialization 0011                _PORTCbits 0007                _TRISCbits 0087  
    __size_of_adc_config 0016               lcd_linea@a 0077               lcd_linea@b 0075  
             lcd_linea@z 0079      start_initialization 000F              __end_of_dat 0113  
            __end_of_cmd 0128              __end_of_isr 012F              __pbssCOMMON 007A  
              ___latbits 0002        __size_of_lcd_init 0019             ??_adc_config 0072  
              _lcd_linea 0045                __pstrings 0091           __size_of_setup 0020  
     __end_of_adc_config 00FE        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               ?_lcd_linea 0075               _ADCON0bits 001F  
            __stringbase 0096               _ADCON1bits 009F              _conversion1 007B  
            _conversion2 007A       __end_of__stringtab 0097                 _lcd_init 00CF  
          __size_of_main 0030            __size_of_show 001F              ??_lcd_linea 0076  
             _INTCONbits 000B                 intlevel1 0000                stringcode 0091  
             _OSCCONbits 008F                 stringdir 0091                 stringtab 0091  
