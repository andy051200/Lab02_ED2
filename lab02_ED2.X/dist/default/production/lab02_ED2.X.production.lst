

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Jul 27 16:02:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2
    25                           	psect	intentry,global,class=CODE,delta=2
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.20
    30                           ; Generated 12/02/2020 GMT
    31                           ; 
    32                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F887 Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  008F                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0093                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0095                     	;# 
   116  0096                     	;# 
   117  0097                     	;# 
   118  0098                     	;# 
   119  0099                     	;# 
   120  009A                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009E                     	;# 
   125  009F                     	;# 
   126  0105                     	;# 
   127  0107                     	;# 
   128  0108                     	;# 
   129  0109                     	;# 
   130  010C                     	;# 
   131  010C                     	;# 
   132  010D                     	;# 
   133  010E                     	;# 
   134  010F                     	;# 
   135  0185                     	;# 
   136  0187                     	;# 
   137  0188                     	;# 
   138  0189                     	;# 
   139  018C                     	;# 
   140  018D                     	;# 
   141  0000                     	;# 
   142  0001                     	;# 
   143  0002                     	;# 
   144  0003                     	;# 
   145  0004                     	;# 
   146  0005                     	;# 
   147  0006                     	;# 
   148  0007                     	;# 
   149  0008                     	;# 
   150  0009                     	;# 
   151  000A                     	;# 
   152  000B                     	;# 
   153  000C                     	;# 
   154  000D                     	;# 
   155  000E                     	;# 
   156  000E                     	;# 
   157  000F                     	;# 
   158  0010                     	;# 
   159  0011                     	;# 
   160  0012                     	;# 
   161  0013                     	;# 
   162  0014                     	;# 
   163  0015                     	;# 
   164  0015                     	;# 
   165  0016                     	;# 
   166  0017                     	;# 
   167  0018                     	;# 
   168  0019                     	;# 
   169  001A                     	;# 
   170  001B                     	;# 
   171  001B                     	;# 
   172  001C                     	;# 
   173  001D                     	;# 
   174  001E                     	;# 
   175  001F                     	;# 
   176  0081                     	;# 
   177  0085                     	;# 
   178  0086                     	;# 
   179  0087                     	;# 
   180  0088                     	;# 
   181  0089                     	;# 
   182  008C                     	;# 
   183  008D                     	;# 
   184  008E                     	;# 
   185  008F                     	;# 
   186  0090                     	;# 
   187  0091                     	;# 
   188  0092                     	;# 
   189  0093                     	;# 
   190  0093                     	;# 
   191  0093                     	;# 
   192  0094                     	;# 
   193  0095                     	;# 
   194  0096                     	;# 
   195  0097                     	;# 
   196  0098                     	;# 
   197  0099                     	;# 
   198  009A                     	;# 
   199  009B                     	;# 
   200  009C                     	;# 
   201  009D                     	;# 
   202  009E                     	;# 
   203  009F                     	;# 
   204  0105                     	;# 
   205  0107                     	;# 
   206  0108                     	;# 
   207  0109                     	;# 
   208  010C                     	;# 
   209  010C                     	;# 
   210  010D                     	;# 
   211  010E                     	;# 
   212  010F                     	;# 
   213  0185                     	;# 
   214  0187                     	;# 
   215  0188                     	;# 
   216  0189                     	;# 
   217  018C                     	;# 
   218  018D                     	;# 
   219  0000                     	;# 
   220  0001                     	;# 
   221  0002                     	;# 
   222  0003                     	;# 
   223  0004                     	;# 
   224  0005                     	;# 
   225  0006                     	;# 
   226  0007                     	;# 
   227  0008                     	;# 
   228  0009                     	;# 
   229  000A                     	;# 
   230  000B                     	;# 
   231  000C                     	;# 
   232  000D                     	;# 
   233  000E                     	;# 
   234  000E                     	;# 
   235  000F                     	;# 
   236  0010                     	;# 
   237  0011                     	;# 
   238  0012                     	;# 
   239  0013                     	;# 
   240  0014                     	;# 
   241  0015                     	;# 
   242  0015                     	;# 
   243  0016                     	;# 
   244  0017                     	;# 
   245  0018                     	;# 
   246  0019                     	;# 
   247  001A                     	;# 
   248  001B                     	;# 
   249  001B                     	;# 
   250  001C                     	;# 
   251  001D                     	;# 
   252  001E                     	;# 
   253  001F                     	;# 
   254  0081                     	;# 
   255  0085                     	;# 
   256  0086                     	;# 
   257  0087                     	;# 
   258  0088                     	;# 
   259  0089                     	;# 
   260  008C                     	;# 
   261  008D                     	;# 
   262  008E                     	;# 
   263  008F                     	;# 
   264  0090                     	;# 
   265  0091                     	;# 
   266  0092                     	;# 
   267  0093                     	;# 
   268  0093                     	;# 
   269  0093                     	;# 
   270  0094                     	;# 
   271  0095                     	;# 
   272  0096                     	;# 
   273  0097                     	;# 
   274  0098                     	;# 
   275  0099                     	;# 
   276  009A                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  009F                     	;# 
   282  0105                     	;# 
   283  0107                     	;# 
   284  0108                     	;# 
   285  0109                     	;# 
   286  010C                     	;# 
   287  010C                     	;# 
   288  010D                     	;# 
   289  010E                     	;# 
   290  010F                     	;# 
   291  0185                     	;# 
   292  0187                     	;# 
   293  0188                     	;# 
   294  0189                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  008F                     	;# 
   342  0090                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0093                     	;# 
   347  0093                     	;# 
   348  0094                     	;# 
   349  0095                     	;# 
   350  0096                     	;# 
   351  0097                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009A                     	;# 
   355  009B                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  0105                     	;# 
   361  0107                     	;# 
   362  0108                     	;# 
   363  0109                     	;# 
   364  010C                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  0185                     	;# 
   370  0187                     	;# 
   371  0188                     	;# 
   372  0189                     	;# 
   373  018C                     	;# 
   374  018D                     	;# 
   375  0000                     	;# 
   376  0001                     	;# 
   377  0002                     	;# 
   378  0003                     	;# 
   379  0004                     	;# 
   380  0005                     	;# 
   381  0006                     	;# 
   382  0007                     	;# 
   383  0008                     	;# 
   384  0009                     	;# 
   385  000A                     	;# 
   386  000B                     	;# 
   387  000C                     	;# 
   388  000D                     	;# 
   389  000E                     	;# 
   390  000E                     	;# 
   391  000F                     	;# 
   392  0010                     	;# 
   393  0011                     	;# 
   394  0012                     	;# 
   395  0013                     	;# 
   396  0014                     	;# 
   397  0015                     	;# 
   398  0015                     	;# 
   399  0016                     	;# 
   400  0017                     	;# 
   401  0018                     	;# 
   402  0019                     	;# 
   403  001A                     	;# 
   404  001B                     	;# 
   405  001B                     	;# 
   406  001C                     	;# 
   407  001D                     	;# 
   408  001E                     	;# 
   409  001F                     	;# 
   410  0081                     	;# 
   411  0085                     	;# 
   412  0086                     	;# 
   413  0087                     	;# 
   414  0088                     	;# 
   415  0089                     	;# 
   416  008C                     	;# 
   417  008D                     	;# 
   418  008E                     	;# 
   419  008F                     	;# 
   420  0090                     	;# 
   421  0091                     	;# 
   422  0092                     	;# 
   423  0093                     	;# 
   424  0093                     	;# 
   425  0093                     	;# 
   426  0094                     	;# 
   427  0095                     	;# 
   428  0096                     	;# 
   429  0097                     	;# 
   430  0098                     	;# 
   431  0099                     	;# 
   432  009A                     	;# 
   433  009B                     	;# 
   434  009C                     	;# 
   435  009D                     	;# 
   436  009E                     	;# 
   437  009F                     	;# 
   438  0105                     	;# 
   439  0107                     	;# 
   440  0108                     	;# 
   441  0109                     	;# 
   442  010C                     	;# 
   443  010C                     	;# 
   444  010D                     	;# 
   445  010E                     	;# 
   446  010F                     	;# 
   447  0185                     	;# 
   448  0187                     	;# 
   449  0188                     	;# 
   450  0189                     	;# 
   451  018C                     	;# 
   452  018D                     	;# 
   453  0018                     _RCSTAbits	set	24
   454  001E                     _ADRESH	set	30
   455  001F                     _ADCON0bits	set	31
   456  000B                     _INTCONbits	set	11
   457  0009                     _PORTE	set	9
   458  0006                     _PORTB	set	6
   459  0008                     _PORTD	set	8
   460  001A                     _RCREG	set	26
   461  000C                     _PIR1bits	set	12
   462  0047                     _RD7	set	71
   463  0046                     _RD6	set	70
   464  0045                     _RD5	set	69
   465  009A                     _SPBRGH	set	154
   466  0099                     _SPBRG	set	153
   467  0098                     _TXSTAbits	set	152
   468  009F                     _ADCON1bits	set	159
   469  008C                     _PIE1bits	set	140
   470  008F                     _OSCCONbits	set	143
   471  0089                     _TRISE	set	137
   472  0088                     _TRISDbits	set	136
   473  0087                     _TRISC	set	135
   474  0086                     _TRISB	set	134
   475  0187                     _BAUDCTLbits	set	391
   476  0188                     _ANSELbits	set	392
   477  0189                     _ANSELH	set	393
   478  0188                     _ANSEL	set	392
   479                           
   480                           	psect	strings
   481  0382                     __pstrings:
   482  0382                     stringtab:
   483  0382                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486  0382  1BFF               	btfsc	btemp+1,7
   487  0383  2B8C               	ljmp	stringcode
   488  0384  1383               	bcf	3,7
   489  0385  187F               	btfsc	btemp+1,0
   490  0386  1783               	bsf	3,7
   491  0387  0800               	movf	0,w
   492  0388  0A84               	incf	4,f
   493  0389  1903               	skipnz
   494  038A  0AFF               	incf	btemp+1,f
   495  038B  0008               	return
   496  038C                     stringcode:
   497  038C                     stringdir:
   498  038C  3003               	movlw	high stringdir
   499  038D  008A               	movwf	10
   500  038E  0804               	movf	4,w
   501  038F  0A84               	incf	4,f
   502  0390  0782               	addwf	2,f
   503  0391                     __stringbase:
   504  0391  3400               	retlw	0
   505  0392                     __end_of__stringtab:
   506  0392                     STR_1:
   507  0392  3420               	retlw	32	;' '
   508  0393  3453               	retlw	83	;'S'
   509  0394  3431               	retlw	49	;'1'
   510  0395  3420               	retlw	32	;' '
   511  0396  3420               	retlw	32	;' '
   512  0397  3420               	retlw	32	;' '
   513  0398  3453               	retlw	83	;'S'
   514  0399  3432               	retlw	50	;'2'
   515  039A  3420               	retlw	32	;' '
   516  039B  3420               	retlw	32	;' '
   517  039C  3420               	retlw	32	;' '
   518  039D  3453               	retlw	83	;'S'
   519  039E  3433               	retlw	51	;'3'
   520  039F  3420               	retlw	32	;' '
   521  03A0  3400               	retlw	0
   522                           
   523                           	psect	cinit
   524  000F                     start_initialization:	
   525                           ; #config settings
   526                           
   527  000F                     __initialization:
   528                           
   529                           ; Clear objects allocated to COMMON
   530  000F  01FA               	clrf	__pbssCOMMON& (0+127)
   531  0010  01FB               	clrf	(__pbssCOMMON+1)& (0+127)
   532                           
   533                           ; Clear objects allocated to BANK0
   534  0011  1283               	bcf	3,5	;RP0=0, select bank0
   535  0012  1303               	bcf	3,6	;RP1=0, select bank0
   536  0013  01BF               	clrf	__pbssBANK0& (0+127)
   537  0014  01C0               	clrf	(__pbssBANK0+1)& (0+127)
   538  0015  01C1               	clrf	(__pbssBANK0+2)& (0+127)
   539  0016  01C2               	clrf	(__pbssBANK0+3)& (0+127)
   540  0017  01C3               	clrf	(__pbssBANK0+4)& (0+127)
   541  0018  01C4               	clrf	(__pbssBANK0+5)& (0+127)
   542  0019  01C5               	clrf	(__pbssBANK0+6)& (0+127)
   543  001A  01C6               	clrf	(__pbssBANK0+7)& (0+127)
   544  001B  01C7               	clrf	(__pbssBANK0+8)& (0+127)
   545  001C  01C8               	clrf	(__pbssBANK0+9)& (0+127)
   546  001D  01C9               	clrf	(__pbssBANK0+10)& (0+127)
   547  001E  01CA               	clrf	(__pbssBANK0+11)& (0+127)
   548  001F  01CB               	clrf	(__pbssBANK0+12)& (0+127)
   549  0020  01CC               	clrf	(__pbssBANK0+13)& (0+127)
   550  0021                     end_of_initialization:	
   551                           ;End of C runtime variable initialization code
   552                           
   553  0021                     __end_of__initialization:
   554  0021  0183               	clrf	3
   555  0022  120A  118A  2A1A   	ljmp	_main	;jump to C main() function
   556                           
   557                           	psect	bssCOMMON
   558  007A                     __pbssCOMMON:
   559  007A                     _centenas2:
   560  007A                     	ds	1
   561  007B                     _dato_recibido:
   562  007B                     	ds	1
   563                           
   564                           	psect	bssBANK0
   565  003F                     __pbssBANK0:
   566  003F                     _suma3:
   567  003F                     	ds	1
   568  0040                     _suma2:
   569  0040                     	ds	1
   570  0041                     _suma1:
   571  0041                     	ds	1
   572  0042                     _unidades3:
   573  0042                     	ds	1
   574  0043                     _decenas3:
   575  0043                     	ds	1
   576  0044                     _centenas3:
   577  0044                     	ds	1
   578  0045                     _unidades2:
   579  0045                     	ds	1
   580  0046                     _decenas2:
   581  0046                     	ds	1
   582  0047                     _unidades1:
   583  0047                     	ds	1
   584  0048                     _decenas1:
   585  0048                     	ds	1
   586  0049                     _centenas1:
   587  0049                     	ds	1
   588  004A                     _cuenta_uart:
   589  004A                     	ds	1
   590  004B                     _conversion2:
   591  004B                     	ds	1
   592  004C                     _conversion1:
   593  004C                     	ds	1
   594                           
   595                           	psect	cstackCOMMON
   596  0070                     __pcstackCOMMON:
   597  0070                     ?_setup:
   598  0070                     ?_lcd_init:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_cmd:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_toggle_adc:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_recepcion_uart:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_lcd_ascii:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_adc_config:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_isr:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ??_isr:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_main:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_datos_ascii:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_dat:	
   629                           ; 1 bytes @ 0x0
   630                           
   631                           
   632                           ; 1 bytes @ 0x0
   633  0070                     	ds	2
   634  0072                     ??_cmd:
   635  0072                     ??_toggle_adc:	
   636                           ; 1 bytes @ 0x2
   637                           
   638  0072                     ??_recepcion_uart:	
   639                           ; 1 bytes @ 0x2
   640                           
   641  0072                     ??_adc_config:	
   642                           ; 1 bytes @ 0x2
   643                           
   644  0072                     ??_datos_ascii:	
   645                           ; 1 bytes @ 0x2
   646                           
   647  0072                     ??_dat:	
   648                           ; 1 bytes @ 0x2
   649                           
   650  0072                     ?___awdiv:	
   651                           ; 1 bytes @ 0x2
   652                           
   653  0072                     ___awdiv@divisor:	
   654                           ; 2 bytes @ 0x2
   655                           
   656                           
   657                           ; 2 bytes @ 0x2
   658  0072                     	ds	1
   659  0073                     ??_setup:
   660                           
   661                           ; 1 bytes @ 0x3
   662  0073                     	ds	1
   663  0074                     datos_ascii@numero:
   664  0074                     cmd@a:	
   665                           ; 1 bytes @ 0x4
   666                           
   667  0074                     dat@b:	
   668                           ; 1 bytes @ 0x4
   669                           
   670  0074                     ___awdiv@dividend:	
   671                           ; 1 bytes @ 0x4
   672                           
   673                           
   674                           ; 2 bytes @ 0x4
   675  0074                     	ds	1
   676  0075                     ??_lcd_init:
   677  0075                     ?_lcd_linea:	
   678                           ; 1 bytes @ 0x5
   679                           
   680  0075                     lcd_linea@b:	
   681                           ; 1 bytes @ 0x5
   682                           
   683                           
   684                           ; 1 bytes @ 0x5
   685  0075                     	ds	1
   686  0076                     ??_lcd_linea:
   687  0076                     ??___awdiv:	
   688                           ; 1 bytes @ 0x6
   689                           
   690                           
   691                           ; 1 bytes @ 0x6
   692  0076                     	ds	1
   693  0077                     ??___awmod:
   694  0077                     lcd_linea@a:	
   695                           ; 1 bytes @ 0x7
   696                           
   697                           
   698                           ; 1 bytes @ 0x7
   699  0077                     	ds	1
   700  0078                     lcd_linea@temp:
   701  0078                     ___awmod@counter:	
   702                           ; 1 bytes @ 0x8
   703                           
   704                           
   705                           ; 1 bytes @ 0x8
   706  0078                     	ds	1
   707  0079                     lcd_linea@z:
   708  0079                     ___awmod@sign:	
   709                           ; 1 bytes @ 0x9
   710                           
   711                           
   712                           ; 1 bytes @ 0x9
   713  0079                     	ds	1
   714  007A                     ??_show:
   715                           
   716                           	psect	cstackBANK0
   717  0020                     __pcstackBANK0:	
   718                           ; 1 bytes @ 0xA
   719                           
   720  0020                     ___awdiv@counter:
   721                           
   722                           ; 1 bytes @ 0x0
   723  0020                     	ds	1
   724  0021                     ___awdiv@sign:
   725                           
   726                           ; 1 bytes @ 0x1
   727  0021                     	ds	1
   728  0022                     ___awdiv@quotient:
   729                           
   730                           ; 2 bytes @ 0x2
   731  0022                     	ds	2
   732  0024                     ?___awmod:
   733  0024                     ___awmod@divisor:	
   734                           ; 2 bytes @ 0x4
   735                           
   736                           
   737                           ; 2 bytes @ 0x4
   738  0024                     	ds	2
   739  0026                     ___awmod@dividend:
   740                           
   741                           ; 2 bytes @ 0x6
   742  0026                     	ds	2
   743  0028                     ??_lcd_ascii:
   744                           
   745                           ; 1 bytes @ 0x8
   746  0028                     	ds	3
   747  002B                     lcd_ascii@random:
   748                           
   749                           ; 16 bytes @ 0xB
   750  002B                     	ds	16
   751  003B                     ?_show:
   752  003B                     show@s:	
   753                           ; 1 bytes @ 0x1B
   754                           
   755                           
   756                           ; 2 bytes @ 0x1B
   757  003B                     	ds	2
   758  003D                     ??_main:
   759                           
   760                           ; 1 bytes @ 0x1D
   761  003D                     	ds	2
   762                           
   763                           	psect	maintext
   764  021A                     __pmaintext:	
   765 ;;
   766 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   767 ;;
   768 ;; *************** function _main *****************
   769 ;; Defined at:
   770 ;;		line 96 in file "main_lab2.c"
   771 ;; Parameters:    Size  Location     Type
   772 ;;		None
   773 ;; Auto vars:     Size  Location     Type
   774 ;;		None
   775 ;; Return value:  Size  Location     Type
   776 ;;                  1    wreg      void 
   777 ;; Registers used:
   778 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   779 ;; Tracked objects:
   780 ;;		On entry : B00/0
   781 ;;		On exit  : 0/0
   782 ;;		Unchanged: 0/0
   783 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   784 ;;      Params:         0       0       0       0       0
   785 ;;      Locals:         0       0       0       0       0
   786 ;;      Temps:          0       2       0       0       0
   787 ;;      Totals:         0       2       0       0       0
   788 ;;Total ram usage:        2 bytes
   789 ;; Hardware stack levels required when called:    3
   790 ;; This function calls:
   791 ;;		_cmd
   792 ;;		_lcd_ascii
   793 ;;		_lcd_init
   794 ;;		_lcd_linea
   795 ;;		_recepcion_uart
   796 ;;		_setup
   797 ;;		_show
   798 ;;		_toggle_adc
   799 ;; This function is called by:
   800 ;;		Startup code after reset
   801 ;; This function uses a non-reentrant model
   802 ;;
   803                           
   804                           
   805                           ;psect for function _main
   806  021A                     _main:
   807  021A                     l1742:	
   808                           ;incstack = 0
   809                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   810                           
   811                           
   812                           ;main_lab2.c: 98:     setup();
   813  021A  120A  118A  230F  120A  118A  	fcall	_setup
   814                           
   815                           ;main_lab2.c: 99:     lcd_init();
   816  021F  120A  118A  23A1  120A  118A  	fcall	_lcd_init
   817                           
   818                           ;main_lab2.c: 100:  cmd(0x90);
   819  0224  3090               	movlw	144
   820  0225  120A  118A  23E4  120A  118A  	fcall	_cmd
   821  022A                     l1744:
   822                           
   823                           ;main_lab2.c: 104:     {;main_lab2.c: 106:         toggle_adc();
   824  022A  120A  118A  22A8  120A  118A  	fcall	_toggle_adc
   825  022F                     l1746:
   826                           
   827                           ;main_lab2.c: 107:         recepcion_uart();
   828  022F  120A  118A  2360  120A  118A  	fcall	_recepcion_uart
   829  0234                     l1748:
   830                           
   831                           ;main_lab2.c: 110:         PORTD=conversion1;
   832  0234  1283               	bcf	3,5	;RP0=0, select bank0
   833  0235  1303               	bcf	3,6	;RP1=0, select bank0
   834  0236  084C               	movf	_conversion1,w
   835  0237  0088               	movwf	8	;volatile
   836  0238                     l1750:
   837                           
   838                           ;main_lab2.c: 125:         lcd_linea(1,1);
   839  0238  01F5               	clrf	lcd_linea@b
   840  0239  0AF5               	incf	lcd_linea@b,f
   841  023A  3001               	movlw	1
   842  023B  120A  118A  22E3  120A  118A  	fcall	_lcd_linea
   843  0240                     l1752:
   844                           
   845                           ;main_lab2.c: 126:         show(" S1   S2   S3 ");
   846  0240  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   847  0241  1283               	bcf	3,5	;RP0=0, select bank0
   848  0242  1303               	bcf	3,6	;RP1=0, select bank0
   849  0243  00BB               	movwf	show@s
   850  0244  3080               	movlw	128
   851  0245  00BC               	movwf	show@s+1
   852  0246  120A  118A  2338  120A  118A  	fcall	_show
   853  024B                     l1754:
   854                           
   855                           ;main_lab2.c: 127:         lcd_linea(2,1);
   856  024B  01F5               	clrf	lcd_linea@b
   857  024C  0AF5               	incf	lcd_linea@b,f
   858  024D  3002               	movlw	2
   859  024E  120A  118A  22E3  120A  118A  	fcall	_lcd_linea
   860  0253                     l1756:
   861                           
   862                           ;main_lab2.c: 128:         show(lcd_ascii());
   863  0253  120A  118A  2025  120A  118A  	fcall	_lcd_ascii
   864  0258  1283               	bcf	3,5	;RP0=0, select bank0
   865  0259  1303               	bcf	3,6	;RP1=0, select bank0
   866  025A  00BD               	movwf	??_main
   867  025B  01BE               	clrf	??_main+1
   868  025C  083D               	movf	??_main,w
   869  025D  00BB               	movwf	show@s
   870  025E  083E               	movf	??_main+1,w
   871  025F  00BC               	movwf	show@s+1
   872  0260  120A  118A  2338  120A  118A  	fcall	_show
   873  0265  2A2A               	goto	l1744
   874  0266  120A  118A  280C   	ljmp	start
   875  0269                     __end_of_main:
   876                           
   877                           	psect	text1
   878  02A8                     __ptext1:	
   879 ;; *************** function _toggle_adc *****************
   880 ;; Defined at:
   881 ;;		line 190 in file "main_lab2.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;                  1    wreg      void 
   888 ;; Registers used:
   889 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0
   897 ;;      Temps:          3       0       0       0       0
   898 ;;      Totals:         3       0       0       0       0
   899 ;;Total ram usage:        3 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    1
   902 ;; This function calls:
   903 ;;		Nothing
   904 ;; This function is called by:
   905 ;;		_main
   906 ;; This function uses a non-reentrant model
   907 ;;
   908                           
   909                           
   910                           ;psect for function _toggle_adc
   911  02A8                     _toggle_adc:
   912  02A8                     l1446:	
   913                           ;incstack = 0
   914                           ; Regs used in _toggle_adc: [wreg-fsr0h+status,2+status,0]
   915                           
   916                           
   917                           ;main_lab2.c: 192:     if (ADCON0bits.GO==0)
   918  02A8  1283               	bcf	3,5	;RP0=0, select bank0
   919  02A9  1303               	bcf	3,6	;RP1=0, select bank0
   920  02AA  189F               	btfsc	31,1	;volatile
   921  02AB  2AAD               	goto	u441
   922  02AC  2AAE               	goto	u440
   923  02AD                     u441:
   924  02AD  2AE2               	goto	l111
   925  02AE                     u440:
   926  02AE  2ACF               	goto	l1466
   927  02AF                     l1450:
   928                           
   929                           ;main_lab2.c: 197:                 conversion1=ADRESH;
   930  02AF  081E               	movf	30,w	;volatile
   931  02B0  00F2               	movwf	??_toggle_adc
   932  02B1  0872               	movf	??_toggle_adc,w
   933  02B2  00CC               	movwf	_conversion1
   934                           
   935                           ;main_lab2.c: 198:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   936  02B3  3042               	movlw	66
   937  02B4  00F2               	movwf	??_toggle_adc
   938  02B5                     u677:
   939  02B5  0BF2               	decfsz	??_toggle_adc,f
   940  02B6  2AB5               	goto	u677
   941  02B7  0000               	nop
   942  02B8                     l1452:
   943                           
   944                           ;main_lab2.c: 199:                 ADCON0bits.CHS=1;
   945  02B8  1283               	bcf	3,5	;RP0=0, select bank0
   946  02B9  1303               	bcf	3,6	;RP1=0, select bank0
   947  02BA  081F               	movf	31,w	;volatile
   948  02BB  39C3               	andlw	-61
   949  02BC  3804               	iorlw	4
   950  02BD  009F               	movwf	31	;volatile
   951  02BE                     l1454:
   952                           
   953                           ;main_lab2.c: 200:                 ADCON0bits.GO=1;
   954  02BE  149F               	bsf	31,1	;volatile
   955                           
   956                           ;main_lab2.c: 201:                 break;
   957  02BF  2AE2               	goto	l111
   958  02C0                     l1456:
   959                           
   960                           ;main_lab2.c: 204:                 conversion2=ADRESH;
   961  02C0  081E               	movf	30,w	;volatile
   962  02C1  00F2               	movwf	??_toggle_adc
   963  02C2  0872               	movf	??_toggle_adc,w
   964  02C3  00CB               	movwf	_conversion2
   965                           
   966                           ;main_lab2.c: 205:                 _delay((unsigned long)((100)*(8000000/4000000.0)));
   967  02C4  3042               	movlw	66
   968  02C5  00F2               	movwf	??_toggle_adc
   969  02C6                     u687:
   970  02C6  0BF2               	decfsz	??_toggle_adc,f
   971  02C7  2AC6               	goto	u687
   972  02C8  0000               	nop
   973  02C9                     l1458:
   974                           
   975                           ;main_lab2.c: 206:                 ADCON0bits.CHS=0;
   976  02C9  30C3               	movlw	-61
   977  02CA  1283               	bcf	3,5	;RP0=0, select bank0
   978  02CB  1303               	bcf	3,6	;RP1=0, select bank0
   979  02CC  059F               	andwf	31,f	;volatile
   980  02CD                     l1460:
   981                           
   982                           ;main_lab2.c: 207:                 ADCON0bits.GO=1;
   983  02CD  149F               	bsf	31,1	;volatile
   984                           
   985                           ;main_lab2.c: 208:                 break;
   986  02CE  2AE2               	goto	l111
   987  02CF                     l1466:
   988  02CF  0C1F               	rrf	31,w	;volatile
   989  02D0  00F2               	movwf	??_toggle_adc
   990  02D1  0C72               	rrf	??_toggle_adc,w
   991  02D2  390F               	andlw	15
   992  02D3  00F3               	movwf	??_toggle_adc+1
   993  02D4  01F4               	clrf	??_toggle_adc+2
   994                           
   995                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   996                           ; Switch size 1, requested type "simple"
   997                           ; Number of cases is 1, Range of values is 0 to 0
   998                           ; switch strategies available:
   999                           ; Name         Instructions Cycles
  1000                           ; simple_byte            4     3 (average)
  1001                           ; direct_byte           11     8 (fixed)
  1002                           ; jumptable            260     6 (fixed)
  1003                           ;	Chosen strategy is simple_byte
  1004  02D5  0874               	movf	??_toggle_adc+2,w
  1005  02D6  3A00               	xorlw	0	; case 0
  1006  02D7  1903               	skipnz
  1007  02D8  2ADA               	goto	l1822
  1008  02D9  2AE2               	goto	l111
  1009  02DA                     l1822:
  1010                           
  1011                           ; Switch size 1, requested type "simple"
  1012                           ; Number of cases is 2, Range of values is 0 to 1
  1013                           ; switch strategies available:
  1014                           ; Name         Instructions Cycles
  1015                           ; simple_byte            7     4 (average)
  1016                           ; direct_byte           14     8 (fixed)
  1017                           ; jumptable            260     6 (fixed)
  1018                           ;	Chosen strategy is simple_byte
  1019  02DA  0873               	movf	??_toggle_adc+1,w
  1020  02DB  3A00               	xorlw	0	; case 0
  1021  02DC  1903               	skipnz
  1022  02DD  2AAF               	goto	l1450
  1023  02DE  3A01               	xorlw	1	; case 1
  1024  02DF  1903               	skipnz
  1025  02E0  2AC0               	goto	l1456
  1026  02E1  2AE2               	goto	l111
  1027  02E2                     l111:
  1028  02E2  0008               	return
  1029  02E3                     __end_of_toggle_adc:
  1030                           
  1031                           	psect	text2
  1032  0338                     __ptext2:	
  1033 ;; *************** function _show *****************
  1034 ;; Defined at:
  1035 ;;		line 59 in file "LCD.c"
  1036 ;; Parameters:    Size  Location     Type
  1037 ;;  s               2   27[BANK0 ] PTR unsigned char 
  1038 ;;		 -> RAM(512), STR_1(15), 
  1039 ;; Auto vars:     Size  Location     Type
  1040 ;;		None
  1041 ;; Return value:  Size  Location     Type
  1042 ;;                  1    wreg      void 
  1043 ;; Registers used:
  1044 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1045 ;; Tracked objects:
  1046 ;;		On entry : 0/0
  1047 ;;		On exit  : 0/0
  1048 ;;		Unchanged: 0/0
  1049 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1050 ;;      Params:         0       2       0       0       0
  1051 ;;      Locals:         0       0       0       0       0
  1052 ;;      Temps:          0       0       0       0       0
  1053 ;;      Totals:         0       2       0       0       0
  1054 ;;Total ram usage:        2 bytes
  1055 ;; Hardware stack levels used:    1
  1056 ;; Hardware stack levels required when called:    2
  1057 ;; This function calls:
  1058 ;;		_dat
  1059 ;; This function is called by:
  1060 ;;		_main
  1061 ;; This function uses a non-reentrant model
  1062 ;;
  1063                           
  1064                           
  1065                           ;psect for function _show
  1066  0338                     _show:
  1067  0338                     l1504:	
  1068                           ;incstack = 0
  1069                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1070                           
  1071                           
  1072                           ;LCD.c: 59: void show(unsigned char *s);LCD.c: 60: {;LCD.c: 61:  while(*s) {
  1073  0338  2B4F               	goto	l1510
  1074  0339                     l1506:
  1075                           
  1076                           ;LCD.c: 62:   dat(*s++);
  1077  0339  083C               	movf	show@s+1,w
  1078  033A  00FF               	movwf	btemp+1
  1079  033B  083B               	movf	show@s,w
  1080  033C  0084               	movwf	4
  1081  033D  120A  118A  2382  120A  118A  	fcall	stringtab
  1082  0342  120A  118A  23BA  120A  118A  	fcall	_dat
  1083  0347                     l1508:
  1084  0347  3001               	movlw	1
  1085  0348  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0349  1303               	bcf	3,6	;RP1=0, select bank0
  1087  034A  07BB               	addwf	show@s,f
  1088  034B  1803               	skipnc
  1089  034C  0ABC               	incf	show@s+1,f
  1090  034D  3000               	movlw	0
  1091  034E  07BC               	addwf	show@s+1,f
  1092  034F                     l1510:
  1093                           
  1094                           ;LCD.c: 61:  while(*s) {
  1095  034F  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0350  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0351  083C               	movf	show@s+1,w
  1098  0352  00FF               	movwf	btemp+1
  1099  0353  083B               	movf	show@s,w
  1100  0354  0084               	movwf	4
  1101  0355  120A  118A  2382  120A  118A  	fcall	stringtab
  1102  035A  3A00               	xorlw	0
  1103  035B  1D03               	skipz
  1104  035C  2B5E               	goto	u471
  1105  035D  2B5F               	goto	u470
  1106  035E                     u471:
  1107  035E  2B39               	goto	l1506
  1108  035F                     u470:
  1109  035F                     l177:
  1110  035F  0008               	return
  1111  0360                     __end_of_show:
  1112                           
  1113                           	psect	text3
  1114  03BA                     __ptext3:	
  1115 ;; *************** function _dat *****************
  1116 ;; Defined at:
  1117 ;;		line 48 in file "LCD.c"
  1118 ;; Parameters:    Size  Location     Type
  1119 ;;  b               1    wreg     unsigned char 
  1120 ;; Auto vars:     Size  Location     Type
  1121 ;;  b               1    4[COMMON] unsigned char 
  1122 ;; Return value:  Size  Location     Type
  1123 ;;                  1    wreg      void 
  1124 ;; Registers used:
  1125 ;;		wreg
  1126 ;; Tracked objects:
  1127 ;;		On entry : 0/0
  1128 ;;		On exit  : 0/0
  1129 ;;		Unchanged: 0/0
  1130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1131 ;;      Params:         0       0       0       0       0
  1132 ;;      Locals:         1       0       0       0       0
  1133 ;;      Temps:          2       0       0       0       0
  1134 ;;      Totals:         3       0       0       0       0
  1135 ;;Total ram usage:        3 bytes
  1136 ;; Hardware stack levels used:    1
  1137 ;; Hardware stack levels required when called:    1
  1138 ;; This function calls:
  1139 ;;		Nothing
  1140 ;; This function is called by:
  1141 ;;		_show
  1142 ;; This function uses a non-reentrant model
  1143 ;;
  1144                           
  1145                           
  1146                           ;psect for function _dat
  1147  03BA                     _dat:
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _dat: [wreg]
  1151                           ;dat@b stored from wreg
  1152  03BA  00F4               	movwf	dat@b
  1153  03BB                     l1318:
  1154                           
  1155                           ;LCD.c: 48: void dat(unsigned char b);LCD.c: 49: {;LCD.c: 50:  PORTB=b;
  1156  03BB  0874               	movf	dat@b,w
  1157  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1158  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1159  03BE  0086               	movwf	6	;volatile
  1160  03BF                     l1320:
  1161                           
  1162                           ;LCD.c: 51:  RD5=1;
  1163  03BF  1688               	bsf	8,5	;volatile
  1164  03C0                     l1322:
  1165                           
  1166                           ;LCD.c: 52:  RD6=0;
  1167  03C0  1308               	bcf	8,6	;volatile
  1168  03C1                     l1324:
  1169                           
  1170                           ;LCD.c: 53:  RD7=1;
  1171  03C1  1788               	bsf	8,7	;volatile
  1172                           
  1173                           ;LCD.c: 54:  _delay((unsigned long)((1)*(8000000/4000.0)));
  1174  03C2  3003               	movlw	3
  1175  03C3  00F3               	movwf	??_dat+1
  1176  03C4  3097               	movlw	151
  1177  03C5  00F2               	movwf	??_dat
  1178  03C6                     u697:
  1179  03C6  0BF2               	decfsz	??_dat,f
  1180  03C7  2BC6               	goto	u697
  1181  03C8  0BF3               	decfsz	??_dat+1,f
  1182  03C9  2BC6               	goto	u697
  1183  03CA  2BCB               	nop2
  1184  03CB                     l1326:
  1185                           
  1186                           ;LCD.c: 55:  RD7=0;
  1187  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  1188  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  1189  03CD  1388               	bcf	8,7	;volatile
  1190  03CE                     l171:
  1191  03CE  0008               	return
  1192  03CF                     __end_of_dat:
  1193                           
  1194                           	psect	text4
  1195  030F                     __ptext4:	
  1196 ;; *************** function _setup *****************
  1197 ;; Defined at:
  1198 ;;		line 135 in file "main_lab2.c"
  1199 ;; Parameters:    Size  Location     Type
  1200 ;;		None
  1201 ;; Auto vars:     Size  Location     Type
  1202 ;;		None
  1203 ;; Return value:  Size  Location     Type
  1204 ;;                  1    wreg      void 
  1205 ;; Registers used:
  1206 ;;		wreg, status,2, status,0, pclath, cstack
  1207 ;; Tracked objects:
  1208 ;;		On entry : 0/0
  1209 ;;		On exit  : 0/0
  1210 ;;		Unchanged: 0/0
  1211 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1212 ;;      Params:         0       0       0       0       0
  1213 ;;      Locals:         0       0       0       0       0
  1214 ;;      Temps:          0       0       0       0       0
  1215 ;;      Totals:         0       0       0       0       0
  1216 ;;Total ram usage:        0 bytes
  1217 ;; Hardware stack levels used:    1
  1218 ;; Hardware stack levels required when called:    2
  1219 ;; This function calls:
  1220 ;;		_adc_config
  1221 ;; This function is called by:
  1222 ;;		_main
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _setup
  1228  030F                     _setup:
  1229  030F                     l1410:	
  1230                           ;incstack = 0
  1231                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1232                           
  1233                           
  1234                           ;main_lab2.c: 138:     ANSEL=0;
  1235  030F  1683               	bsf	3,5	;RP0=1, select bank3
  1236  0310  1703               	bsf	3,6	;RP1=1, select bank3
  1237  0311  0188               	clrf	8	;volatile
  1238                           
  1239                           ;main_lab2.c: 139:     ANSELH=0;
  1240  0312  0189               	clrf	9	;volatile
  1241  0313                     l1412:
  1242                           
  1243                           ;main_lab2.c: 140:     ANSELbits.ANS0=1;
  1244  0313  1408               	bsf	8,0	;volatile
  1245  0314                     l1414:
  1246                           
  1247                           ;main_lab2.c: 141:     ANSELbits.ANS1=1;
  1248  0314  1488               	bsf	8,1	;volatile
  1249                           
  1250                           ;main_lab2.c: 144:     TRISB=0;
  1251  0315  1683               	bsf	3,5	;RP0=1, select bank1
  1252  0316  1303               	bcf	3,6	;RP1=0, select bank1
  1253  0317  0186               	clrf	6	;volatile
  1254                           
  1255                           ;main_lab2.c: 150:     TRISC=0;
  1256  0318  0187               	clrf	7	;volatile
  1257  0319                     l1416:
  1258                           
  1259                           ;main_lab2.c: 151:     TRISDbits.TRISD5=0;
  1260  0319  1288               	bcf	8,5	;volatile
  1261  031A                     l1418:
  1262                           
  1263                           ;main_lab2.c: 152:     TRISDbits.TRISD6=0;
  1264  031A  1308               	bcf	8,6	;volatile
  1265  031B                     l1420:
  1266                           
  1267                           ;main_lab2.c: 153:     TRISDbits.TRISD7=0;
  1268  031B  1388               	bcf	8,7	;volatile
  1269                           
  1270                           ;main_lab2.c: 154:     TRISE=0;
  1271  031C  0189               	clrf	9	;volatile
  1272                           
  1273                           ;main_lab2.c: 156:     PORTB=0;
  1274  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1275  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1276  031F  0186               	clrf	6	;volatile
  1277                           
  1278                           ;main_lab2.c: 158:     PORTD=0;
  1279  0320  0188               	clrf	8	;volatile
  1280                           
  1281                           ;main_lab2.c: 159:     PORTE=0;
  1282  0321  0189               	clrf	9	;volatile
  1283  0322                     l1422:
  1284                           
  1285                           ;main_lab2.c: 162:     OSCCONbits.IRCF = 0b111;
  1286  0322  3070               	movlw	112
  1287  0323  1683               	bsf	3,5	;RP0=1, select bank1
  1288  0324  1303               	bcf	3,6	;RP1=0, select bank1
  1289  0325  048F               	iorwf	15,f	;volatile
  1290  0326                     l1424:
  1291                           
  1292                           ;main_lab2.c: 163:     OSCCONbits.SCS = 1;
  1293  0326  140F               	bsf	15,0	;volatile
  1294  0327                     l1426:
  1295                           
  1296                           ;main_lab2.c: 166:     adc_config();
  1297  0327  120A  118A  23CF  120A  118A  	fcall	_adc_config
  1298  032C                     l1428:
  1299                           
  1300                           ;main_lab2.c: 171:     INTCONbits.GIE=0;
  1301  032C  138B               	bcf	11,7	;volatile
  1302  032D                     l1430:
  1303                           
  1304                           ;main_lab2.c: 172:     INTCONbits.T0IE=0;
  1305  032D  128B               	bcf	11,5	;volatile
  1306  032E                     l1432:
  1307                           
  1308                           ;main_lab2.c: 173:     INTCONbits.T0IF=0;
  1309  032E  110B               	bcf	11,2	;volatile
  1310  032F                     l1434:
  1311                           
  1312                           ;main_lab2.c: 174:     INTCONbits.RBIE=0;
  1313  032F  118B               	bcf	11,3	;volatile
  1314  0330                     l1436:
  1315                           
  1316                           ;main_lab2.c: 175:     INTCONbits.RBIF=0;
  1317  0330  100B               	bcf	11,0	;volatile
  1318  0331                     l1438:
  1319                           
  1320                           ;main_lab2.c: 177:     PIE1bits.ADIE = 0 ;
  1321  0331  1683               	bsf	3,5	;RP0=1, select bank1
  1322  0332  1303               	bcf	3,6	;RP1=0, select bank1
  1323  0333  130C               	bcf	12,6	;volatile
  1324  0334                     l1440:
  1325                           
  1326                           ;main_lab2.c: 178:     PIR1bits.ADIF = 0;
  1327  0334  1283               	bcf	3,5	;RP0=0, select bank0
  1328  0335  1303               	bcf	3,6	;RP1=0, select bank0
  1329  0336  130C               	bcf	12,6	;volatile
  1330  0337                     l103:
  1331  0337  0008               	return
  1332  0338                     __end_of_setup:
  1333                           
  1334                           	psect	text5
  1335  03CF                     __ptext5:	
  1336 ;; *************** function _adc_config *****************
  1337 ;; Defined at:
  1338 ;;		line 20 in file "adc_config.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;		None
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;		None
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg, status,2, status,0
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       0       0       0       0
  1354 ;;      Temps:          1       0       0       0       0
  1355 ;;      Totals:         1       0       0       0       0
  1356 ;;Total ram usage:        1 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    1
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_setup
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _adc_config
  1368  03CF                     _adc_config:
  1369  03CF                     l1232:	
  1370                           ;incstack = 0
  1371                           ; Regs used in _adc_config: [wreg+status,2+status,0]
  1372                           
  1373                           
  1374                           ;adc_config.c: 23:     ADCON1bits.ADFM = 0 ;
  1375  03CF  1683               	bsf	3,5	;RP0=1, select bank1
  1376  03D0  1303               	bcf	3,6	;RP1=0, select bank1
  1377  03D1  139F               	bcf	31,7	;volatile
  1378                           
  1379                           ;adc_config.c: 24:     ADCON1bits.VCFG0 = 0 ;
  1380  03D2  121F               	bcf	31,4	;volatile
  1381                           
  1382                           ;adc_config.c: 25:     ADCON1bits.VCFG1 = 0 ;
  1383  03D3  129F               	bcf	31,5	;volatile
  1384  03D4                     l1234:
  1385                           
  1386                           ;adc_config.c: 27:     ADCON0bits.ADCS = 0b01;
  1387  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1388  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1389  03D6  081F               	movf	31,w	;volatile
  1390  03D7  393F               	andlw	-193
  1391  03D8  3840               	iorlw	64
  1392  03D9  009F               	movwf	31	;volatile
  1393                           
  1394                           ;adc_config.c: 28:     ADCON0bits.CHS = 0;
  1395  03DA  30C3               	movlw	-61
  1396  03DB  059F               	andwf	31,f	;volatile
  1397  03DC                     l1236:
  1398                           
  1399                           ;adc_config.c: 29:     _delay((unsigned long)((50)*(8000000/4000000.0)));
  1400  03DC  3021               	movlw	33
  1401  03DD  00F2               	movwf	??_adc_config
  1402  03DE                     u707:
  1403  03DE  0BF2               	decfsz	??_adc_config,f
  1404  03DF  2BDE               	goto	u707
  1405  03E0                     l1238:
  1406                           
  1407                           ;adc_config.c: 30:     ADCON0bits.ADON = 1 ;
  1408  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  1409  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  1410  03E2  141F               	bsf	31,0	;volatile
  1411  03E3                     l150:
  1412  03E3  0008               	return
  1413  03E4                     __end_of_adc_config:
  1414                           
  1415                           	psect	text6
  1416  0360                     __ptext6:	
  1417 ;; *************** function _recepcion_uart *****************
  1418 ;; Defined at:
  1419 ;;		line 218 in file "main_lab2.c"
  1420 ;; Parameters:    Size  Location     Type
  1421 ;;		None
  1422 ;; Auto vars:     Size  Location     Type
  1423 ;;		None
  1424 ;; Return value:  Size  Location     Type
  1425 ;;                  1    wreg      void 
  1426 ;; Registers used:
  1427 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1428 ;; Tracked objects:
  1429 ;;		On entry : 0/0
  1430 ;;		On exit  : 0/0
  1431 ;;		Unchanged: 0/0
  1432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1433 ;;      Params:         0       0       0       0       0
  1434 ;;      Locals:         0       0       0       0       0
  1435 ;;      Temps:          2       0       0       0       0
  1436 ;;      Totals:         2       0       0       0       0
  1437 ;;Total ram usage:        2 bytes
  1438 ;; Hardware stack levels used:    1
  1439 ;; Hardware stack levels required when called:    1
  1440 ;; This function calls:
  1441 ;;		Nothing
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           
  1448                           ;psect for function _recepcion_uart
  1449  0360                     _recepcion_uart:
  1450  0360                     l1472:	
  1451                           ;incstack = 0
  1452                           ; Regs used in _recepcion_uart: [wreg-fsr0h+status,2+status,0]
  1453                           
  1454                           
  1455                           ;main_lab2.c: 220:     switch(dato_recibido)
  1456  0360  2B71               	goto	l1482
  1457  0361                     l1474:
  1458                           
  1459                           ;main_lab2.c: 223:             cuenta_uart++;
  1460  0361  3001               	movlw	1
  1461  0362  00F2               	movwf	??_recepcion_uart
  1462  0363  0872               	movf	??_recepcion_uart,w
  1463  0364  1283               	bcf	3,5	;RP0=0, select bank0
  1464  0365  1303               	bcf	3,6	;RP1=0, select bank0
  1465  0366  07CA               	addwf	_cuenta_uart,f
  1466                           
  1467                           ;main_lab2.c: 224:             break;
  1468  0367  2B81               	goto	l119
  1469  0368                     l1476:
  1470                           
  1471                           ;main_lab2.c: 227:             cuenta_uart--;
  1472  0368  3001               	movlw	1
  1473  0369  1283               	bcf	3,5	;RP0=0, select bank0
  1474  036A  1303               	bcf	3,6	;RP1=0, select bank0
  1475  036B  02CA               	subwf	_cuenta_uart,f
  1476                           
  1477                           ;main_lab2.c: 228:             break;
  1478  036C  2B81               	goto	l119
  1479  036D                     l1478:
  1480                           
  1481                           ;main_lab2.c: 231:             cuenta_uart=0;
  1482  036D  1283               	bcf	3,5	;RP0=0, select bank0
  1483  036E  1303               	bcf	3,6	;RP1=0, select bank0
  1484  036F  01CA               	clrf	_cuenta_uart
  1485                           
  1486                           ;main_lab2.c: 232:             break;
  1487  0370  2B81               	goto	l119
  1488  0371                     l1482:
  1489  0371  087B               	movf	_dato_recibido,w
  1490  0372  00F2               	movwf	??_recepcion_uart
  1491  0373  01F3               	clrf	??_recepcion_uart+1
  1492                           
  1493                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1494                           ; Switch size 1, requested type "simple"
  1495                           ; Number of cases is 1, Range of values is 0 to 0
  1496                           ; switch strategies available:
  1497                           ; Name         Instructions Cycles
  1498                           ; simple_byte            4     3 (average)
  1499                           ; direct_byte           11     8 (fixed)
  1500                           ; jumptable            260     6 (fixed)
  1501                           ;	Chosen strategy is simple_byte
  1502  0374  0873               	movf	??_recepcion_uart+1,w
  1503  0375  3A00               	xorlw	0	; case 0
  1504  0376  1903               	skipnz
  1505  0377  2B79               	goto	l1824
  1506  0378  2B6D               	goto	l1478
  1507  0379                     l1824:
  1508                           
  1509                           ; Switch size 1, requested type "simple"
  1510                           ; Number of cases is 2, Range of values is 1 to 2
  1511                           ; switch strategies available:
  1512                           ; Name         Instructions Cycles
  1513                           ; simple_byte            7     4 (average)
  1514                           ; direct_byte           17    11 (fixed)
  1515                           ; jumptable            263     9 (fixed)
  1516                           ;	Chosen strategy is simple_byte
  1517  0379  0872               	movf	??_recepcion_uart,w
  1518  037A  3A01               	xorlw	1	; case 1
  1519  037B  1903               	skipnz
  1520  037C  2B61               	goto	l1474
  1521  037D  3A03               	xorlw	3	; case 2
  1522  037E  1903               	skipnz
  1523  037F  2B68               	goto	l1476
  1524  0380  2B6D               	goto	l1478
  1525  0381                     l119:
  1526  0381  0008               	return
  1527  0382                     __end_of_recepcion_uart:
  1528                           
  1529                           	psect	text7
  1530  02E3                     __ptext7:	
  1531 ;; *************** function _lcd_linea *****************
  1532 ;; Defined at:
  1533 ;;		line 67 in file "LCD.c"
  1534 ;; Parameters:    Size  Location     Type
  1535 ;;  a               1    wreg     unsigned char 
  1536 ;;  b               1    5[COMMON] unsigned char 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  a               1    7[COMMON] unsigned char 
  1539 ;;  z               1    9[COMMON] unsigned char 
  1540 ;;  temp            1    8[COMMON] unsigned char 
  1541 ;; Return value:  Size  Location     Type
  1542 ;;                  1    wreg      void 
  1543 ;; Registers used:
  1544 ;;		wreg, status,2, status,0, pclath, cstack
  1545 ;; Tracked objects:
  1546 ;;		On entry : 0/0
  1547 ;;		On exit  : 0/0
  1548 ;;		Unchanged: 0/0
  1549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1550 ;;      Params:         1       0       0       0       0
  1551 ;;      Locals:         3       0       0       0       0
  1552 ;;      Temps:          1       0       0       0       0
  1553 ;;      Totals:         5       0       0       0       0
  1554 ;;Total ram usage:        5 bytes
  1555 ;; Hardware stack levels used:    1
  1556 ;; Hardware stack levels required when called:    2
  1557 ;; This function calls:
  1558 ;;		_cmd
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _lcd_linea
  1566  02E3                     _lcd_linea:
  1567                           
  1568                           ;incstack = 0
  1569                           ; Regs used in _lcd_linea: [wreg+status,2+status,0+pclath+cstack]
  1570                           ;lcd_linea@a stored from wreg
  1571  02E3  00F7               	movwf	lcd_linea@a
  1572  02E4                     l1488:
  1573                           
  1574                           ;LCD.c: 68:     char temp, z;;LCD.c: 69:     if (a == 1) {
  1575  02E4  0377               	decf	lcd_linea@a,w
  1576  02E5  1D03               	btfss	3,2
  1577  02E6  2AE8               	goto	u451
  1578  02E7  2AE9               	goto	u450
  1579  02E8                     u451:
  1580  02E8  2AF9               	goto	l1496
  1581  02E9                     u450:
  1582  02E9                     l1490:
  1583                           
  1584                           ;LCD.c: 70:         temp = 0x80 + b - 1;
  1585  02E9  0875               	movf	lcd_linea@b,w
  1586  02EA  3E7F               	addlw	127
  1587  02EB  00F6               	movwf	??_lcd_linea
  1588  02EC  0876               	movf	??_lcd_linea,w
  1589  02ED  00F8               	movwf	lcd_linea@temp
  1590  02EE                     l1492:
  1591                           
  1592                           ;LCD.c: 71:         z = temp;
  1593  02EE  0878               	movf	lcd_linea@temp,w
  1594  02EF  00F6               	movwf	??_lcd_linea
  1595  02F0  0876               	movf	??_lcd_linea,w
  1596  02F1  00F9               	movwf	lcd_linea@z
  1597  02F2                     l1494:
  1598                           
  1599                           ;LCD.c: 72:         cmd(z);
  1600  02F2  0879               	movf	lcd_linea@z,w
  1601  02F3  120A  118A  23E4  120A  118A  	fcall	_cmd
  1602                           
  1603                           ;LCD.c: 74:     } else if (a == 2) {
  1604  02F8  2B0E               	goto	l183
  1605  02F9                     l1496:
  1606  02F9  3002               	movlw	2
  1607  02FA  0677               	xorwf	lcd_linea@a,w
  1608  02FB  1D03               	btfss	3,2
  1609  02FC  2AFE               	goto	u461
  1610  02FD  2AFF               	goto	u460
  1611  02FE                     u461:
  1612  02FE  2B0E               	goto	l183
  1613  02FF                     u460:
  1614  02FF                     l1498:
  1615                           
  1616                           ;LCD.c: 75:         temp = 0xC0 + b - 1;
  1617  02FF  0875               	movf	lcd_linea@b,w
  1618  0300  3EBF               	addlw	191
  1619  0301  00F6               	movwf	??_lcd_linea
  1620  0302  0876               	movf	??_lcd_linea,w
  1621  0303  00F8               	movwf	lcd_linea@temp
  1622  0304                     l1500:
  1623                           
  1624                           ;LCD.c: 76:         z = temp;
  1625  0304  0878               	movf	lcd_linea@temp,w
  1626  0305  00F6               	movwf	??_lcd_linea
  1627  0306  0876               	movf	??_lcd_linea,w
  1628  0307  00F9               	movwf	lcd_linea@z
  1629  0308                     l1502:
  1630                           
  1631                           ;LCD.c: 77:         cmd(z);
  1632  0308  0879               	movf	lcd_linea@z,w
  1633  0309  120A  118A  23E4  120A  118A  	fcall	_cmd
  1634  030E                     l183:
  1635  030E  0008               	return
  1636  030F                     __end_of_lcd_linea:
  1637                           
  1638                           	psect	text8
  1639  03A1                     __ptext8:	
  1640 ;; *************** function _lcd_init *****************
  1641 ;; Defined at:
  1642 ;;		line 28 in file "LCD.c"
  1643 ;; Parameters:    Size  Location     Type
  1644 ;;		None
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;		None
  1647 ;; Return value:  Size  Location     Type
  1648 ;;                  1    wreg      void 
  1649 ;; Registers used:
  1650 ;;		wreg, status,2, status,0, pclath, cstack
  1651 ;; Tracked objects:
  1652 ;;		On entry : 0/0
  1653 ;;		On exit  : 0/0
  1654 ;;		Unchanged: 0/0
  1655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1656 ;;      Params:         0       0       0       0       0
  1657 ;;      Locals:         0       0       0       0       0
  1658 ;;      Temps:          0       0       0       0       0
  1659 ;;      Totals:         0       0       0       0       0
  1660 ;;Total ram usage:        0 bytes
  1661 ;; Hardware stack levels used:    1
  1662 ;; Hardware stack levels required when called:    2
  1663 ;; This function calls:
  1664 ;;		_cmd
  1665 ;; This function is called by:
  1666 ;;		_main
  1667 ;; This function uses a non-reentrant model
  1668 ;;
  1669                           
  1670                           
  1671                           ;psect for function _lcd_init
  1672  03A1                     _lcd_init:
  1673  03A1                     l1444:	
  1674                           ;incstack = 0
  1675                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1676                           
  1677                           
  1678                           ;LCD.c: 30:  cmd(0x38);
  1679  03A1  3038               	movlw	56
  1680  03A2  120A  118A  23E4  120A  118A  	fcall	_cmd
  1681                           
  1682                           ;LCD.c: 31:  cmd(0x0c);
  1683  03A7  300C               	movlw	12
  1684  03A8  120A  118A  23E4  120A  118A  	fcall	_cmd
  1685                           
  1686                           ;LCD.c: 32:  cmd(0x06);
  1687  03AD  3006               	movlw	6
  1688  03AE  120A  118A  23E4  120A  118A  	fcall	_cmd
  1689                           
  1690                           ;LCD.c: 33:  cmd(0x80);
  1691  03B3  3080               	movlw	128
  1692  03B4  120A  118A  23E4  120A  118A  	fcall	_cmd
  1693  03B9                     l165:
  1694  03B9  0008               	return
  1695  03BA                     __end_of_lcd_init:
  1696                           
  1697                           	psect	text9
  1698  03E4                     __ptext9:	
  1699 ;; *************** function _cmd *****************
  1700 ;; Defined at:
  1701 ;;		line 37 in file "LCD.c"
  1702 ;; Parameters:    Size  Location     Type
  1703 ;;  a               1    wreg     unsigned char 
  1704 ;; Auto vars:     Size  Location     Type
  1705 ;;  a               1    4[COMMON] unsigned char 
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       0       0       0       0
  1716 ;;      Locals:         1       0       0       0       0
  1717 ;;      Temps:          2       0       0       0       0
  1718 ;;      Totals:         3       0       0       0       0
  1719 ;;Total ram usage:        3 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    1
  1722 ;; This function calls:
  1723 ;;		Nothing
  1724 ;; This function is called by:
  1725 ;;		_main
  1726 ;;		_lcd_init
  1727 ;;		_lcd_linea
  1728 ;;		_lcd_mov_derecha
  1729 ;;		_lcd_mov_izquierda
  1730 ;; This function uses a non-reentrant model
  1731 ;;
  1732                           
  1733                           
  1734                           ;psect for function _cmd
  1735  03E4                     _cmd:
  1736                           
  1737                           ;incstack = 0
  1738                           ; Regs used in _cmd: [wreg]
  1739                           ;cmd@a stored from wreg
  1740  03E4  00F4               	movwf	cmd@a
  1741  03E5                     l1222:
  1742                           
  1743                           ;LCD.c: 37: void cmd(unsigned char a);LCD.c: 38: {;LCD.c: 39:  PORTB=a;
  1744  03E5  0874               	movf	cmd@a,w
  1745  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1746  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1747  03E8  0086               	movwf	6	;volatile
  1748  03E9                     l1224:
  1749                           
  1750                           ;LCD.c: 40:  RD5=0;
  1751  03E9  1288               	bcf	8,5	;volatile
  1752  03EA                     l1226:
  1753                           
  1754                           ;LCD.c: 41:  RD6=0;
  1755  03EA  1308               	bcf	8,6	;volatile
  1756  03EB                     l1228:
  1757                           
  1758                           ;LCD.c: 42:  RD7=1;
  1759  03EB  1788               	bsf	8,7	;volatile
  1760                           
  1761                           ;LCD.c: 43:     _delay((unsigned long)((1)*(8000000/4000.0)));
  1762  03EC  3003               	movlw	3
  1763  03ED  00F3               	movwf	??_cmd+1
  1764  03EE  3097               	movlw	151
  1765  03EF  00F2               	movwf	??_cmd
  1766  03F0                     u717:
  1767  03F0  0BF2               	decfsz	??_cmd,f
  1768  03F1  2BF0               	goto	u717
  1769  03F2  0BF3               	decfsz	??_cmd+1,f
  1770  03F3  2BF0               	goto	u717
  1771  03F4  2BF5               	nop2
  1772  03F5                     l1230:
  1773                           
  1774                           ;LCD.c: 44:  RD7=0;
  1775  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1776  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1777  03F7  1388               	bcf	8,7	;volatile
  1778  03F8                     l168:
  1779  03F8  0008               	return
  1780  03F9                     __end_of_cmd:
  1781                           
  1782                           	psect	text10
  1783  0025                     __ptext10:	
  1784 ;; *************** function _lcd_ascii *****************
  1785 ;; Defined at:
  1786 ;;		line 306 in file "main_lab2.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;		None
  1789 ;; Auto vars:     Size  Location     Type
  1790 ;;  random         16   11[BANK0 ] unsigned char [16]
  1791 ;; Return value:  Size  Location     Type
  1792 ;;                  1    wreg      unsigned char 
  1793 ;; Registers used:
  1794 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1795 ;; Tracked objects:
  1796 ;;		On entry : 0/0
  1797 ;;		On exit  : 0/0
  1798 ;;		Unchanged: 0/0
  1799 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1800 ;;      Params:         0       0       0       0       0
  1801 ;;      Locals:         0      16       0       0       0
  1802 ;;      Temps:          0       3       0       0       0
  1803 ;;      Totals:         0      19       0       0       0
  1804 ;;Total ram usage:       19 bytes
  1805 ;; Hardware stack levels used:    1
  1806 ;; Hardware stack levels required when called:    2
  1807 ;; This function calls:
  1808 ;;		___awdiv
  1809 ;;		___awmod
  1810 ;;		_datos_ascii
  1811 ;; This function is called by:
  1812 ;;		_main
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816                           
  1817                           ;psect for function _lcd_ascii
  1818  0025                     _lcd_ascii:
  1819  0025                     l1710:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _lcd_ascii: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1822                           
  1823                           
  1824                           ;main_lab2.c: 308:     uint8_t random[16];;main_lab2.c: 309:     random[0]=datos_ascii((
      +                          (2*(conversion1)/100)%10));
  1825  0025  300A               	movlw	10
  1826  0026  1283               	bcf	3,5	;RP0=0, select bank0
  1827  0027  1303               	bcf	3,6	;RP1=0, select bank0
  1828  0028  00A4               	movwf	___awmod@divisor
  1829  0029  3000               	movlw	0
  1830  002A  00A5               	movwf	___awmod@divisor+1
  1831  002B  3064               	movlw	100
  1832  002C  00F2               	movwf	___awdiv@divisor
  1833  002D  3000               	movlw	0
  1834  002E  00F3               	movwf	___awdiv@divisor+1
  1835  002F  084C               	movf	_conversion1,w
  1836  0030  00A8               	movwf	??_lcd_ascii
  1837  0031  01A9               	clrf	??_lcd_ascii+1
  1838  0032  1003               	clrc
  1839  0033  0D28               	rlf	??_lcd_ascii,w
  1840  0034  00F4               	movwf	___awdiv@dividend
  1841  0035  0D29               	rlf	??_lcd_ascii+1,w
  1842  0036  00F5               	movwf	___awdiv@dividend+1
  1843  0037  120A  118A  2156  120A  118A  	fcall	___awdiv
  1844  003C  0873               	movf	?___awdiv+1,w
  1845  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1846  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1847  003F  00A7               	movwf	___awmod@dividend+1
  1848  0040  0872               	movf	?___awdiv,w
  1849  0041  00A6               	movwf	___awmod@dividend
  1850  0042  120A  118A  21BF  120A  118A  	fcall	___awmod
  1851  0047  1283               	bcf	3,5	;RP0=0, select bank0
  1852  0048  1303               	bcf	3,6	;RP1=0, select bank0
  1853  0049  0824               	movf	?___awmod,w
  1854  004A  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  1855  004F  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0050  1303               	bcf	3,6	;RP1=0, select bank0
  1857  0051  00AA               	movwf	??_lcd_ascii+2
  1858  0052  082A               	movf	??_lcd_ascii+2,w
  1859  0053  00AB               	movwf	lcd_ascii@random
  1860  0054                     l1712:
  1861                           
  1862                           ;main_lab2.c: 310:     random[1]=0x2E;
  1863  0054  302E               	movlw	46
  1864  0055  00A8               	movwf	??_lcd_ascii
  1865  0056  0828               	movf	??_lcd_ascii,w
  1866  0057  00AC               	movwf	lcd_ascii@random+1
  1867  0058                     l1714:
  1868                           
  1869                           ;main_lab2.c: 311:     random[2]=datos_ascii(((2*(conversion1)/100)%10));
  1870  0058  300A               	movlw	10
  1871  0059  00A4               	movwf	___awmod@divisor
  1872  005A  3000               	movlw	0
  1873  005B  00A5               	movwf	___awmod@divisor+1
  1874  005C  3064               	movlw	100
  1875  005D  00F2               	movwf	___awdiv@divisor
  1876  005E  3000               	movlw	0
  1877  005F  00F3               	movwf	___awdiv@divisor+1
  1878  0060  084C               	movf	_conversion1,w
  1879  0061  00A8               	movwf	??_lcd_ascii
  1880  0062  01A9               	clrf	??_lcd_ascii+1
  1881  0063  1003               	clrc
  1882  0064  0D28               	rlf	??_lcd_ascii,w
  1883  0065  00F4               	movwf	___awdiv@dividend
  1884  0066  0D29               	rlf	??_lcd_ascii+1,w
  1885  0067  00F5               	movwf	___awdiv@dividend+1
  1886  0068  120A  118A  2156  120A  118A  	fcall	___awdiv
  1887  006D  0873               	movf	?___awdiv+1,w
  1888  006E  1283               	bcf	3,5	;RP0=0, select bank0
  1889  006F  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0070  00A7               	movwf	___awmod@dividend+1
  1891  0071  0872               	movf	?___awdiv,w
  1892  0072  00A6               	movwf	___awmod@dividend
  1893  0073  120A  118A  21BF  120A  118A  	fcall	___awmod
  1894  0078  1283               	bcf	3,5	;RP0=0, select bank0
  1895  0079  1303               	bcf	3,6	;RP1=0, select bank0
  1896  007A  0824               	movf	?___awmod,w
  1897  007B  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  1898  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1899  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1900  0082  00AA               	movwf	??_lcd_ascii+2
  1901  0083  082A               	movf	??_lcd_ascii+2,w
  1902  0084  00AD               	movwf	lcd_ascii@random+2
  1903  0085                     l1716:
  1904                           
  1905                           ;main_lab2.c: 312:     random[3]=datos_ascii((2*conversion1)%10);
  1906  0085  300A               	movlw	10
  1907  0086  00A4               	movwf	___awmod@divisor
  1908  0087  3000               	movlw	0
  1909  0088  00A5               	movwf	___awmod@divisor+1
  1910  0089  084C               	movf	_conversion1,w
  1911  008A  00A8               	movwf	??_lcd_ascii
  1912  008B  01A9               	clrf	??_lcd_ascii+1
  1913  008C  1003               	clrc
  1914  008D  0D28               	rlf	??_lcd_ascii,w
  1915  008E  00A6               	movwf	___awmod@dividend
  1916  008F  0D29               	rlf	??_lcd_ascii+1,w
  1917  0090  00A7               	movwf	___awmod@dividend+1
  1918  0091  120A  118A  21BF  120A  118A  	fcall	___awmod
  1919  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1920  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1921  0098  0824               	movf	?___awmod,w
  1922  0099  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  1923  009E  1283               	bcf	3,5	;RP0=0, select bank0
  1924  009F  1303               	bcf	3,6	;RP1=0, select bank0
  1925  00A0  00AA               	movwf	??_lcd_ascii+2
  1926  00A1  082A               	movf	??_lcd_ascii+2,w
  1927  00A2  00AE               	movwf	lcd_ascii@random+3
  1928  00A3                     l1718:
  1929                           
  1930                           ;main_lab2.c: 313:     random[4]=32;
  1931  00A3  3020               	movlw	32
  1932  00A4  00A8               	movwf	??_lcd_ascii
  1933  00A5  0828               	movf	??_lcd_ascii,w
  1934  00A6  00AF               	movwf	lcd_ascii@random+4
  1935                           
  1936                           ;main_lab2.c: 314:     random[5]=datos_ascii(((2*(conversion2)/100)%10));
  1937  00A7  300A               	movlw	10
  1938  00A8  00A4               	movwf	___awmod@divisor
  1939  00A9  3000               	movlw	0
  1940  00AA  00A5               	movwf	___awmod@divisor+1
  1941  00AB  3064               	movlw	100
  1942  00AC  00F2               	movwf	___awdiv@divisor
  1943  00AD  3000               	movlw	0
  1944  00AE  00F3               	movwf	___awdiv@divisor+1
  1945  00AF  084B               	movf	_conversion2,w
  1946  00B0  00A8               	movwf	??_lcd_ascii
  1947  00B1  01A9               	clrf	??_lcd_ascii+1
  1948  00B2  1003               	clrc
  1949  00B3  0D28               	rlf	??_lcd_ascii,w
  1950  00B4  00F4               	movwf	___awdiv@dividend
  1951  00B5  0D29               	rlf	??_lcd_ascii+1,w
  1952  00B6  00F5               	movwf	___awdiv@dividend+1
  1953  00B7  120A  118A  2156  120A  118A  	fcall	___awdiv
  1954  00BC  0873               	movf	?___awdiv+1,w
  1955  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1956  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1957  00BF  00A7               	movwf	___awmod@dividend+1
  1958  00C0  0872               	movf	?___awdiv,w
  1959  00C1  00A6               	movwf	___awmod@dividend
  1960  00C2  120A  118A  21BF  120A  118A  	fcall	___awmod
  1961  00C7  1283               	bcf	3,5	;RP0=0, select bank0
  1962  00C8  1303               	bcf	3,6	;RP1=0, select bank0
  1963  00C9  0824               	movf	?___awmod,w
  1964  00CA  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  1965  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1966  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1967  00D1  00AA               	movwf	??_lcd_ascii+2
  1968  00D2  082A               	movf	??_lcd_ascii+2,w
  1969  00D3  00B0               	movwf	lcd_ascii@random+5
  1970  00D4                     l1720:
  1971                           
  1972                           ;main_lab2.c: 315:     random[6]=0x2E;
  1973  00D4  302E               	movlw	46
  1974  00D5  00A8               	movwf	??_lcd_ascii
  1975  00D6  0828               	movf	??_lcd_ascii,w
  1976  00D7  00B1               	movwf	lcd_ascii@random+6
  1977  00D8                     l1722:
  1978                           
  1979                           ;main_lab2.c: 316:     random[7]=datos_ascii(((2*(conversion2)/100)%10));
  1980  00D8  300A               	movlw	10
  1981  00D9  00A4               	movwf	___awmod@divisor
  1982  00DA  3000               	movlw	0
  1983  00DB  00A5               	movwf	___awmod@divisor+1
  1984  00DC  3064               	movlw	100
  1985  00DD  00F2               	movwf	___awdiv@divisor
  1986  00DE  3000               	movlw	0
  1987  00DF  00F3               	movwf	___awdiv@divisor+1
  1988  00E0  084B               	movf	_conversion2,w
  1989  00E1  00A8               	movwf	??_lcd_ascii
  1990  00E2  01A9               	clrf	??_lcd_ascii+1
  1991  00E3  1003               	clrc
  1992  00E4  0D28               	rlf	??_lcd_ascii,w
  1993  00E5  00F4               	movwf	___awdiv@dividend
  1994  00E6  0D29               	rlf	??_lcd_ascii+1,w
  1995  00E7  00F5               	movwf	___awdiv@dividend+1
  1996  00E8  120A  118A  2156  120A  118A  	fcall	___awdiv
  1997  00ED  0873               	movf	?___awdiv+1,w
  1998  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1999  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  2000  00F0  00A7               	movwf	___awmod@dividend+1
  2001  00F1  0872               	movf	?___awdiv,w
  2002  00F2  00A6               	movwf	___awmod@dividend
  2003  00F3  120A  118A  21BF  120A  118A  	fcall	___awmod
  2004  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  2005  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  2006  00FA  0824               	movf	?___awmod,w
  2007  00FB  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  2008  0100  1283               	bcf	3,5	;RP0=0, select bank0
  2009  0101  1303               	bcf	3,6	;RP1=0, select bank0
  2010  0102  00AA               	movwf	??_lcd_ascii+2
  2011  0103  082A               	movf	??_lcd_ascii+2,w
  2012  0104  00B2               	movwf	lcd_ascii@random+7
  2013  0105                     l1724:
  2014                           
  2015                           ;main_lab2.c: 317:     random[8]=datos_ascii((2*conversion2)%10);
  2016  0105  300A               	movlw	10
  2017  0106  00A4               	movwf	___awmod@divisor
  2018  0107  3000               	movlw	0
  2019  0108  00A5               	movwf	___awmod@divisor+1
  2020  0109  084B               	movf	_conversion2,w
  2021  010A  00A8               	movwf	??_lcd_ascii
  2022  010B  01A9               	clrf	??_lcd_ascii+1
  2023  010C  1003               	clrc
  2024  010D  0D28               	rlf	??_lcd_ascii,w
  2025  010E  00A6               	movwf	___awmod@dividend
  2026  010F  0D29               	rlf	??_lcd_ascii+1,w
  2027  0110  00A7               	movwf	___awmod@dividend+1
  2028  0111  120A  118A  21BF  120A  118A  	fcall	___awmod
  2029  0116  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0117  1303               	bcf	3,6	;RP1=0, select bank0
  2031  0118  0824               	movf	?___awmod,w
  2032  0119  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  2033  011E  1283               	bcf	3,5	;RP0=0, select bank0
  2034  011F  1303               	bcf	3,6	;RP1=0, select bank0
  2035  0120  00AA               	movwf	??_lcd_ascii+2
  2036  0121  082A               	movf	??_lcd_ascii+2,w
  2037  0122  00B3               	movwf	lcd_ascii@random+8
  2038  0123                     l1726:
  2039                           
  2040                           ;main_lab2.c: 318:     random[9]=32;
  2041  0123  3020               	movlw	32
  2042  0124  00A8               	movwf	??_lcd_ascii
  2043  0125  0828               	movf	??_lcd_ascii,w
  2044  0126  00B4               	movwf	lcd_ascii@random+9
  2045                           
  2046                           ;main_lab2.c: 319:     random[10]=datos_ascii(centenas3);
  2047  0127  3000               	movlw	0
  2048  0128  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  2049  012D  1283               	bcf	3,5	;RP0=0, select bank0
  2050  012E  1303               	bcf	3,6	;RP1=0, select bank0
  2051  012F  00A8               	movwf	??_lcd_ascii
  2052  0130  0828               	movf	??_lcd_ascii,w
  2053  0131  00B5               	movwf	lcd_ascii@random+10
  2054  0132                     l1728:
  2055                           
  2056                           ;main_lab2.c: 320:     random[11]=0x2E;
  2057  0132  302E               	movlw	46
  2058  0133  00A8               	movwf	??_lcd_ascii
  2059  0134  0828               	movf	??_lcd_ascii,w
  2060  0135  00B6               	movwf	lcd_ascii@random+11
  2061  0136                     l1730:
  2062                           
  2063                           ;main_lab2.c: 321:     random[12]=datos_ascii(decenas3);
  2064  0136  3000               	movlw	0
  2065  0137  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  2066  013C  1283               	bcf	3,5	;RP0=0, select bank0
  2067  013D  1303               	bcf	3,6	;RP1=0, select bank0
  2068  013E  00A8               	movwf	??_lcd_ascii
  2069  013F  0828               	movf	??_lcd_ascii,w
  2070  0140  00B7               	movwf	lcd_ascii@random+12
  2071  0141                     l1732:
  2072                           
  2073                           ;main_lab2.c: 322:     random[13]=datos_ascii(unidades3);
  2074  0141  3000               	movlw	0
  2075  0142  120A  118A  2269  120A  118A  	fcall	_datos_ascii
  2076  0147  1283               	bcf	3,5	;RP0=0, select bank0
  2077  0148  1303               	bcf	3,6	;RP1=0, select bank0
  2078  0149  00A8               	movwf	??_lcd_ascii
  2079  014A  0828               	movf	??_lcd_ascii,w
  2080  014B  00B8               	movwf	lcd_ascii@random+13
  2081  014C                     l1734:
  2082                           
  2083                           ;main_lab2.c: 323:     random[14]=32;
  2084  014C  3020               	movlw	32
  2085  014D  00A8               	movwf	??_lcd_ascii
  2086  014E  0828               	movf	??_lcd_ascii,w
  2087  014F  00B9               	movwf	lcd_ascii@random+14
  2088  0150                     l1736:
  2089                           
  2090                           ;main_lab2.c: 324:     random[15]=32;
  2091  0150  3020               	movlw	32
  2092  0151  00A8               	movwf	??_lcd_ascii
  2093  0152  0828               	movf	??_lcd_ascii,w
  2094  0153  00BA               	movwf	lcd_ascii@random+15
  2095  0154                     l1738:
  2096                           
  2097                           ;main_lab2.c: 325:     return random;
  2098  0154  302B               	movlw	(low lcd_ascii@random)& (0+255)
  2099  0155                     l141:
  2100  0155  0008               	return
  2101  0156                     __end_of_lcd_ascii:
  2102                           
  2103                           	psect	text11
  2104  0269                     __ptext11:	
  2105 ;; *************** function _datos_ascii *****************
  2106 ;; Defined at:
  2107 ;;		line 237 in file "main_lab2.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  numero          1    wreg     unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  numero          1    4[COMMON] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      unsigned char 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       0       0       0       0
  2122 ;;      Locals:         1       0       0       0       0
  2123 ;;      Temps:          2       0       0       0       0
  2124 ;;      Totals:         3       0       0       0       0
  2125 ;;Total ram usage:        3 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_lcd_ascii
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           
  2136                           ;psect for function _datos_ascii
  2137  0269                     _datos_ascii:
  2138                           
  2139                           ;incstack = 0
  2140                           ; Regs used in _datos_ascii: [wreg-fsr0h+status,2+status,0]
  2141                           ;datos_ascii@numero stored from wreg
  2142  0269  00F4               	movwf	datos_ascii@numero
  2143  026A                     l1242:
  2144                           
  2145                           ;main_lab2.c: 237: unsigned char datos_ascii(uint8_t numero);main_lab2.c: 238: {;main_la
      +                          b2.c: 239:     switch(numero)
  2146  026A  2A7F               	goto	l1312
  2147  026B                     l1244:
  2148                           
  2149                           ;main_lab2.c: 242:             return 0x30;
  2150  026B  3030               	movlw	48
  2151  026C  2AA7               	goto	l124
  2152  026D                     l1256:
  2153                           
  2154                           ;main_lab2.c: 249:             return 0x31;
  2155  026D  3031               	movlw	49
  2156  026E  2AA7               	goto	l124
  2157  026F                     l1262:
  2158                           
  2159                           ;main_lab2.c: 253:             return 0x32;
  2160  026F  3032               	movlw	50
  2161  0270  2AA7               	goto	l124
  2162  0271                     l1268:
  2163                           
  2164                           ;main_lab2.c: 257:             return 0x33;
  2165  0271  3033               	movlw	51
  2166  0272  2AA7               	goto	l124
  2167  0273                     l1274:
  2168                           
  2169                           ;main_lab2.c: 261:             return 0x34;
  2170  0273  3034               	movlw	52
  2171  0274  2AA7               	goto	l124
  2172  0275                     l1280:
  2173                           
  2174                           ;main_lab2.c: 265:             return 0x35;
  2175  0275  3035               	movlw	53
  2176  0276  2AA7               	goto	l124
  2177  0277                     l1286:
  2178                           
  2179                           ;main_lab2.c: 269:             return 0x36;
  2180  0277  3036               	movlw	54
  2181  0278  2AA7               	goto	l124
  2182  0279                     l1292:
  2183                           
  2184                           ;main_lab2.c: 273:             return 0x37;
  2185  0279  3037               	movlw	55
  2186  027A  2AA7               	goto	l124
  2187  027B                     l1298:
  2188                           
  2189                           ;main_lab2.c: 277:             return 0x38;
  2190  027B  3038               	movlw	56
  2191  027C  2AA7               	goto	l124
  2192  027D                     l1304:
  2193                           
  2194                           ;main_lab2.c: 281:             return 0x39;
  2195  027D  3039               	movlw	57
  2196  027E  2AA7               	goto	l124
  2197  027F                     l1312:
  2198  027F  0874               	movf	datos_ascii@numero,w
  2199  0280  00F2               	movwf	??_datos_ascii
  2200  0281  01F3               	clrf	??_datos_ascii+1
  2201                           
  2202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2203                           ; Switch size 1, requested type "simple"
  2204                           ; Number of cases is 1, Range of values is 0 to 0
  2205                           ; switch strategies available:
  2206                           ; Name         Instructions Cycles
  2207                           ; simple_byte            4     3 (average)
  2208                           ; direct_byte           11     8 (fixed)
  2209                           ; jumptable            260     6 (fixed)
  2210                           ;	Chosen strategy is simple_byte
  2211  0282  0873               	movf	??_datos_ascii+1,w
  2212  0283  3A00               	xorlw	0	; case 0
  2213  0284  1903               	skipnz
  2214  0285  2A87               	goto	l1826
  2215  0286  2A6B               	goto	l1244
  2216  0287                     l1826:
  2217                           
  2218                           ; Switch size 1, requested type "simple"
  2219                           ; Number of cases is 10, Range of values is 0 to 9
  2220                           ; switch strategies available:
  2221                           ; Name         Instructions Cycles
  2222                           ; simple_byte           31    16 (average)
  2223                           ; direct_byte           38     8 (fixed)
  2224                           ; jumptable            260     6 (fixed)
  2225                           ;	Chosen strategy is simple_byte
  2226  0287  0872               	movf	??_datos_ascii,w
  2227  0288  3A00               	xorlw	0	; case 0
  2228  0289  1903               	skipnz
  2229  028A  2A6B               	goto	l1244
  2230  028B  3A01               	xorlw	1	; case 1
  2231  028C  1903               	skipnz
  2232  028D  2A6D               	goto	l1256
  2233  028E  3A03               	xorlw	3	; case 2
  2234  028F  1903               	skipnz
  2235  0290  2A6F               	goto	l1262
  2236  0291  3A01               	xorlw	1	; case 3
  2237  0292  1903               	skipnz
  2238  0293  2A71               	goto	l1268
  2239  0294  3A07               	xorlw	7	; case 4
  2240  0295  1903               	skipnz
  2241  0296  2A73               	goto	l1274
  2242  0297  3A01               	xorlw	1	; case 5
  2243  0298  1903               	skipnz
  2244  0299  2A75               	goto	l1280
  2245  029A  3A03               	xorlw	3	; case 6
  2246  029B  1903               	skipnz
  2247  029C  2A77               	goto	l1286
  2248  029D  3A01               	xorlw	1	; case 7
  2249  029E  1903               	skipnz
  2250  029F  2A79               	goto	l1292
  2251  02A0  3A0F               	xorlw	15	; case 8
  2252  02A1  1903               	skipnz
  2253  02A2  2A7B               	goto	l1298
  2254  02A3  3A01               	xorlw	1	; case 9
  2255  02A4  1903               	skipnz
  2256  02A5  2A7D               	goto	l1304
  2257  02A6  2A6B               	goto	l1244
  2258  02A7                     l124:
  2259  02A7  0008               	return
  2260  02A8                     __end_of_datos_ascii:
  2261                           
  2262                           	psect	text12
  2263  01BF                     __ptext12:	
  2264 ;; *************** function ___awmod *****************
  2265 ;; Defined at:
  2266 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  2267 ;; Parameters:    Size  Location     Type
  2268 ;;  divisor         2    4[BANK0 ] int 
  2269 ;;  dividend        2    6[BANK0 ] int 
  2270 ;; Auto vars:     Size  Location     Type
  2271 ;;  sign            1    9[COMMON] unsigned char 
  2272 ;;  counter         1    8[COMMON] unsigned char 
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  2    4[BANK0 ] int 
  2275 ;; Registers used:
  2276 ;;		wreg, status,2, status,0
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2282 ;;      Params:         0       4       0       0       0
  2283 ;;      Locals:         2       0       0       0       0
  2284 ;;      Temps:          1       0       0       0       0
  2285 ;;      Totals:         3       4       0       0       0
  2286 ;;Total ram usage:        7 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		Nothing
  2291 ;; This function is called by:
  2292 ;;		_lcd_ascii
  2293 ;;		_conversiones
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function ___awmod
  2299  01BF                     ___awmod:
  2300  01BF                     l1672:	
  2301                           ;incstack = 0
  2302                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2303                           
  2304  01BF  01F9               	clrf	___awmod@sign
  2305  01C0                     l1674:
  2306  01C0  1283               	bcf	3,5	;RP0=0, select bank0
  2307  01C1  1303               	bcf	3,6	;RP1=0, select bank0
  2308  01C2  1FA7               	btfss	___awmod@dividend+1,7
  2309  01C3  29C5               	goto	u581
  2310  01C4  29C6               	goto	u580
  2311  01C5                     u581:
  2312  01C5  29CD               	goto	l1680
  2313  01C6                     u580:
  2314  01C6                     l1676:
  2315  01C6  09A6               	comf	___awmod@dividend,f
  2316  01C7  09A7               	comf	___awmod@dividend+1,f
  2317  01C8  0AA6               	incf	___awmod@dividend,f
  2318  01C9  1903               	skipnz
  2319  01CA  0AA7               	incf	___awmod@dividend+1,f
  2320  01CB                     l1678:
  2321  01CB  01F9               	clrf	___awmod@sign
  2322  01CC  0AF9               	incf	___awmod@sign,f
  2323  01CD                     l1680:
  2324  01CD  1FA5               	btfss	___awmod@divisor+1,7
  2325  01CE  29D0               	goto	u591
  2326  01CF  29D1               	goto	u590
  2327  01D0                     u591:
  2328  01D0  29D6               	goto	l1684
  2329  01D1                     u590:
  2330  01D1                     l1682:
  2331  01D1  09A4               	comf	___awmod@divisor,f
  2332  01D2  09A5               	comf	___awmod@divisor+1,f
  2333  01D3  0AA4               	incf	___awmod@divisor,f
  2334  01D4  1903               	skipnz
  2335  01D5  0AA5               	incf	___awmod@divisor+1,f
  2336  01D6                     l1684:
  2337  01D6  0824               	movf	___awmod@divisor,w
  2338  01D7  0425               	iorwf	___awmod@divisor+1,w
  2339  01D8  1903               	btfsc	3,2
  2340  01D9  29DB               	goto	u601
  2341  01DA  29DC               	goto	u600
  2342  01DB                     u601:
  2343  01DB  2A0B               	goto	l1702
  2344  01DC                     u600:
  2345  01DC                     l1686:
  2346  01DC  01F8               	clrf	___awmod@counter
  2347  01DD  0AF8               	incf	___awmod@counter,f
  2348  01DE  29EA               	goto	l1692
  2349  01DF                     l1688:
  2350  01DF  3001               	movlw	1
  2351  01E0                     u615:
  2352  01E0  1003               	clrc
  2353  01E1  0DA4               	rlf	___awmod@divisor,f
  2354  01E2  0DA5               	rlf	___awmod@divisor+1,f
  2355  01E3  3EFF               	addlw	-1
  2356  01E4  1D03               	skipz
  2357  01E5  29E0               	goto	u615
  2358  01E6                     l1690:
  2359  01E6  3001               	movlw	1
  2360  01E7  00F7               	movwf	??___awmod
  2361  01E8  0877               	movf	??___awmod,w
  2362  01E9  07F8               	addwf	___awmod@counter,f
  2363  01EA                     l1692:
  2364  01EA  1FA5               	btfss	___awmod@divisor+1,7
  2365  01EB  29ED               	goto	u621
  2366  01EC  29EE               	goto	u620
  2367  01ED                     u621:
  2368  01ED  29DF               	goto	l1688
  2369  01EE                     u620:
  2370  01EE                     l1694:
  2371  01EE  0825               	movf	___awmod@divisor+1,w
  2372  01EF  0227               	subwf	___awmod@dividend+1,w
  2373  01F0  1D03               	skipz
  2374  01F1  29F4               	goto	u635
  2375  01F2  0824               	movf	___awmod@divisor,w
  2376  01F3  0226               	subwf	___awmod@dividend,w
  2377  01F4                     u635:
  2378  01F4  1C03               	skipc
  2379  01F5  29F7               	goto	u631
  2380  01F6  29F8               	goto	u630
  2381  01F7                     u631:
  2382  01F7  29FE               	goto	l1698
  2383  01F8                     u630:
  2384  01F8                     l1696:
  2385  01F8  0824               	movf	___awmod@divisor,w
  2386  01F9  02A6               	subwf	___awmod@dividend,f
  2387  01FA  0825               	movf	___awmod@divisor+1,w
  2388  01FB  1C03               	skipc
  2389  01FC  03A7               	decf	___awmod@dividend+1,f
  2390  01FD  02A7               	subwf	___awmod@dividend+1,f
  2391  01FE                     l1698:
  2392  01FE  3001               	movlw	1
  2393  01FF                     u645:
  2394  01FF  1003               	clrc
  2395  0200  0CA5               	rrf	___awmod@divisor+1,f
  2396  0201  0CA4               	rrf	___awmod@divisor,f
  2397  0202  3EFF               	addlw	-1
  2398  0203  1D03               	skipz
  2399  0204  29FF               	goto	u645
  2400  0205                     l1700:
  2401  0205  3001               	movlw	1
  2402  0206  02F8               	subwf	___awmod@counter,f
  2403  0207  1D03               	btfss	3,2
  2404  0208  2A0A               	goto	u651
  2405  0209  2A0B               	goto	u650
  2406  020A                     u651:
  2407  020A  29EE               	goto	l1694
  2408  020B                     u650:
  2409  020B                     l1702:
  2410  020B  0879               	movf	___awmod@sign,w
  2411  020C  1903               	btfsc	3,2
  2412  020D  2A0F               	goto	u661
  2413  020E  2A10               	goto	u660
  2414  020F                     u661:
  2415  020F  2A15               	goto	l1706
  2416  0210                     u660:
  2417  0210                     l1704:
  2418  0210  09A6               	comf	___awmod@dividend,f
  2419  0211  09A7               	comf	___awmod@dividend+1,f
  2420  0212  0AA6               	incf	___awmod@dividend,f
  2421  0213  1903               	skipnz
  2422  0214  0AA7               	incf	___awmod@dividend+1,f
  2423  0215                     l1706:
  2424  0215  0827               	movf	___awmod@dividend+1,w
  2425  0216  00A5               	movwf	?___awmod+1
  2426  0217  0826               	movf	___awmod@dividend,w
  2427  0218  00A4               	movwf	?___awmod
  2428  0219                     l454:
  2429  0219  0008               	return
  2430  021A                     __end_of___awmod:
  2431                           
  2432                           	psect	text13
  2433  0156                     __ptext13:	
  2434 ;; *************** function ___awdiv *****************
  2435 ;; Defined at:
  2436 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  2437 ;; Parameters:    Size  Location     Type
  2438 ;;  divisor         2    2[COMMON] int 
  2439 ;;  dividend        2    4[COMMON] int 
  2440 ;; Auto vars:     Size  Location     Type
  2441 ;;  quotient        2    2[BANK0 ] int 
  2442 ;;  sign            1    1[BANK0 ] unsigned char 
  2443 ;;  counter         1    0[BANK0 ] unsigned char 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    2[COMMON] int 
  2446 ;; Registers used:
  2447 ;;		wreg, status,2, status,0
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         4       0       0       0       0
  2454 ;;      Locals:         0       4       0       0       0
  2455 ;;      Temps:          1       0       0       0       0
  2456 ;;      Totals:         5       4       0       0       0
  2457 ;;Total ram usage:        9 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_lcd_ascii
  2464 ;;		_conversiones
  2465 ;; This function uses a non-reentrant model
  2466 ;;
  2467                           
  2468                           
  2469                           ;psect for function ___awdiv
  2470  0156                     ___awdiv:
  2471  0156                     l1628:	
  2472                           ;incstack = 0
  2473                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2474                           
  2475  0156  1283               	bcf	3,5	;RP0=0, select bank0
  2476  0157  1303               	bcf	3,6	;RP1=0, select bank0
  2477  0158  01A1               	clrf	___awdiv@sign
  2478  0159                     l1630:
  2479  0159  1FF3               	btfss	___awdiv@divisor+1,7
  2480  015A  295C               	goto	u481
  2481  015B  295D               	goto	u480
  2482  015C                     u481:
  2483  015C  2964               	goto	l1636
  2484  015D                     u480:
  2485  015D                     l1632:
  2486  015D  09F2               	comf	___awdiv@divisor,f
  2487  015E  09F3               	comf	___awdiv@divisor+1,f
  2488  015F  0AF2               	incf	___awdiv@divisor,f
  2489  0160  1903               	skipnz
  2490  0161  0AF3               	incf	___awdiv@divisor+1,f
  2491  0162                     l1634:
  2492  0162  01A1               	clrf	___awdiv@sign
  2493  0163  0AA1               	incf	___awdiv@sign,f
  2494  0164                     l1636:
  2495  0164  1FF5               	btfss	___awdiv@dividend+1,7
  2496  0165  2967               	goto	u491
  2497  0166  2968               	goto	u490
  2498  0167                     u491:
  2499  0167  2971               	goto	l1642
  2500  0168                     u490:
  2501  0168                     l1638:
  2502  0168  09F4               	comf	___awdiv@dividend,f
  2503  0169  09F5               	comf	___awdiv@dividend+1,f
  2504  016A  0AF4               	incf	___awdiv@dividend,f
  2505  016B  1903               	skipnz
  2506  016C  0AF5               	incf	___awdiv@dividend+1,f
  2507  016D                     l1640:
  2508  016D  3001               	movlw	1
  2509  016E  00F6               	movwf	??___awdiv
  2510  016F  0876               	movf	??___awdiv,w
  2511  0170  06A1               	xorwf	___awdiv@sign,f
  2512  0171                     l1642:
  2513  0171  01A2               	clrf	___awdiv@quotient
  2514  0172  01A3               	clrf	___awdiv@quotient+1
  2515  0173                     l1644:
  2516  0173  0872               	movf	___awdiv@divisor,w
  2517  0174  0473               	iorwf	___awdiv@divisor+1,w
  2518  0175  1903               	btfsc	3,2
  2519  0176  2978               	goto	u501
  2520  0177  2979               	goto	u500
  2521  0178                     u501:
  2522  0178  29B0               	goto	l1664
  2523  0179                     u500:
  2524  0179                     l1646:
  2525  0179  01A0               	clrf	___awdiv@counter
  2526  017A  0AA0               	incf	___awdiv@counter,f
  2527  017B  2987               	goto	l1652
  2528  017C                     l1648:
  2529  017C  3001               	movlw	1
  2530  017D                     u515:
  2531  017D  1003               	clrc
  2532  017E  0DF2               	rlf	___awdiv@divisor,f
  2533  017F  0DF3               	rlf	___awdiv@divisor+1,f
  2534  0180  3EFF               	addlw	-1
  2535  0181  1D03               	skipz
  2536  0182  297D               	goto	u515
  2537  0183                     l1650:
  2538  0183  3001               	movlw	1
  2539  0184  00F6               	movwf	??___awdiv
  2540  0185  0876               	movf	??___awdiv,w
  2541  0186  07A0               	addwf	___awdiv@counter,f
  2542  0187                     l1652:
  2543  0187  1FF3               	btfss	___awdiv@divisor+1,7
  2544  0188  298A               	goto	u521
  2545  0189  298B               	goto	u520
  2546  018A                     u521:
  2547  018A  297C               	goto	l1648
  2548  018B                     u520:
  2549  018B                     l1654:
  2550  018B  3001               	movlw	1
  2551  018C                     u535:
  2552  018C  1003               	clrc
  2553  018D  0DA2               	rlf	___awdiv@quotient,f
  2554  018E  0DA3               	rlf	___awdiv@quotient+1,f
  2555  018F  3EFF               	addlw	-1
  2556  0190  1D03               	skipz
  2557  0191  298C               	goto	u535
  2558  0192  0873               	movf	___awdiv@divisor+1,w
  2559  0193  0275               	subwf	___awdiv@dividend+1,w
  2560  0194  1D03               	skipz
  2561  0195  2998               	goto	u545
  2562  0196  0872               	movf	___awdiv@divisor,w
  2563  0197  0274               	subwf	___awdiv@dividend,w
  2564  0198                     u545:
  2565  0198  1C03               	skipc
  2566  0199  299B               	goto	u541
  2567  019A  299C               	goto	u540
  2568  019B                     u541:
  2569  019B  29A3               	goto	l1660
  2570  019C                     u540:
  2571  019C                     l1656:
  2572  019C  0872               	movf	___awdiv@divisor,w
  2573  019D  02F4               	subwf	___awdiv@dividend,f
  2574  019E  0873               	movf	___awdiv@divisor+1,w
  2575  019F  1C03               	skipc
  2576  01A0  03F5               	decf	___awdiv@dividend+1,f
  2577  01A1  02F5               	subwf	___awdiv@dividend+1,f
  2578  01A2                     l1658:
  2579  01A2  1422               	bsf	___awdiv@quotient,0
  2580  01A3                     l1660:
  2581  01A3  3001               	movlw	1
  2582  01A4                     u555:
  2583  01A4  1003               	clrc
  2584  01A5  0CF3               	rrf	___awdiv@divisor+1,f
  2585  01A6  0CF2               	rrf	___awdiv@divisor,f
  2586  01A7  3EFF               	addlw	-1
  2587  01A8  1D03               	skipz
  2588  01A9  29A4               	goto	u555
  2589  01AA                     l1662:
  2590  01AA  3001               	movlw	1
  2591  01AB  02A0               	subwf	___awdiv@counter,f
  2592  01AC  1D03               	btfss	3,2
  2593  01AD  29AF               	goto	u561
  2594  01AE  29B0               	goto	u560
  2595  01AF                     u561:
  2596  01AF  298B               	goto	l1654
  2597  01B0                     u560:
  2598  01B0                     l1664:
  2599  01B0  0821               	movf	___awdiv@sign,w
  2600  01B1  1903               	btfsc	3,2
  2601  01B2  29B4               	goto	u571
  2602  01B3  29B5               	goto	u570
  2603  01B4                     u571:
  2604  01B4  29BA               	goto	l1668
  2605  01B5                     u570:
  2606  01B5                     l1666:
  2607  01B5  09A2               	comf	___awdiv@quotient,f
  2608  01B6  09A3               	comf	___awdiv@quotient+1,f
  2609  01B7  0AA2               	incf	___awdiv@quotient,f
  2610  01B8  1903               	skipnz
  2611  01B9  0AA3               	incf	___awdiv@quotient+1,f
  2612  01BA                     l1668:
  2613  01BA  0823               	movf	___awdiv@quotient+1,w
  2614  01BB  00F3               	movwf	?___awdiv+1
  2615  01BC  0822               	movf	___awdiv@quotient,w
  2616  01BD  00F2               	movwf	?___awdiv
  2617  01BE                     l441:
  2618  01BE  0008               	return
  2619  01BF                     __end_of___awdiv:
  2620                           
  2621                           	psect	text14
  2622  03F9                     __ptext14:	
  2623 ;; *************** function _isr *****************
  2624 ;; Defined at:
  2625 ;;		line 82 in file "main_lab2.c"
  2626 ;; Parameters:    Size  Location     Type
  2627 ;;		None
  2628 ;; Auto vars:     Size  Location     Type
  2629 ;;		None
  2630 ;; Return value:  Size  Location     Type
  2631 ;;                  1    wreg      void 
  2632 ;; Registers used:
  2633 ;;		wreg
  2634 ;; Tracked objects:
  2635 ;;		On entry : 0/0
  2636 ;;		On exit  : 0/0
  2637 ;;		Unchanged: 0/0
  2638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2639 ;;      Params:         0       0       0       0       0
  2640 ;;      Locals:         0       0       0       0       0
  2641 ;;      Temps:          2       0       0       0       0
  2642 ;;      Totals:         2       0       0       0       0
  2643 ;;Total ram usage:        2 bytes
  2644 ;; Hardware stack levels used:    1
  2645 ;; This function calls:
  2646 ;;		Nothing
  2647 ;; This function is called by:
  2648 ;;		Interrupt level 1
  2649 ;; This function uses a non-reentrant model
  2650 ;;
  2651                           
  2652                           
  2653                           ;psect for function _isr
  2654  03F9                     _isr:
  2655  03F9                     i1l1116:
  2656                           
  2657                           ;main_lab2.c: 85:      if(PIR1bits.RCIF)
  2658  03F9  1283               	bcf	3,5	;RP0=0, select bank0
  2659  03FA  1303               	bcf	3,6	;RP1=0, select bank0
  2660  03FB  1E8C               	btfss	12,5	;volatile
  2661  03FC  2BFE               	goto	u24_21
  2662  03FD  2BFF               	goto	u24_20
  2663  03FE                     u24_21:
  2664  03FE  2C02               	goto	i1l92
  2665  03FF                     u24_20:
  2666  03FF                     i1l1118:
  2667                           
  2668                           ;main_lab2.c: 86:     {;main_lab2.c: 87:         RCREG=dato_recibido;
  2669  03FF  087B               	movf	_dato_recibido,w
  2670  0400  009A               	movwf	26	;volatile
  2671  0401                     i1l1120:
  2672                           
  2673                           ;main_lab2.c: 88:         PIR1bits.RCIF=0;
  2674  0401  128C               	bcf	12,5	;volatile
  2675  0402                     i1l92:
  2676  0402  0871               	movf	??_isr+1,w
  2677  0403  008A               	movwf	10
  2678  0404  0E70               	swapf	??_isr,w
  2679  0405  0083               	movwf	3
  2680  0406  0EFE               	swapf	btemp,f
  2681  0407  0E7E               	swapf	btemp,w
  2682  0408  0009               	retfie
  2683  0409                     __end_of_isr:
  2684  007E                     btemp	set	126	;btemp
  2685  007E                     wtemp0	set	126
  2686                           
  2687                           	psect	intentry
  2688  0004                     __pintentry:	
  2689                           ;incstack = 0
  2690                           ; Regs used in _isr: [wreg]
  2691                           
  2692  0004                     interrupt_function:
  2693  007E                     saved_w	set	btemp
  2694  0004  00FE               	movwf	btemp
  2695  0005  0E03               	swapf	3,w
  2696  0006  00F0               	movwf	??_isr
  2697  0007  080A               	movf	10,w
  2698  0008  00F1               	movwf	??_isr+1
  2699  0009  120A  118A  2BF9   	ljmp	_isr
  2700                           
  2701                           	psect	config
  2702                           
  2703                           ;Config register CONFIG1 @ 0x2007
  2704                           ;	Oscillator Selection bits
  2705                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2706                           ;	Watchdog Timer Enable bit
  2707                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2708                           ;	Power-up Timer Enable bit
  2709                           ;	PWRTE = OFF, PWRT disabled
  2710                           ;	RE3/MCLR pin function select bit
  2711                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2712                           ;	Code Protection bit
  2713                           ;	CP = OFF, Program memory code protection is disabled
  2714                           ;	Data Code Protection bit
  2715                           ;	CPD = OFF, Data memory code protection is disabled
  2716                           ;	Brown Out Reset Selection bits
  2717                           ;	BOREN = OFF, BOR disabled
  2718                           ;	Internal External Switchover bit
  2719                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2720                           ;	Fail-Safe Clock Monitor Enabled bit
  2721                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2722                           ;	Low Voltage Programming Enable bit
  2723                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2724                           ;	In-Circuit Debugger Mode bit
  2725                           ;	DEBUG = 0x1, unprogrammed default
  2726  2007                     	org	8199
  2727  2007  20D4               	dw	8404
  2728                           
  2729                           ;Config register CONFIG2 @ 0x2008
  2730                           ;	Brown-out Reset Selection bit
  2731                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2732                           ;	Flash Program Memory Self Write Enable bits
  2733                           ;	WRT = OFF, Write protection off
  2734  2008                     	org	8200
  2735  2008  3FFF               	dw	16383

Data Sizes:
    Strings     15
    Constant    0
    Data        0
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      12
    BANK0            80     31      45
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_lcd_linea
    _setup->_adc_config
    _lcd_linea->_cmd
    _lcd_init->_cmd
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_show
    _show->_lcd_ascii
    _lcd_ascii->___awmod
    ___awmod->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    6606
                                             29 BANK0      2     2      0
                                _cmd
                          _lcd_ascii
                           _lcd_init
                          _lcd_linea
                     _recepcion_uart
                              _setup
                               _show
                         _toggle_adc
 ---------------------------------------------------------------------------------
 (1) _toggle_adc                                           3     3      0       0
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     0      2     219
                                             27 BANK0      2     0      2
                                _dat
                          _lcd_ascii (ARG)
 ---------------------------------------------------------------------------------
 (2) _dat                                                  3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
                         _adc_config
 ---------------------------------------------------------------------------------
 (2) _adc_config                                           1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _recepcion_uart                                       2     2      0       0
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_linea                                            5     4      1     354
                                              5 COMMON     5     4      1
                                _cmd
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      22
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_ascii                                           19    19      0    5989
                                              8 BANK0     19    19      0
                            ___awdiv
                            ___awmod
                        _datos_ascii
 ---------------------------------------------------------------------------------
 (2) _datos_ascii                                          3     3      0      22
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    3133
                                              7 COMMON     3     3      0
                                              4 BANK0      4     0      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2245
                                              2 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_ascii
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _datos_ascii
   _lcd_init
     _cmd
   _lcd_linea
     _cmd
   _recepcion_uart
   _setup
     _adc_config
   _show
     _dat
     _lcd_ascii (ARG)
       ___awdiv
       ___awmod
         ___awdiv (ARG)
       _datos_ascii
   _toggle_adc

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       C       1       85.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      39       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1F      2D       5       56.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      39      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Jul 27 16:02:01 2021

                      pc 0002             ___awdiv@sign 0021          ?_recepcion_uart 0070  
                     fsr 0004                      l103 0337                      l111 02E2  
                    l124 02A7                      l141 0155                      l150 03E3  
                    l119 0381                      l171 03CE                      l165 03B9  
                    l183 030E                      l168 03F8                      l441 01BE  
                    l177 035F                      l454 0219                      _RD5 0045  
                    _RD6 0046                      _RD7 0047                      u500 0179  
                    u501 0178                      u520 018B                      u600 01DC  
                    u440 02AE                      u521 018A                      u601 01DB  
                    u441 02AD                      u450 02E9                      u515 017D  
                    u451 02E8                      u540 019C                      u620 01EE  
                    u460 02FF                      u541 019B                      u621 01ED  
                    u461 02FE                      u630 01F8                      u470 035F  
                    u535 018C                      u631 01F7                      u615 01E0  
                    u471 035E                      u560 01B0                      u480 015D  
                    u561 01AF                      u545 0198                      u481 015C  
                    u570 01B5                      u490 0168                      u650 020B  
                    u571 01B4                      u555 01A4                      u491 0167  
                    u651 020A                      u635 01F4                      u707 03DE  
                    u660 0210                      u580 01C6                      u661 020F  
                    u645 01FF                      u581 01C5                      u717 03F0  
                    u590 01D1                      u591 01D0                      u677 02B5  
                    u687 02C6                      u697 03C6                      _dat 03BA  
                    _cmd 03E4                      _isr 03F9                      fsr0 0004  
                    indf 0000             ___awmod@sign 0079                     l1230 03F5  
                   l1222 03E5                     l1304 027D                     l1312 027F  
                   l1224 03E9                     l1232 03CF                     l1320 03BF  
                   l1242 026A                     l1226 03EA                     l1234 03D4  
                   l1410 030F                     l1322 03C0                     l1244 026B  
                   l1228 03EB                     l1500 0304                     l1236 03DC  
                   l1420 031B                     l1412 0313                     l1324 03C1  
                   l1262 026F                     l1502 0308                     l1238 03E0  
                   l1430 032D                     l1422 0322                     l1414 0314  
                   l1326 03CB                     l1318 03BB                     l1510 034F  
                   ?_dat 0070                     l1280 0275                     l1256 026D  
                   l1440 0334                     l1432 032E                     l1424 0326  
                   l1416 0319                     l1504 0338                     l1274 0273  
                   l1434 032F                     l1426 0327                     l1418 031A  
                   l1506 0339                     l1450 02AF                     ?_cmd 0070  
                   l1700 0205                     l1292 0279                     l1268 0271  
                   l1444 03A1                     l1436 0330                     l1428 032C  
                   l1508 0347                     l1460 02CD                     l1452 02B8  
                   l1630 0159                     l1702 020B                     l1286 0277  
                   l1710 0025                     l1438 0331                     l1454 02BE  
                   l1446 02A8                     l1640 016D                     l1632 015D  
                   l1704 0210                     l1720 00D4                     l1712 0054  
                   l1472 0360                     l1456 02C0                     l1650 0183  
                   l1642 0171                     l1634 0162                     l1706 0215  
                   l1298 027B                     l1730 0136                     l1722 00D8  
                   l1714 0058                     l1490 02E9                     l1474 0361  
                   l1482 0371                     l1458 02C9                     l1466 02CF  
                   l1660 01A3                     l1652 0187                     l1644 0173  
                   l1636 0164                     l1628 0156                     l1732 0141  
                   l1724 0105                     l1716 0085                     l1492 02EE  
                   l1476 0368                     l1662 01AA                     l1654 018B  
                   l1646 0179                     l1638 0168                     l1734 014C  
                   l1726 0123                     l1718 00A3                     l1494 02F2  
                   l1478 036D                     l1822 02DA                     l1750 0238  
                   l1742 021A                     l1656 019C                     l1648 017C  
                   l1664 01B0                     l1680 01CD                     l1672 01BF  
                   l1736 0150                     l1728 0132                     l1496 02F9  
                   l1488 02E4                     l1824 0379                     l1752 0240  
                   l1744 022A                     l1666 01B5                     l1658 01A2  
                   l1690 01E6                     l1682 01D1                     l1674 01C0  
                   l1826 0287                     l1738 0154                     l1498 02FF  
                   l1754 024B                     l1746 022F                     l1668 01BA  
                   l1692 01EA                     l1684 01D6                     l1676 01C6  
                   l1756 0253                     l1748 0234                     l1694 01EE  
                   l1686 01DC                     l1678 01CB                     l1696 01F8  
                   l1688 01DF                     l1698 01FE                     ?_isr 0070  
                   STR_1 0392                     i1l92 0402                     dat@b 0074  
                   cmd@a 0074                     _main 021A                     _show 0338  
                   btemp 007E                     start 000C                    ??_dat 0072  
                  ??_cmd 0072                    ??_isr 0070                    ?_main 0070  
        __end_of___awdiv 01BF          __end_of___awmod 021A                    ?_show 003B  
                  _ANSEL 0188          ___awdiv@divisor 0072          ___awdiv@counter 0020  
                  _RCREG 001A                    u24_20 03FF                    u24_21 03FE  
                  _SPBRG 0099                    _PORTB 0006                    _PORTD 0008  
                  _PORTE 0009                    _TRISB 0086                    _TRISC 0087  
                  _TRISE 0089                    _suma1 0041                    _suma2 0040  
                  _suma3 003F                    _setup 030F                    pclath 000A  
                  show@s 003B            lcd_linea@temp 0078                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0269  
           __end_of_show 0360                   ??_main 003D                   ??_show 007A  
   __size_of_datos_ascii 003F                   _ADRESH 001E         ___awdiv@dividend 0074  
                 ?_setup 0070                   _ANSELH 0189                   i1l1120 0401  
                 i1l1116 03F9                   i1l1118 03FF                   _SPBRGH 009A  
       __end_of_lcd_init 03BA          lcd_ascii@random 002B                ??___awdiv 0076  
              ??___awmod 0077         ___awdiv@quotient 0022          ___awmod@divisor 0024  
        ___awmod@counter 0078                   saved_w 007E  __end_of__initialization 0021  
       ??_recepcion_uart 0072           __pcstackCOMMON 0070               _adc_config 03CF  
          __end_of_setup 0338       __size_of_lcd_ascii 0131       __size_of_lcd_linea 002C  
                ??_setup 0073               __pbssBANK0 003F               __pmaintext 021A  
             __pintentry 0004                ?_lcd_init 0070               __stringtab 0382  
      __end_of_lcd_ascii 0156        __end_of_lcd_linea 030F              ?_adc_config 0070  
                ___awdiv 0156                  ___awmod 01BF                _ANSELbits 0188  
                __ptext1 02A8                  __ptext2 0338                  __ptext3 03BA  
                __ptext4 030F                  __ptext5 03CF                  __ptext6 0360  
                __ptext7 02E3                  __ptext8 03A1                  __ptext9 03E4  
           __size_of_dat 0015             __size_of_cmd 0015             __size_of_isr 0010  
       ___awmod@dividend 0026               ??_lcd_init 0075     end_of_initialization 0021  
              _RCSTAbits 0018            ??_datos_ascii 0072               _toggle_adc 02A8  
              _TRISDbits 0088      __size_of_adc_config 0015               lcd_linea@a 0077  
             lcd_linea@b 0075               lcd_linea@z 0079                _TXSTAbits 0098  
            _BAUDCTLbits 0187      start_initialization 000F      __end_of_datos_ascii 02A8  
            __end_of_dat 03CF              __end_of_cmd 03F9              __end_of_isr 0409  
      datos_ascii@numero 0074              ?_toggle_adc 0070              __pbssCOMMON 007A  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_init 0019  
              _centenas1 0049                _centenas2 007A                _centenas3 0044  
           ??_adc_config 0072                 ?___awdiv 0072                 ?___awmod 0024  
          _dato_recibido 007B                _lcd_ascii 0025              _datos_ascii 0269  
              _lcd_linea 02E3                __pstrings 0382  __size_of_recepcion_uart 0022  
         __size_of_setup 0029       __end_of_adc_config 03E4        interrupt_function 0004  
               _PIE1bits 008C                 _PIR1bits 000C      __size_of_toggle_adc 003B  
             ?_lcd_ascii 0070                _unidades1 0047                _unidades2 0045  
              _unidades3 0042               ?_lcd_linea 0075               _ADCON0bits 001F  
            __stringbase 0391               _ADCON1bits 009F              _cuenta_uart 004A  
            _conversion1 004C              _conversion2 004B         __size_of___awdiv 0069  
       __size_of___awmod 005B       __end_of__stringtab 0392                 _decenas1 0048  
               _decenas2 0046                 _decenas3 0043                 __ptext10 0025  
               __ptext11 0269                 __ptext12 01BF                 __ptext13 0156  
               __ptext14 03F9                 _lcd_init 03A1            __size_of_main 004F  
          __size_of_show 0028              ??_lcd_ascii 0028              ??_lcd_linea 0076  
         _recepcion_uart 0360               _INTCONbits 000B             ??_toggle_adc 0072  
               intlevel1 0000                stringcode 038C               _OSCCONbits 008F  
     __end_of_toggle_adc 02E3   __end_of_recepcion_uart 0382             ?_datos_ascii 0070  
               stringdir 038C                 stringtab 0382  
