

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Jul 24 19:09:16 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F887 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  008F                     	;# 
    97  0090                     	;# 
    98  0091                     	;# 
    99  0092                     	;# 
   100  0093                     	;# 
   101  0093                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0095                     	;# 
   105  0096                     	;# 
   106  0097                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009A                     	;# 
   110  009B                     	;# 
   111  009C                     	;# 
   112  009D                     	;# 
   113  009E                     	;# 
   114  009F                     	;# 
   115  0105                     	;# 
   116  0107                     	;# 
   117  0108                     	;# 
   118  0109                     	;# 
   119  010C                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  0185                     	;# 
   125  0187                     	;# 
   126  0188                     	;# 
   127  0189                     	;# 
   128  018C                     	;# 
   129  018D                     	;# 
   130  0000                     	;# 
   131  0001                     	;# 
   132  0002                     	;# 
   133  0003                     	;# 
   134  0004                     	;# 
   135  0005                     	;# 
   136  0006                     	;# 
   137  0007                     	;# 
   138  0008                     	;# 
   139  0009                     	;# 
   140  000A                     	;# 
   141  000B                     	;# 
   142  000C                     	;# 
   143  000D                     	;# 
   144  000E                     	;# 
   145  000E                     	;# 
   146  000F                     	;# 
   147  0010                     	;# 
   148  0011                     	;# 
   149  0012                     	;# 
   150  0013                     	;# 
   151  0014                     	;# 
   152  0015                     	;# 
   153  0015                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001B                     	;# 
   161  001C                     	;# 
   162  001D                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  0081                     	;# 
   166  0085                     	;# 
   167  0086                     	;# 
   168  0087                     	;# 
   169  0088                     	;# 
   170  0089                     	;# 
   171  008C                     	;# 
   172  008D                     	;# 
   173  008E                     	;# 
   174  008F                     	;# 
   175  0090                     	;# 
   176  0091                     	;# 
   177  0092                     	;# 
   178  0093                     	;# 
   179  0093                     	;# 
   180  0093                     	;# 
   181  0094                     	;# 
   182  0095                     	;# 
   183  0096                     	;# 
   184  0097                     	;# 
   185  0098                     	;# 
   186  0099                     	;# 
   187  009A                     	;# 
   188  009B                     	;# 
   189  009C                     	;# 
   190  009D                     	;# 
   191  009E                     	;# 
   192  009F                     	;# 
   193  0105                     	;# 
   194  0107                     	;# 
   195  0108                     	;# 
   196  0109                     	;# 
   197  010C                     	;# 
   198  010C                     	;# 
   199  010D                     	;# 
   200  010E                     	;# 
   201  010F                     	;# 
   202  0185                     	;# 
   203  0187                     	;# 
   204  0188                     	;# 
   205  0189                     	;# 
   206  018C                     	;# 
   207  018D                     	;# 
   208  0000                     	;# 
   209  0001                     	;# 
   210  0002                     	;# 
   211  0003                     	;# 
   212  0004                     	;# 
   213  0005                     	;# 
   214  0006                     	;# 
   215  0007                     	;# 
   216  0008                     	;# 
   217  0009                     	;# 
   218  000A                     	;# 
   219  000B                     	;# 
   220  000C                     	;# 
   221  000D                     	;# 
   222  000E                     	;# 
   223  000E                     	;# 
   224  000F                     	;# 
   225  0010                     	;# 
   226  0011                     	;# 
   227  0012                     	;# 
   228  0013                     	;# 
   229  0014                     	;# 
   230  0015                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0017                     	;# 
   234  0018                     	;# 
   235  0019                     	;# 
   236  001A                     	;# 
   237  001B                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001D                     	;# 
   241  001E                     	;# 
   242  001F                     	;# 
   243  0081                     	;# 
   244  0085                     	;# 
   245  0086                     	;# 
   246  0087                     	;# 
   247  0088                     	;# 
   248  0089                     	;# 
   249  008C                     	;# 
   250  008D                     	;# 
   251  008E                     	;# 
   252  008F                     	;# 
   253  0090                     	;# 
   254  0091                     	;# 
   255  0092                     	;# 
   256  0093                     	;# 
   257  0093                     	;# 
   258  0093                     	;# 
   259  0094                     	;# 
   260  0095                     	;# 
   261  0096                     	;# 
   262  0097                     	;# 
   263  0098                     	;# 
   264  0099                     	;# 
   265  009A                     	;# 
   266  009B                     	;# 
   267  009C                     	;# 
   268  009D                     	;# 
   269  009E                     	;# 
   270  009F                     	;# 
   271  0105                     	;# 
   272  0107                     	;# 
   273  0108                     	;# 
   274  0109                     	;# 
   275  010C                     	;# 
   276  010C                     	;# 
   277  010D                     	;# 
   278  010E                     	;# 
   279  010F                     	;# 
   280  0185                     	;# 
   281  0187                     	;# 
   282  0188                     	;# 
   283  0189                     	;# 
   284  018C                     	;# 
   285  018D                     	;# 
   286  0000                     	;# 
   287  0001                     	;# 
   288  0002                     	;# 
   289  0003                     	;# 
   290  0004                     	;# 
   291  0005                     	;# 
   292  0006                     	;# 
   293  0007                     	;# 
   294  0008                     	;# 
   295  0009                     	;# 
   296  000A                     	;# 
   297  000B                     	;# 
   298  000C                     	;# 
   299  000D                     	;# 
   300  000E                     	;# 
   301  000E                     	;# 
   302  000F                     	;# 
   303  0010                     	;# 
   304  0011                     	;# 
   305  0012                     	;# 
   306  0013                     	;# 
   307  0014                     	;# 
   308  0015                     	;# 
   309  0015                     	;# 
   310  0016                     	;# 
   311  0017                     	;# 
   312  0018                     	;# 
   313  0019                     	;# 
   314  001A                     	;# 
   315  001B                     	;# 
   316  001B                     	;# 
   317  001C                     	;# 
   318  001D                     	;# 
   319  001E                     	;# 
   320  001F                     	;# 
   321  0081                     	;# 
   322  0085                     	;# 
   323  0086                     	;# 
   324  0087                     	;# 
   325  0088                     	;# 
   326  0089                     	;# 
   327  008C                     	;# 
   328  008D                     	;# 
   329  008E                     	;# 
   330  008F                     	;# 
   331  0090                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0093                     	;# 
   336  0093                     	;# 
   337  0094                     	;# 
   338  0095                     	;# 
   339  0096                     	;# 
   340  0097                     	;# 
   341  0098                     	;# 
   342  0099                     	;# 
   343  009A                     	;# 
   344  009B                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  0105                     	;# 
   350  0107                     	;# 
   351  0108                     	;# 
   352  0109                     	;# 
   353  010C                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  0185                     	;# 
   359  0187                     	;# 
   360  0188                     	;# 
   361  0189                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0008                     _PORTDbits	set	8
   365  0006                     _PORTB	set	6
   366  001E                     _ADRESH	set	30
   367  001F                     _ADCON0bits	set	31
   368  000C                     _PIR1bits	set	12
   369  000B                     _INTCONbits	set	11
   370  0001                     _TMR0	set	1
   371  0043                     _RD3	set	67
   372  0047                     _RD7	set	71
   373  0046                     _RD6	set	70
   374  0045                     _RD5	set	69
   375  0044                     _RD4	set	68
   376  003A                     _RC2	set	58
   377  0039                     _RC1	set	57
   378  0038                     _RC0	set	56
   379  009F                     _ADCON1bits	set	159
   380  0096                     _IOCBbits	set	150
   381  008C                     _PIE1bits	set	140
   382  0095                     _WPUBbits	set	149
   383  0081                     _OPTION_REGbits	set	129
   384  008F                     _OSCCONbits	set	143
   385  0087                     _TRISCbits	set	135
   386  0086                     _TRISB	set	134
   387  0189                     _ANSELH	set	393
   388  0188                     _ANSEL	set	392
   389                           
   390                           	psect	strings
   391  00C7                     __pstrings:
   392  00C7                     stringtab:
   393  00C7                     __stringtab:
   394  00C7                     stringcode:	
   395                           ;	String table - string pointers are 1 byte each
   396                           
   397  00C7                     stringdir:
   398  00C7  3000               	movlw	high stringdir
   399  00C8  008A               	movwf	10
   400  00C9  0804               	movf	4,w
   401  00CA  0A84               	incf	4,f
   402  00CB  0782               	addwf	2,f
   403  00CC                     __stringbase:
   404  00CC  3400               	retlw	0
   405  00CD                     __end_of__stringtab:
   406  00CD                     STR_1:
   407  00CD  3477               	retlw	119	;'w'
   408  00CE  3465               	retlw	101	;'e'
   409  00CF  346E               	retlw	110	;'n'
   410  00D0  3461               	retlw	97	;'a'
   411  00D1  3473               	retlw	115	;'s'
   412  00D2  3420               	retlw	32	;' '
   413  00D3  346C               	retlw	108	;'l'
   414  00D4  3479               	retlw	121	;'y'
   415  00D5  3400               	retlw	0
   416                           
   417                           	psect	cinit
   418  000F                     start_initialization:	
   419                           ; #config settings
   420                           
   421  000F                     __initialization:
   422                           
   423                           ; Clear objects allocated to COMMON
   424  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   425  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   426  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   427  0012  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   428  0013                     end_of_initialization:	
   429                           ;End of C runtime variable initialization code
   430                           
   431  0013                     __end_of__initialization:
   432  0013  0183               	clrf	3
   433  0014  120A  118A  2817   	ljmp	_main	;jump to C main() function
   434                           
   435                           	psect	bssCOMMON
   436  0077                     __pbssCOMMON:
   437  0077                     _i:
   438  0077                     	ds	2
   439  0079                     _conversion2:
   440  0079                     	ds	1
   441  007A                     _conversion1:
   442  007A                     	ds	1
   443                           
   444                           	psect	cstackCOMMON
   445  0070                     __pcstackCOMMON:
   446  0070                     ?_lcd_init:
   447  0070                     ?_cmd:	
   448                           ; 1 bytes @ 0x0
   449                           
   450  0070                     ?_show:	
   451                           ; 1 bytes @ 0x0
   452                           
   453  0070                     ?_isr:	
   454                           ; 1 bytes @ 0x0
   455                           
   456  0070                     ??_isr:	
   457                           ; 1 bytes @ 0x0
   458                           
   459  0070                     ?_main:	
   460                           ; 1 bytes @ 0x0
   461                           
   462  0070                     ?_dat:	
   463                           ; 1 bytes @ 0x0
   464                           
   465                           
   466                           ; 1 bytes @ 0x0
   467  0070                     	ds	2
   468  0072                     ??_cmd:
   469  0072                     ??_dat:	
   470                           ; 1 bytes @ 0x2
   471                           
   472  0072                     cmd@a:	
   473                           ; 1 bytes @ 0x2
   474                           
   475  0072                     dat@b:	
   476                           ; 1 bytes @ 0x2
   477                           
   478                           
   479                           ; 1 bytes @ 0x2
   480  0072                     	ds	1
   481  0073                     ??_lcd_init:
   482  0073                     ??_show:	
   483                           ; 1 bytes @ 0x3
   484                           
   485                           
   486                           ; 1 bytes @ 0x3
   487  0073                     	ds	1
   488  0074                     show@s:
   489                           
   490                           ; 1 bytes @ 0x4
   491  0074                     	ds	1
   492  0075                     ??_main:
   493  0075                     main@i:	
   494                           ; 1 bytes @ 0x5
   495                           
   496                           
   497                           ; 2 bytes @ 0x5
   498  0075                     	ds	2
   499                           
   500                           	psect	maintext
   501  0017                     __pmaintext:	
   502 ;;
   503 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   504 ;;
   505 ;; *************** function _main *****************
   506 ;; Defined at:
   507 ;;		line 83 in file "main_lab2.c"
   508 ;; Parameters:    Size  Location     Type
   509 ;;		None
   510 ;; Auto vars:     Size  Location     Type
   511 ;;  i               2    5[COMMON] unsigned int 
   512 ;; Return value:  Size  Location     Type
   513 ;;                  1    wreg      void 
   514 ;; Registers used:
   515 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   516 ;; Tracked objects:
   517 ;;		On entry : B00/0
   518 ;;		On exit  : 0/0
   519 ;;		Unchanged: 0/0
   520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   521 ;;      Params:         0       0       0       0       0
   522 ;;      Locals:         2       0       0       0       0
   523 ;;      Temps:          0       0       0       0       0
   524 ;;      Totals:         2       0       0       0       0
   525 ;;Total ram usage:        2 bytes
   526 ;; Hardware stack levels required when called:    3
   527 ;; This function calls:
   528 ;;		_cmd
   529 ;;		_lcd_init
   530 ;;		_show
   531 ;; This function is called by:
   532 ;;		Startup code after reset
   533 ;; This function uses a non-reentrant model
   534 ;;
   535                           
   536                           
   537                           ;psect for function _main
   538  0017                     _main:
   539  0017                     l1005:	
   540                           ;incstack = 0
   541                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   542                           
   543                           
   544                           ;main_lab2.c: 86:     unsigned int i;;main_lab2.c: 87:  TRISB=0;
   545  0017  1683               	bsf	3,5	;RP0=1, select bank1
   546  0018  1303               	bcf	3,6	;RP1=0, select bank1
   547  0019  0186               	clrf	6	;volatile
   548  001A                     l1007:
   549                           
   550                           ;main_lab2.c: 88:     TRISCbits.TRISC0=0;
   551  001A  1007               	bcf	7,0	;volatile
   552  001B                     l1009:
   553                           
   554                           ;main_lab2.c: 89:     TRISCbits.TRISC1=0;
   555  001B  1087               	bcf	7,1	;volatile
   556  001C                     l1011:
   557                           
   558                           ;main_lab2.c: 90:     TRISCbits.TRISC2=0;
   559  001C  1107               	bcf	7,2	;volatile
   560  001D                     l1013:
   561                           
   562                           ;main_lab2.c: 91:  lcd_init();
   563  001D  120A  118A  20AE  120A  118A  	fcall	_lcd_init
   564  0022                     l1015:
   565                           
   566                           ;main_lab2.c: 92:  cmd(0x90);
   567  0022  3090               	movlw	144
   568  0023  120A  118A  206C  120A  118A  	fcall	_cmd
   569  0028                     l1017:
   570                           
   571                           ;main_lab2.c: 93:  show("wenas ly");
   572  0028  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   573  0029  120A  118A  208F  120A  118A  	fcall	_show
   574  002E                     l1019:
   575                           
   576                           ;main_lab2.c: 96:     {;main_lab2.c: 97:         for(i=0;i<15000;i++);
   577  002E  01F5               	clrf	main@i
   578  002F  01F6               	clrf	main@i+1
   579  0030                     l1025:
   580  0030  3001               	movlw	1
   581  0031  07F5               	addwf	main@i,f
   582  0032  1803               	skipnc
   583  0033  0AF6               	incf	main@i+1,f
   584  0034  3000               	movlw	0
   585  0035  07F6               	addwf	main@i+1,f
   586  0036  303A               	movlw	58
   587  0037  0276               	subwf	main@i+1,w
   588  0038  3098               	movlw	152
   589  0039  1903               	skipnz
   590  003A  0275               	subwf	main@i,w
   591  003B  1C03               	skipc
   592  003C  283E               	goto	u171
   593  003D  283F               	goto	u170
   594  003E                     u171:
   595  003E  2830               	goto	l1025
   596  003F                     u170:
   597  003F                     l1027:
   598                           
   599                           ;main_lab2.c: 98:   cmd(0x18);
   600  003F  3018               	movlw	24
   601  0040  120A  118A  206C  120A  118A  	fcall	_cmd
   602  0045  282E               	goto	l1019
   603  0046  120A  118A  280C   	ljmp	start
   604  0049                     __end_of_main:
   605                           
   606                           	psect	text1
   607  008F                     __ptext1:	
   608 ;; *************** function _show *****************
   609 ;; Defined at:
   610 ;;		line 224 in file "main_lab2.c"
   611 ;; Parameters:    Size  Location     Type
   612 ;;  s               1    wreg     PTR unsigned char 
   613 ;;		 -> STR_1(9), 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  s               1    4[COMMON] PTR unsigned char 
   616 ;;		 -> STR_1(9), 
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : 0/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         1       0       0       0       0
   628 ;;      Temps:          1       0       0       0       0
   629 ;;      Totals:         2       0       0       0       0
   630 ;;Total ram usage:        2 bytes
   631 ;; Hardware stack levels used:    1
   632 ;; Hardware stack levels required when called:    2
   633 ;; This function calls:
   634 ;;		_dat
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _show
   642  008F                     _show:
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _show: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   646                           ;show@s stored from wreg
   647  008F  00F4               	movwf	show@s
   648  0090                     l997:
   649                           
   650                           ;main_lab2.c: 224: void show(unsigned char *s);main_lab2.c: 225: {;main_lab2.c: 226:  wh
      +                          ile(*s) {
   651  0090  28A1               	goto	l1003
   652  0091                     l999:
   653                           
   654                           ;main_lab2.c: 227:   dat(*s++);
   655  0091  0874               	movf	show@s,w
   656  0092  0084               	movwf	4
   657  0093  120A  118A  20C7  120A  118A  	fcall	stringdir
   658  0098  120A  118A  2049  120A  118A  	fcall	_dat
   659  009D                     l1001:
   660  009D  3001               	movlw	1
   661  009E  00F3               	movwf	??_show
   662  009F  0873               	movf	??_show,w
   663  00A0  07F4               	addwf	show@s,f
   664  00A1                     l1003:
   665                           
   666                           ;main_lab2.c: 226:  while(*s) {
   667  00A1  0874               	movf	show@s,w
   668  00A2  0084               	movwf	4
   669  00A3  120A  118A  20C7  120A  118A  	fcall	stringdir
   670  00A8  3A00               	xorlw	0
   671  00A9  1D03               	skipz
   672  00AA  28AC               	goto	u161
   673  00AB  28AD               	goto	u160
   674  00AC                     u161:
   675  00AC  2891               	goto	l999
   676  00AD                     u160:
   677  00AD                     l97:
   678  00AD  0008               	return
   679  00AE                     __end_of_show:
   680                           
   681                           	psect	text2
   682  0049                     __ptext2:	
   683 ;; *************** function _dat *****************
   684 ;; Defined at:
   685 ;;		line 214 in file "main_lab2.c"
   686 ;; Parameters:    Size  Location     Type
   687 ;;  b               1    wreg     unsigned char 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  b               1    2[COMMON] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  1    wreg      void 
   692 ;; Registers used:
   693 ;;		wreg, status,2, btemp+1
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       0       0       0       0
   700 ;;      Locals:         1       0       0       0       0
   701 ;;      Temps:          0       0       0       0       0
   702 ;;      Totals:         1       0       0       0       0
   703 ;;Total ram usage:        1 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_show
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           
   713                           
   714                           ;psect for function _dat
   715  0049                     _dat:
   716                           
   717                           ;incstack = 0
   718                           ; Regs used in _dat: [wreg+status,2+btemp+1]
   719                           ;dat@b stored from wreg
   720  0049  00F2               	movwf	dat@b
   721  004A                     l773:
   722                           
   723                           ;main_lab2.c: 214: void dat(unsigned char b);main_lab2.c: 215: {;main_lab2.c: 216:  PORT
      +                          B=b;
   724  004A  0872               	movf	dat@b,w
   725  004B  1283               	bcf	3,5	;RP0=0, select bank0
   726  004C  1303               	bcf	3,6	;RP1=0, select bank0
   727  004D  0086               	movwf	6	;volatile
   728  004E                     l775:
   729                           
   730                           ;main_lab2.c: 217:  RC0=1;
   731  004E  1407               	bsf	7,0	;volatile
   732  004F                     l777:
   733                           
   734                           ;main_lab2.c: 218:  RC1=0;
   735  004F  1087               	bcf	7,1	;volatile
   736  0050                     l779:
   737                           
   738                           ;main_lab2.c: 219:  RC2=1;
   739  0050  1507               	bsf	7,2	;volatile
   740  0051                     l781:
   741                           
   742                           ;main_lab2.c: 220:  for(i=0;i<1000;i++);
   743  0051  01F7               	clrf	_i
   744  0052  01F8               	clrf	_i+1
   745  0053                     l783:
   746  0053  0878               	movf	_i+1,w
   747  0054  3A80               	xorlw	128
   748  0055  00FF               	movwf	btemp+1
   749  0056  3083               	movlw	131
   750  0057  027F               	subwf	btemp+1,w
   751  0058  1D03               	skipz
   752  0059  285C               	goto	u25
   753  005A  30E8               	movlw	232
   754  005B  0277               	subwf	_i,w
   755  005C                     u25:
   756  005C  1C03               	skipc
   757  005D  285F               	goto	u21
   758  005E  2860               	goto	u20
   759  005F                     u21:
   760  005F  2861               	goto	l787
   761  0060                     u20:
   762  0060  2868               	goto	l90
   763  0061                     l787:
   764  0061  3001               	movlw	1
   765  0062  07F7               	addwf	_i,f
   766  0063  1803               	skipnc
   767  0064  0AF8               	incf	_i+1,f
   768  0065  3000               	movlw	0
   769  0066  07F8               	addwf	_i+1,f
   770  0067  2853               	goto	l783
   771  0068                     l90:
   772                           
   773                           ;main_lab2.c: 221:  RC2=0;
   774  0068  1283               	bcf	3,5	;RP0=0, select bank0
   775  0069  1303               	bcf	3,6	;RP1=0, select bank0
   776  006A  1107               	bcf	7,2	;volatile
   777  006B                     l91:
   778  006B  0008               	return
   779  006C                     __end_of_dat:
   780                           
   781                           	psect	text3
   782  00AE                     __ptext3:	
   783 ;; *************** function _lcd_init *****************
   784 ;; Defined at:
   785 ;;		line 196 in file "main_lab2.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;                  1    wreg      void 
   792 ;; Registers used:
   793 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   799 ;;      Params:         0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    2
   806 ;; This function calls:
   807 ;;		_cmd
   808 ;; This function is called by:
   809 ;;		_main
   810 ;; This function uses a non-reentrant model
   811 ;;
   812                           
   813                           
   814                           ;psect for function _lcd_init
   815  00AE                     _lcd_init:
   816  00AE                     l801:	
   817                           ;incstack = 0
   818                           ; Regs used in _lcd_init: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   819                           
   820                           
   821                           ;main_lab2.c: 198:  cmd(0x38);
   822  00AE  3038               	movlw	56
   823  00AF  120A  118A  206C  120A  118A  	fcall	_cmd
   824                           
   825                           ;main_lab2.c: 199:  cmd(0x0c);
   826  00B4  300C               	movlw	12
   827  00B5  120A  118A  206C  120A  118A  	fcall	_cmd
   828                           
   829                           ;main_lab2.c: 200:  cmd(0x06);
   830  00BA  3006               	movlw	6
   831  00BB  120A  118A  206C  120A  118A  	fcall	_cmd
   832                           
   833                           ;main_lab2.c: 201:  cmd(0x80);
   834  00C0  3080               	movlw	128
   835  00C1  120A  118A  206C  120A  118A  	fcall	_cmd
   836  00C6                     l81:
   837  00C6  0008               	return
   838  00C7                     __end_of_lcd_init:
   839                           
   840                           	psect	text4
   841  006C                     __ptext4:	
   842 ;; *************** function _cmd *****************
   843 ;; Defined at:
   844 ;;		line 204 in file "main_lab2.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;  a               1    wreg     unsigned char 
   847 ;; Auto vars:     Size  Location     Type
   848 ;;  a               1    2[COMMON] unsigned char 
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, btemp+1
   853 ;; Tracked objects:
   854 ;;		On entry : 0/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         1       0       0       0       0
   860 ;;      Temps:          0       0       0       0       0
   861 ;;      Totals:         1       0       0       0       0
   862 ;;Total ram usage:        1 bytes
   863 ;; Hardware stack levels used:    1
   864 ;; Hardware stack levels required when called:    1
   865 ;; This function calls:
   866 ;;		Nothing
   867 ;; This function is called by:
   868 ;;		_main
   869 ;;		_lcd_init
   870 ;; This function uses a non-reentrant model
   871 ;;
   872                           
   873                           
   874                           ;psect for function _cmd
   875  006C                     _cmd:
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _cmd: [wreg+status,2+btemp+1]
   879                           ;cmd@a stored from wreg
   880  006C  00F2               	movwf	cmd@a
   881  006D                     l755:
   882                           
   883                           ;main_lab2.c: 204: void cmd(unsigned char a);main_lab2.c: 205: {;main_lab2.c: 206:  PORT
      +                          B=a;
   884  006D  0872               	movf	cmd@a,w
   885  006E  1283               	bcf	3,5	;RP0=0, select bank0
   886  006F  1303               	bcf	3,6	;RP1=0, select bank0
   887  0070  0086               	movwf	6	;volatile
   888  0071                     l757:
   889                           
   890                           ;main_lab2.c: 207:  RC0=0;
   891  0071  1007               	bcf	7,0	;volatile
   892  0072                     l759:
   893                           
   894                           ;main_lab2.c: 208:  RC1=0;
   895  0072  1087               	bcf	7,1	;volatile
   896  0073                     l761:
   897                           
   898                           ;main_lab2.c: 209:  RC2=1;
   899  0073  1507               	bsf	7,2	;volatile
   900  0074                     l763:
   901                           
   902                           ;main_lab2.c: 210:     for(i=0;i<1000;i++);
   903  0074  01F7               	clrf	_i
   904  0075  01F8               	clrf	_i+1
   905  0076                     l765:
   906  0076  0878               	movf	_i+1,w
   907  0077  3A80               	xorlw	128
   908  0078  00FF               	movwf	btemp+1
   909  0079  3083               	movlw	131
   910  007A  027F               	subwf	btemp+1,w
   911  007B  1D03               	skipz
   912  007C  287F               	goto	u15
   913  007D  30E8               	movlw	232
   914  007E  0277               	subwf	_i,w
   915  007F                     u15:
   916  007F  1C03               	skipc
   917  0080  2882               	goto	u11
   918  0081  2883               	goto	u10
   919  0082                     u11:
   920  0082  2884               	goto	l769
   921  0083                     u10:
   922  0083  288B               	goto	l85
   923  0084                     l769:
   924  0084  3001               	movlw	1
   925  0085  07F7               	addwf	_i,f
   926  0086  1803               	skipnc
   927  0087  0AF8               	incf	_i+1,f
   928  0088  3000               	movlw	0
   929  0089  07F8               	addwf	_i+1,f
   930  008A  2876               	goto	l765
   931  008B                     l85:
   932                           
   933                           ;main_lab2.c: 211:  RC2=0;
   934  008B  1283               	bcf	3,5	;RP0=0, select bank0
   935  008C  1303               	bcf	3,6	;RP1=0, select bank0
   936  008D  1107               	bcf	7,2	;volatile
   937  008E                     l86:
   938  008E  0008               	return
   939  008F                     __end_of_cmd:
   940                           
   941                           	psect	text5
   942  00D6                     __ptext5:	
   943 ;; *************** function _isr *****************
   944 ;; Defined at:
   945 ;;		line 73 in file "main_lab2.c"
   946 ;; Parameters:    Size  Location     Type
   947 ;;		None
   948 ;; Auto vars:     Size  Location     Type
   949 ;;		None
   950 ;; Return value:  Size  Location     Type
   951 ;;                  1    wreg      void 
   952 ;; Registers used:
   953 ;;		None
   954 ;; Tracked objects:
   955 ;;		On entry : 0/0
   956 ;;		On exit  : 0/0
   957 ;;		Unchanged: 0/0
   958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   959 ;;      Params:         0       0       0       0       0
   960 ;;      Locals:         0       0       0       0       0
   961 ;;      Temps:          2       0       0       0       0
   962 ;;      Totals:         2       0       0       0       0
   963 ;;Total ram usage:        2 bytes
   964 ;; Hardware stack levels used:    1
   965 ;; This function calls:
   966 ;;		Nothing
   967 ;; This function is called by:
   968 ;;		Interrupt level 1
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           
   973                           ;psect for function _isr
   974  00D6                     _isr:
   975  00D6                     i1l57:
   976  00D6  0871               	movf	??_isr+1,w
   977  00D7  008A               	movwf	10
   978  00D8  0E70               	swapf	??_isr,w
   979  00D9  0083               	movwf	3
   980  00DA  0EFE               	swapf	btemp,f
   981  00DB  0E7E               	swapf	btemp,w
   982  00DC  0009               	retfie
   983  00DD                     __end_of_isr:
   984  007E                     btemp	set	126	;btemp
   985  007E                     wtemp0	set	126
   986                           
   987                           	psect	intentry
   988  0004                     __pintentry:	
   989                           ;incstack = 0
   990                           ; Regs used in _isr: []
   991                           
   992  0004                     interrupt_function:
   993  007E                     saved_w	set	btemp
   994  0004  00FE               	movwf	btemp
   995  0005  0E03               	swapf	3,w
   996  0006  00F0               	movwf	??_isr
   997  0007  080A               	movf	10,w
   998  0008  00F1               	movwf	??_isr+1
   999  0009  120A  118A  28D6   	ljmp	_isr
  1000                           
  1001                           	psect	config
  1002                           
  1003                           ;Config register CONFIG1 @ 0x2007
  1004                           ;	Oscillator Selection bits
  1005                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1006                           ;	Watchdog Timer Enable bit
  1007                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1008                           ;	Power-up Timer Enable bit
  1009                           ;	PWRTE = OFF, PWRT disabled
  1010                           ;	RE3/MCLR pin function select bit
  1011                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1012                           ;	Code Protection bit
  1013                           ;	CP = OFF, Program memory code protection is disabled
  1014                           ;	Data Code Protection bit
  1015                           ;	CPD = OFF, Data memory code protection is disabled
  1016                           ;	Brown Out Reset Selection bits
  1017                           ;	BOREN = OFF, BOR disabled
  1018                           ;	Internal External Switchover bit
  1019                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1020                           ;	Fail-Safe Clock Monitor Enabled bit
  1021                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1022                           ;	Low Voltage Programming Enable bit
  1023                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1024                           ;	In-Circuit Debugger Mode bit
  1025                           ;	DEBUG = 0x1, unprogrammed default
  1026  2007                     	org	8199
  1027  2007  20D4               	dw	8404
  1028                           
  1029                           ;Config register CONFIG2 @ 0x2008
  1030                           ;	Brown-out Reset Selection bit
  1031                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1032                           ;	Flash Program Memory Self Write Enable bits
  1033                           ;	WRT = OFF, Write protection off
  1034  2008                     	org	8200
  1035  2008  3FFF               	dw	16383

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    show@s	PTR unsigned char  size(1) Largest target is 9
		 -> STR_1(CODE[9]), 


Critical Paths under _main in COMMON

    _main->_show
    _show->_dat
    _lcd_init->_cmd

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     169
                                              5 COMMON     2     2      0
                                _cmd
                           _lcd_init
                               _show
 ---------------------------------------------------------------------------------
 (1) _show                                                 2     2      0      93
                                              3 COMMON     2     2      0
                                _dat
 ---------------------------------------------------------------------------------
 (2) _dat                                                  1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                                _cmd
 ---------------------------------------------------------------------------------
 (2) _cmd                                                  1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _cmd
   _lcd_init
     _cmd
   _show
     _dat

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Jul 24 19:09:16 2021

                      _i 0077                        pc 0002                       l81 00C6  
                     l90 0068                       l91 006B                       l85 008B  
                     l86 008E                       l97 00AD                       u10 0083  
                     u11 0082                       u20 0060                       u21 005F  
                     u15 007F                       u25 005C                       fsr 0004  
                    l801 00AE                      l761 0073                      l763 0074  
                    l755 006D                      l765 0076                      l757 0071  
                    l781 0051                      l773 004A                      l759 0072  
                    l783 0053                      l775 004E                      l769 0084  
                    l777 004F                      l787 0061                      l779 0050  
                    l997 0090                      l999 0091                      _RC0 0038  
                    _RC1 0039                      _RC2 003A                      _RD3 0043  
                    _RD4 0044                      _RD5 0045                      _RD6 0046  
                    _RD7 0047                      u160 00AD                      u161 00AC  
                    u170 003F                      u171 003E                      _dat 0049  
                    _cmd 006C                      _isr 00D6                      fsr0 0004  
                   l1001 009D                     l1003 00A1                     l1011 001C  
                   l1013 001D                     l1005 0017                     l1015 0022  
                   l1007 001A                     l1025 0030                     l1017 0028  
                   l1009 001B                     l1027 003F                     l1019 002E  
                   ?_dat 0070                     ?_cmd 0070                     ?_isr 0070  
                   STR_1 00CD                     i1l57 00D6                     _TMR0 0001  
                   dat@b 0072                     cmd@a 0072                     _main 0017  
                   _show 008F                     btemp 007E                     start 000C  
                  ??_dat 0072                    ??_cmd 0072                    ??_isr 0070  
                  ?_main 0070                    ?_show 0070                    _ANSEL 0188  
                  _PORTB 0006                    _TRISB 0086                    main@i 0075  
                  pclath 000A                    show@s 0074                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0049  
           __end_of_show 00AE                   ??_main 0075                   ??_show 0073  
                 _ADRESH 001E                   _ANSELH 0189         __end_of_lcd_init 00C7  
                 saved_w 007E  __end_of__initialization 0013           __pcstackCOMMON 0070  
         _OPTION_REGbits 0081               __pmaintext 0017               __pintentry 0004  
              ?_lcd_init 0070               __stringtab 00C7                  __ptext1 008F  
                __ptext2 0049                  __ptext3 00AE                  __ptext4 006C  
                __ptext5 00D6             __size_of_dat 0023             __size_of_cmd 0023  
           __size_of_isr 0007               ??_lcd_init 0073     end_of_initialization 0013  
              _PORTDbits 0008                _TRISCbits 0087      start_initialization 000F  
            __end_of_dat 006C              __end_of_cmd 008F              __end_of_isr 00DD  
            __pbssCOMMON 0077                ___latbits 0002        __size_of_lcd_init 0019  
              __pstrings 00C7        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C                 _PIR1bits 000C               _ADCON0bits 001F  
            __stringbase 00CC               _ADCON1bits 009F                 _WPUBbits 0095  
            _conversion1 007A              _conversion2 0079       __end_of__stringtab 00CD  
               _lcd_init 00AE            __size_of_main 0032            __size_of_show 001F  
             _INTCONbits 000B                 intlevel1 0000                stringcode 00C7  
             _OSCCONbits 008F                 stringdir 00C7                 stringtab 00C7  
